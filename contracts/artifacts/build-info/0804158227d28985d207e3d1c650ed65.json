{
	"id": "0804158227d28985d207e3d1c650ed65",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/gainzilla.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n/*\n\n  /$$$$$$            /$$           /$$$$$$$$ /$$ /$$ /$$          \n /$$__  $$          |__/          |_____ $$ |__/| $$| $$          \n| $$  \\__/  /$$$$$$  /$$ /$$$$$$$      /$$/  /$$| $$| $$  /$$$$$$ \n| $$ /$$$$ |____  $$| $$| $$__  $$    /$$/  | $$| $$| $$ |____  $$\n| $$|_  $$  /$$$$$$$| $$| $$  \\ $$   /$$/   | $$| $$| $$  /$$$$$$$\n| $$  \\ $$ /$$__  $$| $$| $$  | $$  /$$/    | $$| $$| $$ /$$__  $$\n|  $$$$$$/|  $$$$$$$| $$| $$  | $$ /$$$$$$$$| $$| $$| $$|  $$$$$$$\n \\______/  \\_______/|__/|__/  |__/|________/|__/|__/|__/ \\_______/\n                                                                    \nTG :- https://t.me/Gainzilla_Entry\n\n*/\n\npragma solidity ^0.8.4;\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n}\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n        return c;\n    }\n\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        return c;\n    }\n}\n\ncontract Ownable is Context {\n    address private _owner;\n    address private _previousOwner;\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    constructor() {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n    \n    function renounceOwnership() public virtual onlyOwner() {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n}\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n\ninterface IUniswapV2Factory {\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n}\n\ninterface IUniswapV2Router02 {\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint256 amountIn,\n        uint256 amountOutMin,\n        address[] calldata path,\n        address to,\n        uint256 deadline\n    ) external;\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    ) external payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity);\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n\nabstract contract IERC20Extented is IERC20 {\n    function decimals() external view virtual returns (uint8);\n    function name() external view virtual returns (string memory);\n    function symbol() external view virtual returns (string memory);\n}\n\ncontract gainZilla is Context, IERC20, IERC20Extented, Ownable {\n    using SafeMath for uint256;\n    string private constant _name = \"GainZilla\";\n    string private constant _symbol = \"RAWR\";\n    uint8 private constant _decimals = 9;\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n    mapping(address => bool) private _isExcludedFromFee;\n    uint256 private constant _tTotal = 1000000000 * 10**9; // 1 Billion Supply\n    uint256 private _firstBlock;\n    uint256 private _botBlocks;\n    uint256 public _maxWalletAmount = 10000001 * 10**9;\n    uint256 public numTokensToSwap = 1000000 * 10**9; // 0.1% - 1 Million (Swap and Liquify)\n\n    // buy fees\n    uint256 public _buyLiquidityFee = 0; // divided by 1000\n    uint256 private _previousBuyLiquidityFee = _buyLiquidityFee;\n    uint256 public _buyEcosystemFee = 0; // divided by 1000\n    uint256 private _previousBuyEcosystemFee = _buyEcosystemFee;\n    uint256 public _buyMarketingFee = 0; // divided by 1000\n    uint256 private _previousBuyMarketingFee = _buyMarketingFee;\n    uint256 public _buyTeamFee = 0; // divided by 1000\n    uint256 private _previousBuyTeamFee = _buyTeamFee;\n\n    // sell fees\n    uint256 public _sellLiquidityFee = 0; // divided by 1000\n    uint256 private _previousSellLiquidityFee = _sellLiquidityFee;\n    uint256 public _sellEcosystemFee = 0; // divided by 1000\n    uint256 private _previousSellEcosystemFee = _sellEcosystemFee;\n    uint256 public _sellMarketingFee = 0; // divided by 1000\n    uint256 private _previousSellMarketingFee = _sellMarketingFee;\n    uint256 public _sellTeamFee = 0; // divided by 1000\n    uint256 private _previousSellTeamFee = _sellTeamFee;\n    uint256 public transferFeeIncreaseFactor = 0; // divided by 100\n\n    struct FeeBreakdown {\n        uint256 tLiquidity;\n        uint256 tMarketing;\n        uint256 tTeam;\n        uint256 tEcosystem;\n        uint256 tAmount;\n    }\n\n    struct StrongHandsConfig {\n        bool enabled;\n        uint32 duration;\n        mapping(address => uint256) walletList;\n    }\n    StrongHandsConfig public cooldown;\n\n    struct DiamondFloor {\n        bool enabled;\n        uint16 triggerPercentage;\n        uint256 athPrice;\n        bool sellStopped;\n        uint256 blockedAth;\n    }\n    DiamondFloor public diamondFloor;\n\n    mapping(address => bool) private bots;\n    address payable private _marketingAddress = payable(owner());\n    address payable private _teamAddress = payable(owner());\n    address payable private _ecosystemAddress = payable(owner());\n    address payable private _lpRecipient = payable(owner());\n    IUniswapV2Router02 private uniswapV2Router;\n    address public uniswapV2Pair;\n    uint256 private _maxTxAmount;\n\n    bool public tradingOpen = false;\n    bool private inSwap = false;\n    bool public canPause = true;\n    bool public canBlackList = true;\n    bool public canChangeTax = true;\n\n    event MaxTxAmountUpdated(uint256 _maxTxAmount);\n    event BuyFeesUpdated(uint256 _buyMarketingFee, uint256 _buyLiquidityFee, uint256 _buyTeamFee, uint256 _buyEcosystemFee);\n    event SellFeesUpdated(uint256 _sellMarketingFee, uint256 _sellLiquidityFee, uint256 _sellTeamFee, uint256 _sellEcosystemFee);\n\n    modifier lockTheSwap {\n        inSwap = true;\n        _;\n        inSwap = false;\n    }\n    constructor() {\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\n        uniswapV2Router = _uniswapV2Router;\n        _approve(address(this), address(uniswapV2Router), _tTotal);\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH());\n        IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max);\n\n        _maxTxAmount = _tTotal; // start off transaction limit at 100% of total supply\n\n        _balances[_msgSender()] = _tTotal;\n        _isExcludedFromFee[owner()] = true;\n        _isExcludedFromFee[address(this)] = true;\n        emit Transfer(address(0), _msgSender(), _tTotal);\n    }\n\n    function name() override external pure returns (string memory) {\n        return _name;\n    }\n\n    function symbol() override external pure returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() override external pure returns (uint8) {\n        return _decimals;\n    }\n\n    function totalSupply() external pure override returns (uint256) {\n        return _tTotal;\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    function isBot(address account) public view returns (bool) {\n        return bots[account];\n    }\n    \n    function transfer(address recipient, uint256 amount) external override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) external view override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) external override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    function removeAllFee() private {\n        _previousBuyMarketingFee = _buyMarketingFee;\n        _previousBuyLiquidityFee = _buyLiquidityFee;\n        _previousBuyTeamFee = _buyTeamFee;\n        _previousBuyEcosystemFee = _buyEcosystemFee;\n        \n        _buyMarketingFee = 0;\n        _buyLiquidityFee = 0;\n        _buyTeamFee = 0;\n        _buyEcosystemFee = 0;\n\n        _previousSellMarketingFee = _sellMarketingFee;\n        _previousSellLiquidityFee = _sellLiquidityFee;\n        _previousSellTeamFee = _sellTeamFee;\n        _previousSellEcosystemFee = _sellEcosystemFee;\n        \n        _sellMarketingFee = 0;\n        _sellLiquidityFee = 0;\n        _sellTeamFee = 0;\n        _sellEcosystemFee = 0;\n    }\n    \n    function restoreAllFee() private {\n        _buyMarketingFee = _previousBuyMarketingFee;\n        _buyLiquidityFee = _previousBuyLiquidityFee;\n        _buyTeamFee = _previousBuyTeamFee;\n        _buyEcosystemFee = _previousBuyEcosystemFee;\n\n        _sellMarketingFee = _previousSellMarketingFee;\n        _sellLiquidityFee = _previousSellLiquidityFee;\n        _sellTeamFee = _previousSellTeamFee;\n        _sellEcosystemFee = _previousSellEcosystemFee;\n    }\n\n    function _approve(address owner, address spender, uint256 amount) private {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n    \n    function _transfer(address from, address to, uint256 amount) private {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n        require(amount > 0, \"Transfer amount must be greater than zero\");\n\n        bool takeFee = true;\n\n        if (from != owner() && to != owner() && from != address(this) && to != address(this)) {\n            require(tradingOpen, \"Trading is not active\");\n            if (from == uniswapV2Pair && to != address(uniswapV2Router)) {//buys\n\n                if (block.timestamp <= _firstBlock.add(_botBlocks)) {\n                    bots[to] = true;\n                }\n\n                if (!_isExcludedFromFee[to]) {\n                    require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\");\n                }\n            }\n            \n            if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells\n                require(!bots[from] && !bots[to]);\n\n                // Added cooldown check here\n                if (cooldown.enabled) {\n                    require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\");\n                    cooldown.walletList[from] = block.timestamp + cooldown.duration;\n                }\n\n                // Diamond Floor check\n                if (diamondFloor.enabled) {\n                    require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\");\n                    _checkPriceConditions();\n                }\n                \n                uint256 contractTokenBalance = balanceOf(address(this));\n\n                if (contractTokenBalance >= numTokensToSwap) {\n                    if (contractTokenBalance > 0) {\n                        if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {\n                            uint256 autoLPamount = _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee));\n                            uint256 minusLP = 0;\n                            if (contractTokenBalance >= autoLPamount) {\n                                minusLP = contractTokenBalance.sub(autoLPamount);\n                            }\n                            swapAndLiquify(autoLPamount, minusLP);\n                        }\n                    }\n                    uint256 contractETHBalance = address(this).balance;\n                    if (contractETHBalance > 0) {\n                        sendETHToFee(address(this).balance);\n                    }\n                }\n                    \n            }\n\n            if(from != uniswapV2Pair && to != uniswapV2Pair) { //transfers\n                \n                if (!_isExcludedFromFee[to]) {\n                    require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\");\n                }\n            }\n        }\n\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\n            takeFee = false;\n        }\n        \n        _tokenTransfer(from, to, amount, takeFee);\n    }   \n\n    function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = uniswapV2Router.WETH();\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp);\n    }\n\n    function _checkPriceConditions() private {\n        uint256 currentPrice = pairPrice();\n        if (currentPrice == 0) return;\n\n        if (currentPrice > diamondFloor.athPrice) {\n            diamondFloor.athPrice = currentPrice;\n            diamondFloor.sellStopped = false;\n            return;\n        }\n\n        uint256 thresholdPrice = diamondFloor.athPrice\n            .mul(1000).sub(diamondFloor.triggerPercentage)\n            .div(1000);\n\n        if (currentPrice < thresholdPrice) {\n            diamondFloor.sellStopped = true;\n            diamondFloor.blockedAth = diamondFloor.athPrice;\n        }\n\n        if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {\n            diamondFloor.sellStopped = false;\n            diamondFloor.athPrice = currentPrice;\n        }\n    }\n\n    function pairPrice() public view returns (uint256) {\n        (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(uniswapV2Pair).getReserves();\n        if (reserve0 == 0 || reserve1 == 0) return 0;\n        \n        return IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?\n            uint256(reserve1).mul(1e18).div(uint256(reserve0)) :\n            uint256(reserve0).mul(1e18).div(uint256(reserve1));\n    }\n    \n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\n\n        // add the liquidity\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\n              address(this),\n              tokenAmount,\n              0, // slippage is unavoidable\n              0, // slippage is unavoidable\n              _lpRecipient,\n              block.timestamp\n          );\n    }\n  \n    function swapAndLiquify(uint256 lpAmount, uint256 contractTokenBalance) private lockTheSwap {\n        uint256 half = lpAmount.div(2);\n        uint256 otherHalf = lpAmount.sub(half);\n        uint256 initialBalance = address(this).balance;\n        swapTokensForEth(contractTokenBalance.add(half));\n        uint256 newBalance = address(this).balance.sub(initialBalance);\n        if (otherHalf > 0) {\n            addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half)));\n        }\n    }\n\n    function sendETHToFee(uint256 amount) private {\n        uint256 totalFees = _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee);\n        if (totalFees != 0) {\n            uint256 marketingPortion = amount.mul(_sellMarketingFee).div(totalFees);\n            uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees);\n            uint256 ecoPortion = amount.sub(marketingPortion).sub(teamPortion);\n            if (marketingPortion > 0) {\n                _marketingAddress.transfer(marketingPortion);\n            }\n            if (teamPortion > 0) {\n                _teamAddress.transfer(teamPortion);\n            }\n            if (ecoPortion > 0) {\n                _ecosystemAddress.transfer(ecoPortion);\n            }\n        }\n    }\n\n    function openTrading(uint256 botBlocks) external onlyOwner() {\n        _firstBlock = block.timestamp;\n        _botBlocks = botBlocks;\n        tradingOpen = true;\n    }\n\n    function enableToken() external onlyOwner() {\n        tradingOpen = true;\n    }\n\n    function disableToken() external onlyOwner() {\n        require(canPause, \"this contract cannot be paused\");\n        tradingOpen = false;\n    }\n\n    function disablePauseAbility() onlyOwner() external {\n        canPause = false;\n    }\n\n    function manualswap() external onlyOwner() {\n        uint256 contractBalance = balanceOf(address(this));\n        if (contractBalance > 0) {\n            swapTokensForEth(contractBalance);\n        }\n    }\n\n    function manualsend() external onlyOwner() {\n        uint256 contractETHBalance = address(this).balance;\n        if (contractETHBalance > 0) {\n            payable(address(owner())).transfer(contractETHBalance);\n        }\n    }\n\n    function manualSendToken(address token) external onlyOwner() {\n        uint256 amount = IERC20(token).balanceOf(address(this));\n        IERC20(token).transfer(owner(), amount);\n    }\n\n    function _tokenTransfer(address sender, address recipient, uint256 amount, bool takeFee) private {\n        if (!takeFee) { \n                removeAllFee();\n        }\n        _transferStandard(sender, recipient, amount);\n        restoreAllFee();\n    }\n\n    function _transferStandard(address sender, address recipient, uint256 amount) private {\n        FeeBreakdown memory fees;\n        if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys\n            fees.tMarketing = amount.mul(_buyMarketingFee).div(1000);\n            fees.tLiquidity = amount.mul(_buyLiquidityFee).div(1000);\n            fees.tTeam = amount.mul(_buyTeamFee).div(1000);\n            fees.tEcosystem = amount.mul(_buyEcosystemFee).div(1000);\n        }\n        if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells\n            fees.tMarketing = amount.mul(_sellMarketingFee).div(1000);\n            fees.tLiquidity = amount.mul(_sellLiquidityFee).div(1000);\n            fees.tTeam = amount.mul(_sellTeamFee).div(1000);\n            fees.tEcosystem = amount.mul(_sellEcosystemFee).div(1000);\n        }\n        if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer\n            fees.tMarketing = (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tLiquidity = (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tTeam = (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n            fees.tEcosystem = (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100);\n        }\n        \n        fees.tAmount = amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem);\n        \n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(fees.tAmount);\n        _balances[address(this)] = _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem));\n        \n        emit Transfer(sender, recipient, fees.tAmount);\n    }\n    \n    receive() external payable {}\n\n    function excludeFromFee(address account) public onlyOwner() {\n        _isExcludedFromFee[account] = true;\n    }\n\n    function includeInFee(address account) external onlyOwner() {\n        _isExcludedFromFee[account] = false;\n    }\n    \n    function removeBot(address account) external onlyOwner() {\n        bots[account] = false;\n    }\n\n    function addBot(address account) external onlyOwner() {\n        require(canBlackList, \"this contract cannot blacklist addresses\");\n        bots[account] = true;\n    }\n\n    function disableBlackListing() onlyOwner() external {\n        canBlackList = false;\n    }\n    \n    function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {\n        transferFeeIncreaseFactor = _multiplier;\n    }\n\n    function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {\n        require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\");\n        require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\");\n        _maxWalletAmount = maxWalletAmount;\n    }\n\n    function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {\n        uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee);\n        require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\");\n        require(canChangeTax, \"This function is diabled\");\n\n        _buyMarketingFee = marketingFee;\n        _buyLiquidityFee = liquidityFee;\n        _buyTeamFee = teamFee;\n        _buyEcosystemFee = ecosystemFee;\n        \n        _previousBuyMarketingFee = _buyMarketingFee;\n        _previousBuyLiquidityFee = _buyLiquidityFee;\n        _previousBuyTeamFee = _buyTeamFee;\n        _previousBuyEcosystemFee = _buyEcosystemFee;\n        \n        emit BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee);\n    }\n\n    function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {\n        uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee);\n        require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\");\n        require(canChangeTax, \"This function is diabled\");\n\n        _sellMarketingFee = marketingFee;\n        _sellLiquidityFee = liquidityFee;\n        _sellTeamFee = teamFee;\n        _sellEcosystemFee = ecosystemFee;\n        \n        _previousSellMarketingFee = _sellMarketingFee;\n        _previousSellLiquidityFee = _sellLiquidityFee;\n        _previousSellTeamFee = _sellTeamFee;\n        _previousSellEcosystemFee = _sellEcosystemFee;\n        \n        emit SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee);\n    }\n\n    function disableTaxChange() onlyOwner() external {\n        canChangeTax = false;\n    }\n\n    function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {\n        _ecosystemAddress = ecosystemAddress;\n    }\n    \n    function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {\n        _marketingAddress = marketingAddress;\n    }\n    \n    function updateTeamAddress(address payable teamAddress) external onlyOwner() {\n        _teamAddress = teamAddress;\n    } \n\n    function updateLpRecipient(address payable lpRecipient) external onlyOwner() {\n        _lpRecipient = lpRecipient;\n    }\n\n    function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {\n        numTokensToSwap = numTokens;\n    }\n\n    function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {\n        cooldown.enabled = enabled;\n        cooldown.duration = duration * 1 minutes;\n    }\n\n    function cooldownRemaining(address account) public view returns (\n        uint256 days_, \n        uint256 hours_, \n        uint256 minutes_, \n        uint256 seconds_\n    ) {\n        uint256 remaining = cooldown.walletList[account] > block.timestamp ? \n            cooldown.walletList[account].sub(block.timestamp) : 0;\n        \n        days_ = remaining.div(86400);\n        remaining %= 86400;\n        hours_ = remaining.div(3600);\n        remaining %= 3600;\n        minutes_ = remaining.div(60);\n        seconds_ = remaining % 60;\n    }\n\n    function configureDiamondFloor(bool enabled, uint16 triggerPercentage) external onlyOwner {\n        require(triggerPercentage < 1000, \"Trigger percentage must be < 1000 (100%)\");\n        diamondFloor.enabled = enabled;\n        diamondFloor.triggerPercentage = triggerPercentage;\n        \n        // Initialize ATH price when enabling\n        if (enabled && diamondFloor.athPrice == 0) {\n            uint256 currentPrice = pairPrice();\n            if (currentPrice > 0) {\n                diamondFloor.athPrice = currentPrice;\n            }\n        }\n    }\n\n    function ATHvariance() public view returns (int256) {\n    if (diamondFloor.athPrice == 0) return 0;\n    uint256 currentPrice = pairPrice();\n    \n    return currentPrice > diamondFloor.athPrice ?\n        // Positive percentage (increase)\n        int256(\n            currentPrice.sub(diamondFloor.athPrice)\n            .mul(100e1) // Multiply by 100 to get percentage and 1e1 for decimals\n            .div(diamondFloor.athPrice)\n        ) :\n        // Negative percentage (decrease)\n        -int256(\n            diamondFloor.athPrice.sub(currentPrice)\n            .mul(100e1) // Multiply by 100 to get percentage and 1e1 for decimals\n            .div(diamondFloor.athPrice)\n        );\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/gainzilla.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Extented": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IERC20Extented\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPair(address,address)": "c9c65396"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":2611:4000  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/gainzilla.sol\":2799:2948  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  0x00\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"contracts/gainzilla.sol\":2799:2948  constructor() {... */\n  pop\n    /* \"contracts/gainzilla.sol\":2611:4000  contract Ownable is Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":2611:4000  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n    tag_4:\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      0x40\n      dup1\n      mload\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":494:568   */\n      dup3\n      mstore\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":482:484   */\n      0x20\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      add\n      swap1\n      return\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_7:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      sload(0x00)\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1188:1190   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1170:1191   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1207:1225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1200:1230   */\n      mstore\n        /* \"#utility.yul\":1266:1300   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1246:1264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1239:1301   */\n      mstore\n        /* \"#utility.yul\":1318:1336   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      dup4\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/gainzilla.sol\":3989:3990  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3972:3991  _owner = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      sload(0x00)\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1188:1190   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1170:1191   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1207:1225   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1200:1230   */\n      mstore\n        /* \"#utility.yul\":1266:1300   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1246:1264   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1239:1301   */\n      mstore\n        /* \"#utility.yul\":1318:1336   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n        /* \"#utility.yul\":1160:1342   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_26:\n        /* \"contracts/gainzilla.sol\":3390:3412  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":781:783   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":763:784   */\n      mstore\n        /* \"#utility.yul\":820:822   */\n      0x26\n        /* \"#utility.yul\":800:818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":793:823   */\n      mstore\n        /* \"#utility.yul\":859:893   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":839:857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":832:894   */\n      mstore\n        /* \"#utility.yul\":930:938   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":910:928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":903:939   */\n      mstore\n        /* \"#utility.yul\":956:975   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_20\n        /* \"#utility.yul\":753:981   */\n      jump\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_29:\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      tag_32\n        /* \"contracts/gainzilla.sol\":3484:3492  newOwner */\n      dup2\n        /* \"contracts/gainzilla.sol\":3465:3483  _transferOwnership */\n      tag_33\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_33:\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      0x00\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/gainzilla.sol\":3762:3779  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      swap1\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:343   */\n    tag_14:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:96   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":147:153   */\n      dup1\n        /* \"#utility.yul\":139:145   */\n      dup2\n        /* \"#utility.yul\":132:154   */\n      revert\n        /* \"#utility.yul\":94:96   */\n    tag_38:\n        /* \"#utility.yul\":191:200   */\n      dup2\n        /* \"#utility.yul\":178:201   */\n      calldataload\n        /* \"#utility.yul\":241:283   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":234:239   */\n      dup2\n        /* \"#utility.yul\":230:284   */\n      and\n        /* \"#utility.yul\":223:228   */\n      dup2\n        /* \"#utility.yul\":220:285   */\n      eq\n        /* \"#utility.yul\":210:212   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":304:310   */\n      dup2\n        /* \"#utility.yul\":296:302   */\n      dup3\n        /* \"#utility.yul\":289:311   */\n      revert\n        /* \"#utility.yul\":210:212   */\n    tag_39:\n        /* \"#utility.yul\":332:337   */\n      swap4\n        /* \"#utility.yul\":84:343   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a6be7260cabe3cf7f105d497b4a94d988b2cb4e0f7f87d0b9bd824952eb729d564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061039a806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461007c575b600080fd5b61004e61008f565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61004e61008a366004610329565b610184565b60005473ffffffffffffffffffffffffffffffffffffffff163314610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610205576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010c565b73ffffffffffffffffffffffffffffffffffffffff81166102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161010c565b6102b1816102b4565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461035d578182fd5b939250505056fea2646970667358221220a6be7260cabe3cf7f105d497b4a94d988b2cb4e0f7f87d0b9bd824952eb729d564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x39A DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x2B1 DUP2 PUSH2 0x2B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x35D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBE PUSH19 0x60CABE3CF7F105D497B4A94D988B2CB4E0F7F8 PUSH30 0xB9BD824952EB729D564736F6C6343000804003300000000000000000000 ",
							"sourceMap": "2611:1389:0:-:0;;;2799:149;;;;;;;;;-1:-1:-1;2823:17:0;2865:18;;-1:-1:-1;;;;;;2865:18:0;818:10;2865:18;;;;;2898:43;;818:10;;;;2898:43;;2823:17;;2898:43;2799:149;2611:1389;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1344:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:259:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "139:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "147:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "165:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "191:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "178:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "178:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "169:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "287:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "296:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "304:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "289:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "289:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "289:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "223:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "234:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "241:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "230:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "230:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "220:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "220:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "213:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:73:1"
															},
															"nodeType": "YulIf",
															"src": "210:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "322:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "332:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "449:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "459:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "471:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "482:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "459:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "501:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "524:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "512:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "494:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "418:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "429:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "440:4:1",
														"type": ""
													}
												],
												"src": "348:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "753:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "770:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "781:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "763:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "763:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "815:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "800:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "820:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "793:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "854:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "859:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "832:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "925:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "910:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "930:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "948:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "960:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "971:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "956:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "956:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "948:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "744:4:1",
														"type": ""
													}
												],
												"src": "579:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1160:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1177:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1188:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1170:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1211:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1222:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1200:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1200:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1250:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1261:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1266:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1333:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1310:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1137:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1151:4:1",
														"type": ""
													}
												],
												"src": "986:356:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461007c575b600080fd5b61004e61008f565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61004e61008a366004610329565b610184565b60005473ffffffffffffffffffffffffffffffffffffffff163314610115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610205576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010c565b73ffffffffffffffffffffffffffffffffffffffff81166102a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161010c565b6102b1816102b4565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561033a578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461035d578182fd5b939250505056fea2646970667358221220a6be7260cabe3cf7f105d497b4a94d988b2cb4e0f7f87d0b9bd824952eb729d564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x329 JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x205 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x2A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x10C JUMP JUMPDEST PUSH2 0x2B1 DUP2 PUSH2 0x2B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x35D JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBE PUSH19 0x60CABE3CF7F105D497B4A94D988B2CB4E0F7F8 PUSH30 0xB9BD824952EB729D564736F6C6343000804003300000000000000000000 ",
							"sourceMap": "2611:1389:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3851:147;;;:::i;:::-;;2954:77;2992:7;3018:6;2954:77;;;3018:6;;;;494:74:1;;2954:77:0;;;;;482:2:1;2954:77:0;;;3302:198;;;;;;:::i;:::-;;:::i;3851:147::-;3076:6;;:22;:6;818:10;3076:22;3068:67;;;;;;;1188:2:1;3068:67:0;;;1170:21:1;;;1207:18;;;1200:30;1266:34;1246:18;;;1239:62;1318:18;;3068:67:0;;;;;;;;;3959:1:::1;3943:6:::0;;3922:40:::1;::::0;::::1;3943:6:::0;;::::1;::::0;3922:40:::1;::::0;3959:1;;3922:40:::1;3989:1;3972:19:::0;;;::::1;::::0;;3851:147::o;3302:198::-;3076:6;;:22;:6;818:10;3076:22;3068:67;;;;;;;1188:2:1;3068:67:0;;;1170:21:1;;;1207:18;;;1200:30;1266:34;1246:18;;;1239:62;1318:18;;3068:67:0;1160:182:1;3068:67:0;3390:22:::1;::::0;::::1;3382:73;;;::::0;::::1;::::0;;781:2:1;3382:73:0::1;::::0;::::1;763:21:1::0;820:2;800:18;;;793:30;859:34;839:18;;;832:62;930:8;910:18;;;903:36;956:19;;3382:73:0::1;753:228:1::0;3382:73:0::1;3465:28;3484:8;3465:18;:28::i;:::-;3302:198:::0;:::o;3654:187::-;3727:16;3746:6;;;3762:17;;;;;;;;;;3794:40;;3746:6;;;;;;;3794:40;;3727:16;3794:40;3654:187;;:::o;14:329:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;241:42;234:5;230:54;223:5;220:65;210:2;;304:6;296;289:22;210:2;332:5;84:259;-1:-1:-1;;;84:259:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "184400",
								"executionCost": "22599",
								"totalCost": "206999"
							},
							"external": {
								"owner()": "980",
								"renounceOwnership()": "24104",
								"transferOwnership(address)": "23533"
							},
							"internal": {
								"_transferOwnership(address)": "22394"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2799,
									"end": 2948,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2611,
									"end": 4000,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6be7260cabe3cf7f105d497b4a94d988b2cb4e0f7f87d0b9bd824952eb729d564736f6c63430008040033",
									".code": [
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2611,
											"end": 4000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 482,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1200,
											"end": 1230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1300,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1318,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1342,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 763,
											"end": 784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 800,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 800,
											"end": 818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 793,
											"end": 823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 859,
											"end": 893,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 839,
											"end": 857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 839,
											"end": 857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 832,
											"end": 894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 930,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 910,
											"end": 928,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 910,
											"end": 928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 910,
											"end": 928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 903,
											"end": 939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 956,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 956,
											"end": 975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 981,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 343,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14,
											"end": 343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 132,
											"end": 154,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 96,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 94,
											"end": 96,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 191,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 201,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 283,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 234,
											"end": 239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 230,
											"end": 284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 296,
											"end": 302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 289,
											"end": 311,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 210,
											"end": 212,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 210,
											"end": 212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 332,
											"end": 337,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 84,
											"end": 343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 84,
											"end": 343,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 228,
								"contract": "contracts/gainzilla.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/gainzilla.sol:Ownable",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":1505:2609  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":1505:2609  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122022017d96181d8d83547688d7f2ea7fceb6d4f46ad0c1f13e7881129dc425487b64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022017d96181d8d83547688d7f2ea7fceb6d4f46ad0c1f13e7881129dc425487b64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 ADD PUSH30 0x96181D8D83547688D7F2EA7FCEB6D4F46AD0C1F13E7881129DC425487B64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "1505:1104:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1505:1104:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022017d96181d8d83547688d7f2ea7fceb6d4f46ad0c1f13e7881129dc425487b64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 ADD PUSH30 0x96181D8D83547688D7F2EA7FCEB6D4F46AD0C1F13E7881129DC425487B64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
							"sourceMap": "1505:1104:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1505,
									"end": 2609,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022017d96181d8d83547688d7f2ea7fceb6d4f46ad0c1f13e7881129dc425487b64736f6c63430008040033",
									".code": [
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1505,
											"end": 2609,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"gainZilla": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyMarketingFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyLiquidityFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyTeamFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_buyEcosystemFee",
									"type": "uint256"
								}
							],
							"name": "BuyFeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_maxTxAmount",
									"type": "uint256"
								}
							],
							"name": "MaxTxAmountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellMarketingFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellLiquidityFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellTeamFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_sellEcosystemFee",
									"type": "uint256"
								}
							],
							"name": "SellFeesUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ATHvariance",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyEcosystemFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyLiquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyMarketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_buyTeamFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_maxWalletAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellEcosystemFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellLiquidityFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellMarketingFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_sellTeamFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canBlackList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canChangeTax",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "canPause",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercentage",
									"type": "uint16"
								}
							],
							"name": "configureDiamondFloor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"name": "configureStrongHands",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cooldown",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint32",
									"name": "duration",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "cooldownRemaining",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "days_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "hours_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minutes_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "seconds_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "diamondFloor",
							"outputs": [
								{
									"internalType": "bool",
									"name": "enabled",
									"type": "bool"
								},
								{
									"internalType": "uint16",
									"name": "triggerPercentage",
									"type": "uint16"
								},
								{
									"internalType": "uint256",
									"name": "athPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "sellStopped",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "blockedAth",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableBlackListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disablePauseAbility",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableTaxChange",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "disableToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "excludeFromFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "includeInFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isBot",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "manualSendToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manualsend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "manualswap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "numTokensToSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "botBlocks",
									"type": "uint256"
								}
							],
							"name": "openTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pairPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "removeBot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystemFee",
									"type": "uint256"
								}
							],
							"name": "setBuyTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "maxWalletAmount",
									"type": "uint256"
								}
							],
							"name": "setMaxWalletAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketingFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidityFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "teamFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ecosystemFee",
									"type": "uint256"
								}
							],
							"name": "setSellTaxes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_multiplier",
									"type": "uint256"
								}
							],
							"name": "setTransferTransactionMultiplier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferFeeIncreaseFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Pair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "ecosystemAddress",
									"type": "address"
								}
							],
							"name": "updateEcosystemAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "lpRecipient",
									"type": "address"
								}
							],
							"name": "updateLpRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "marketingAddress",
									"type": "address"
								}
							],
							"name": "updateMarketingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "numTokens",
									"type": "uint256"
								}
							],
							"name": "updateNumTokensToSwap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "teamAddress",
									"type": "address"
								}
							],
							"name": "updateTeamAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/gainzilla.sol\":8181:30551  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/gainzilla.sol\":8779:8795  10000001 * 10**9 */\n  0x2386f2ab5bca00\n    /* \"contracts/gainzilla.sol\":8745:8795  uint256 public _maxWalletAmount = 10000001 * 10**9 */\n  0x07\n  sstore\n    /* \"contracts/gainzilla.sol\":8834:8849  1000000 * 10**9 */\n  0x038d7ea4c68000\n    /* \"contracts/gainzilla.sol\":8801:8849  uint256 public numTokensToSwap = 1000000 * 10**9 */\n  0x08\n  sstore\n    /* \"contracts/gainzilla.sol\":8945:8946  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":8911:8946  uint256 public _buyLiquidityFee = 0 */\n  0x09\n  sstore\n    /* \"contracts/gainzilla.sol\":9014:9030  _buyLiquidityFee */\n  sload(0x09)\n    /* \"contracts/gainzilla.sol\":8971:9030  uint256 private _previousBuyLiquidityFee = _buyLiquidityFee */\n  0x0a\n  sstore\n    /* \"contracts/gainzilla.sol\":9070:9071  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9036:9071  uint256 public _buyEcosystemFee = 0 */\n  0x0b\n  sstore\n    /* \"contracts/gainzilla.sol\":9139:9155  _buyEcosystemFee */\n  sload(0x0b)\n    /* \"contracts/gainzilla.sol\":9096:9155  uint256 private _previousBuyEcosystemFee = _buyEcosystemFee */\n  0x0c\n  sstore\n    /* \"contracts/gainzilla.sol\":9195:9196  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9161:9196  uint256 public _buyMarketingFee = 0 */\n  0x0d\n  sstore\n    /* \"contracts/gainzilla.sol\":9264:9280  _buyMarketingFee */\n  sload(0x0d)\n    /* \"contracts/gainzilla.sol\":9221:9280  uint256 private _previousBuyMarketingFee = _buyMarketingFee */\n  0x0e\n  sstore\n    /* \"contracts/gainzilla.sol\":9315:9316  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9286:9316  uint256 public _buyTeamFee = 0 */\n  0x0f\n  sstore\n    /* \"contracts/gainzilla.sol\":9379:9390  _buyTeamFee */\n  sload(0x0f)\n    /* \"contracts/gainzilla.sol\":9341:9390  uint256 private _previousBuyTeamFee = _buyTeamFee */\n  0x10\n  sstore\n    /* \"contracts/gainzilla.sol\":9449:9450  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9414:9450  uint256 public _sellLiquidityFee = 0 */\n  0x11\n  sstore\n    /* \"contracts/gainzilla.sol\":9519:9536  _sellLiquidityFee */\n  sload(0x11)\n    /* \"contracts/gainzilla.sol\":9475:9536  uint256 private _previousSellLiquidityFee = _sellLiquidityFee */\n  0x12\n  sstore\n    /* \"contracts/gainzilla.sol\":9577:9578  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9542:9578  uint256 public _sellEcosystemFee = 0 */\n  0x13\n  sstore\n    /* \"contracts/gainzilla.sol\":9647:9664  _sellEcosystemFee */\n  sload(0x13)\n    /* \"contracts/gainzilla.sol\":9603:9664  uint256 private _previousSellEcosystemFee = _sellEcosystemFee */\n  0x14\n  sstore\n    /* \"contracts/gainzilla.sol\":9705:9706  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9670:9706  uint256 public _sellMarketingFee = 0 */\n  0x15\n  sstore\n    /* \"contracts/gainzilla.sol\":9775:9792  _sellMarketingFee */\n  sload(0x15)\n    /* \"contracts/gainzilla.sol\":9731:9792  uint256 private _previousSellMarketingFee = _sellMarketingFee */\n  0x16\n  sstore\n    /* \"contracts/gainzilla.sol\":9828:9829  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9798:9829  uint256 public _sellTeamFee = 0 */\n  0x17\n  sstore\n    /* \"contracts/gainzilla.sol\":9893:9905  _sellTeamFee */\n  sload(0x17)\n    /* \"contracts/gainzilla.sol\":9854:9905  uint256 private _previousSellTeamFee = _sellTeamFee */\n  0x18\n  sstore\n    /* \"contracts/gainzilla.sol\":9954:9955  0 */\n  0x00\n    /* \"contracts/gainzilla.sol\":9911:9955  uint256 public transferFeeIncreaseFactor = 0 */\n  0x19\n  sstore\n    /* \"contracts/gainzilla.sol\":10619:10626  owner() */\n  tag_1\n    /* \"contracts/gainzilla.sol\":10619:10624  owner */\n  shl(0x20, tag_2)\n    /* \"contracts/gainzilla.sol\":10619:10626  owner() */\n  0x20\n  shr\n  jump\t// in\ntag_1:\n    /* \"contracts/gainzilla.sol\":10567:10627  address payable private _marketingAddress = payable(owner()) */\n  0x21\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x00\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  sload\n    /* \"contracts/gainzilla.sol\":10633:10688  address payable private _teamAddress = payable(owner()) */\n  0x22\n  dup1\n  sload\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  swap2\n  swap1\n  swap4\n  and\n    /* \"contracts/gainzilla.sol\":10633:10688  address payable private _teamAddress = payable(owner()) */\n  swap1\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/gainzilla.sol\":10694:10754  address payable private _ecosystemAddress = payable(owner()) */\n  0x23\n  dup1\n  sload\n  dup3\n  and\n  dup4\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":10760:10815  address payable private _lpRecipient = payable(owner()) */\n  0x24\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":10938:10969  bool public tradingOpen = false */\n  0x28\n  dup1\n  sload\n  not(0xffffffffff)\n    /* \"contracts/gainzilla.sol\":11078:11109  bool public canChangeTax = true */\n  and\n  0x0101010000\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":11515:12247  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_6\n  jumpi\n  0x00\n  dup1\n  revert\ntag_6:\n  pop\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  0x00\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":2865:2883  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/gainzilla.sol\":2823:2840  address msgSender */\n  dup3\n  swap1\n    /* \"contracts/gainzilla.sol\":2898:2941  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/gainzilla.sol\":11649:11664  uniswapV2Router */\n  0x25\n    /* \"contracts/gainzilla.sol\":11649:11683  uniswapV2Router = _uniswapV2Router */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/gainzilla.sol\":11596:11638  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  0x10ed43c718714eb63d5aa57b78b54704e256024e\n    /* \"contracts/gainzilla.sol\":11649:11683  uniswapV2Router = _uniswapV2Router */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/gainzilla.sol\":11693:11751  _approve(address(this), address(uniswapV2Router), _tTotal) */\n  tag_13\n    /* \"contracts/gainzilla.sol\":11710:11714  this */\n  address\n    /* \"contracts/gainzilla.sol\":11596:11638  0x10ED43C718714eb63d5aA57B78B54704E256024E */\n  dup3\n    /* \"contracts/gainzilla.sol\":8636:8654  1000000000 * 10**9 */\n  0x0de0b6b3a7640000\n    /* \"contracts/gainzilla.sol\":11693:11701  _approve */\n  tag_14\n    /* \"contracts/gainzilla.sol\":11693:11751  _approve(address(this), address(uniswapV2Router), _tTotal) */\n  jump\t// in\ntag_13:\n    /* \"contracts/gainzilla.sol\":11795:11811  _uniswapV2Router */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":11795:11819  _uniswapV2Router.factory */\n  and\n  0xc45a0155\n    /* \"contracts/gainzilla.sol\":11795:11821  _uniswapV2Router.factory() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup1\n  revert\ntag_15:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_17\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_17:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":11777:11833  IUniswapV2Factory(_uniswapV2Router.factory()).createPair */\n  and\n  0xc9c65396\n    /* \"contracts/gainzilla.sol\":11842:11846  this */\n  address\n    /* \"contracts/gainzilla.sol\":11849:11865  _uniswapV2Router */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":11849:11870  _uniswapV2Router.WETH */\n  and\n  0xad5c4648\n    /* \"contracts/gainzilla.sol\":11849:11872  _uniswapV2Router.WETH() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup1\n  revert\ntag_20:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_22\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_22:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_23\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_23:\n    /* \"contracts/gainzilla.sol\":11777:11873  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  mload(0x40)\n  not(sub(shl(0xe0, 0x01), 0x01))\n  0xe0\n  dup6\n  swap1\n  shl\n  and\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":861:876   */\n  swap3\n  dup4\n  and\n    /* \"contracts/gainzilla.sol\":11777:11873  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":843:877   */\n  mstore\n    /* \"#utility.yul\":913:928   */\n  swap2\n  and\n    /* \"#utility.yul\":893:911   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":886:929   */\n  mstore\n    /* \"#utility.yul\":778:796   */\n  0x44\n  add\n    /* \"contracts/gainzilla.sol\":11777:11873  IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_26\n  jumpi\n  0x00\n  dup1\n  revert\ntag_26:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_29:\n    /* \"contracts/gainzilla.sol\":11761:11774  uniswapV2Pair */\n  0x26\n    /* \"contracts/gainzilla.sol\":11761:11873  uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/gainzilla.sol\":11921:11936  uniswapV2Router */\n  sload(0x25)\n    /* \"contracts/gainzilla.sol\":11883:11956  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  mload(0x40)\n  shl(0xe0, 0x095ea7b3)\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":11921:11936  uniswapV2Router */\n  swap3\n  and\n    /* \"contracts/gainzilla.sol\":11883:11956  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  0x04\n  dup4\n  add\n    /* \"#utility.yul\":1114:1165   */\n  mstore\n  not(0x00)\n    /* \"#utility.yul\":1181:1199   */\n  0x24\n  dup4\n  add\n    /* \"#utility.yul\":1174:1208   */\n  mstore\n    /* \"contracts/gainzilla.sol\":11761:11873  uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this), _uniswapV2Router.WETH()) */\n  swap1\n    /* \"contracts/gainzilla.sol\":11883:11912  IERC20(uniswapV2Pair).approve */\n  0x095ea7b3\n  swap1\n    /* \"#utility.yul\":1087:1105   */\n  0x44\n  add\n    /* \"contracts/gainzilla.sol\":11883:11956  IERC20(uniswapV2Pair).approve(address(uniswapV2Router),type(uint256).max) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup1\n  revert\ntag_32:\n  pop\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_34\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_34:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  pop\n    /* \"contracts/gainzilla.sol\":8636:8654  1000000000 * 10**9 */\n  0x0de0b6b3a7640000\n    /* \"contracts/gainzilla.sol\":11967:11979  _maxTxAmount */\n  0x27\n    /* \"contracts/gainzilla.sol\":11967:11989  _maxTxAmount = _tTotal */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  caller\n    /* \"contracts/gainzilla.sol\":12055:12078  _balances[_msgSender()] */\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":12055:12064  _balances */\n  0x02\n    /* \"contracts/gainzilla.sol\":12055:12078  _balances[_msgSender()] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/gainzilla.sol\":12055:12088  _balances[_msgSender()] = _tTotal */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  dup3\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"contracts/gainzilla.sol\":12098:12125  _isExcludedFromFee[owner()] */\n  dup4\n  mstore\n    /* \"contracts/gainzilla.sol\":12098:12116  _isExcludedFromFee */\n  0x04\n    /* \"contracts/gainzilla.sol\":12098:12125  _isExcludedFromFee[owner()] */\n  dup3\n  mstore\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/gainzilla.sol\":12098:12132  _isExcludedFromFee[owner()] = true */\n  dup1\n  sload\n    /* \"contracts/gainzilla.sol\":12128:12132  true */\n  0x01\n  not(0xff)\n    /* \"contracts/gainzilla.sol\":12098:12132  _isExcludedFromFee[owner()] = true */\n  swap2\n  dup3\n  and\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/gainzilla.sol\":12169:12173  this */\n  address\n    /* \"contracts/gainzilla.sol\":12142:12175  _isExcludedFromFee[address(this)] */\n  dup6\n  mstore\n  dup3\n  dup6\n  keccak256\n    /* \"contracts/gainzilla.sol\":12142:12182  _isExcludedFromFee[address(this)] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":12197:12240  Transfer(address(0), _msgSender(), _tTotal) */\n  mload\n    /* \"#utility.yul\":2173:2198   */\n  swap4\n  dup5\n  mstore\n    /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n  swap2\n  swap3\n    /* \"contracts/gainzilla.sol\":12055:12078  _balances[_msgSender()] */\n  swap1\n  swap2\n    /* \"contracts/gainzilla.sol\":12197:12240  Transfer(address(0), _msgSender(), _tTotal) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":2146:2164   */\n  add\n    /* \"contracts/gainzilla.sol\":12197:12240  Transfer(address(0), _msgSender(), _tTotal) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/gainzilla.sol\":11515:12247  constructor() {... */\n  pop\n    /* \"contracts/gainzilla.sol\":8181:30551  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  jump(tag_53)\n    /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\ntag_2:\n    /* \"contracts/gainzilla.sol\":2992:2999  address */\n  0x00\n    /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap1\n    /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n  jump\t// out\n    /* \"contracts/gainzilla.sol\":14855:15185  function _approve(address owner, address spender, uint256 amount) private {... */\ntag_14:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":14947:14966  owner != address(0) */\n  dup4\n  and\n    /* \"contracts/gainzilla.sol\":14939:15007  require(owner != address(0), \"ERC20: approve from the zero address\") */\n  tag_46\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1824:1826   */\n  0x20\n    /* \"contracts/gainzilla.sol\":14939:15007  require(owner != address(0), \"ERC20: approve from the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1806:1827   */\n  mstore\n    /* \"#utility.yul\":1863:1865   */\n  0x24\n    /* \"#utility.yul\":1843:1861   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":1836:1866   */\n  mstore\n    /* \"#utility.yul\":1902:1936   */\n  0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n    /* \"#utility.yul\":1882:1900   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1875:1937   */\n  mstore\n  shl(0xe0, 0x72657373)\n    /* \"#utility.yul\":1953:1971   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1946:1980   */\n  mstore\n    /* \"#utility.yul\":1997:2016   */\n  0x84\n  add\n    /* \"contracts/gainzilla.sol\":14939:15007  require(owner != address(0), \"ERC20: approve from the zero address\") */\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":15025:15046  spender != address(0) */\n  dup3\n  and\n    /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  tag_49\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1421:1423   */\n  0x20\n    /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1403:1424   */\n  mstore\n    /* \"#utility.yul\":1460:1462   */\n  0x22\n    /* \"#utility.yul\":1440:1458   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1433:1463   */\n  mstore\n    /* \"#utility.yul\":1499:1533   */\n  0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n    /* \"#utility.yul\":1479:1497   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1472:1534   */\n  mstore\n  shl(0xf0, 0x7373)\n    /* \"#utility.yul\":1550:1568   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1543:1575   */\n  mstore\n    /* \"#utility.yul\":1592:1611   */\n  0x84\n  add\n    /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\n  tag_47\n    /* \"#utility.yul\":1393:1617   */\n  jump\n    /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\ntag_49:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/gainzilla.sol\":15095:15113  _allowances[owner] */\n  dup4\n  dup2\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":15095:15106  _allowances */\n  0x03\n    /* \"contracts/gainzilla.sol\":15095:15113  _allowances[owner] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/gainzilla.sol\":15095:15122  _allowances[owner][spender] */\n  swap5\n  dup8\n  and\n  dup1\n  dup5\n  mstore\n  swap5\n  dup3\n  mstore\n  swap2\n  dup3\n  swap1\n  keccak256\n    /* \"contracts/gainzilla.sol\":15095:15131  _allowances[owner][spender] = amount */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/gainzilla.sol\":15146:15178  Approval(owner, spender, amount) */\n  swap1\n  mload\n    /* \"#utility.yul\":2173:2198   */\n  dup5\n  dup2\n  mstore\n    /* \"contracts/gainzilla.sol\":15146:15178  Approval(owner, spender, amount) */\n  0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n  swap2\n    /* \"#utility.yul\":2146:2164   */\n  add\n    /* \"contracts/gainzilla.sol\":15146:15178  Approval(owner, spender, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/gainzilla.sol\":14855:15185  function _approve(address owner, address spender, uint256 amount) private {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:324   */\ntag_19:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:107   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":158:164   */\n  dup1\n    /* \"#utility.yul\":150:156   */\n  dup2\n    /* \"#utility.yul\":143:165   */\n  revert\n    /* \"#utility.yul\":105:107   */\ntag_55:\n    /* \"#utility.yul\":189:205   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":234:265   */\n  dup2\n  and\n    /* \"#utility.yul\":224:266   */\n  dup2\n  eq\n    /* \"#utility.yul\":214:216   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":285:291   */\n  dup2\n    /* \"#utility.yul\":277:283   */\n  dup3\n    /* \"#utility.yul\":270:292   */\n  revert\n    /* \"#utility.yul\":214:216   */\ntag_56:\n    /* \"#utility.yul\":313:318   */\n  swap4\n    /* \"#utility.yul\":95:324   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":329:626   */\ntag_36:\n    /* \"#utility.yul\":396:402   */\n  0x00\n    /* \"#utility.yul\":449:451   */\n  0x20\n    /* \"#utility.yul\":437:446   */\n  dup3\n    /* \"#utility.yul\":428:435   */\n  dup5\n    /* \"#utility.yul\":424:447   */\n  sub\n    /* \"#utility.yul\":420:452   */\n  slt\n    /* \"#utility.yul\":417:419   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":470:476   */\n  dup1\n    /* \"#utility.yul\":462:468   */\n  dup2\n    /* \"#utility.yul\":455:477   */\n  revert\n    /* \"#utility.yul\":417:419   */\ntag_58:\n    /* \"#utility.yul\":507:516   */\n  dup2\n    /* \"#utility.yul\":501:517   */\n  mload\n    /* \"#utility.yul\":560:565   */\n  dup1\n    /* \"#utility.yul\":553:566   */\n  iszero\n    /* \"#utility.yul\":546:567   */\n  iszero\n    /* \"#utility.yul\":539:544   */\n  dup2\n    /* \"#utility.yul\":536:568   */\n  eq\n    /* \"#utility.yul\":526:528   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":587:593   */\n  dup2\n    /* \"#utility.yul\":579:585   */\n  dup3\n    /* \"#utility.yul\":572:594   */\n  revert\n    /* \"#utility.yul\":2128:2204   */\ntag_53:\n    /* \"contracts/gainzilla.sol\":8181:30551  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/gainzilla.sol\":8181:30551  contract gainZilla is Context, IERC20, IERC20Extented, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x88790a68\n      gt\n      tag_61\n      jumpi\n      dup1\n      0xcab03471\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xe315a6da\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xf480fec2\n      gt\n      tag_64\n      jumpi\n      dup1\n      0xf480fec2\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xfe0bb982\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xffb54a99\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xffecf516\n      eq\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup1\n      0xe315a6da\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xe4bf1bed\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xea2f0b37\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      0xd55cb78a\n      gt\n      tag_65\n      jumpi\n      dup1\n      0xd55cb78a\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xdb0045ec\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xdc44b6a0\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup1\n      0xcab03471\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xcdb3858f\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xd1633649\n      eq\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup1\n      0xa850673d\n      gt\n      tag_66\n      jumpi\n      dup1\n      0xc469b6dd\n      gt\n      tag_67\n      jumpi\n      dup1\n      0xc469b6dd\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xc5d24189\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xc8607952\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xc95457ff\n      eq\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      0xa850673d\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xc3c8cd80\n      eq\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      0x9491f94d\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x9491f94d\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x99a7b9bc\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x9d82190f\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup1\n      0x88790a68\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x8e360253\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup1\n      0x39a53c4e\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x6c0a24eb\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x729cb3f2\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x729cb3f2\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x72b2aecc\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x787a08a6\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x80670f3c\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      0x6c0a24eb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x6fc3eaec\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup1\n      0x437823ec\n      gt\n      tag_72\n      jumpi\n      dup1\n      0x437823ec\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x49bd5a5e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5fecd926\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x6aabff3f\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup1\n      0x39a53c4e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3bbac579\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x3e0f966d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      0x248dd232\n      gt\n      tag_73\n      jumpi\n      dup1\n      0x29409395\n      gt\n      tag_74\n      jumpi\n      dup1\n      0x29409395\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x301ad558\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x323be1c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup1\n      0x248dd232\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x27a14fc2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2843631d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup1\n      0x14eb76ac\n      gt\n      tag_75\n      jumpi\n      dup1\n      0x14eb76ac\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2369bf83\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup1\n      0x01a6c43b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/gainzilla.sol\":8801:8849  uint256 public numTokensToSwap = 1000000 * 10**9 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      sload(0x08)\n      dup2\n      jump\n    tag_79:\n      mload(0x40)\n        /* \"#utility.yul\":7136:7161   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7124:7126   */\n      0x20\n        /* \"#utility.yul\":7109:7127   */\n      add\n        /* \"contracts/gainzilla.sol\":8801:8849  uint256 public numTokensToSwap = 1000000 * 10**9 */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/gainzilla.sol\":12253:12345  function name() override external pure returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n        /* \"contracts/gainzilla.sol\":12333:12338  _name */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x09\n      dup2\n      mstore\n      0x4761696e5a696c6c610000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/gainzilla.sol\":12253:12345  function name() override external pure returns (string memory) {... */\n    tag_84:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":13202:13362  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      tag_92\n      jump\t// in\n    tag_89:\n      mload(0x40)\n        /* \"#utility.yul\":6188:6202   */\n      swap1\n      iszero\n        /* \"#utility.yul\":6181:6203   */\n      iszero\n        /* \"#utility.yul\":6163:6204   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6151:6153   */\n      0x20\n        /* \"#utility.yul\":6136:6154   */\n      add\n        /* \"contracts/gainzilla.sol\":13202:13362  function approve(address spender, uint256 amount) external override returns (bool) {... */\n      tag_81\n        /* \"#utility.yul\":6118:6210   */\n      jump\n        /* \"contracts/gainzilla.sol\":28204:28324  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_97:\n      tag_99\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/gainzilla.sol\":12551:12646  function totalSupply() external pure override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n        /* \"contracts/gainzilla.sol\":8636:8654  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":12551:12646  function totalSupply() external pure override returns (uint256) {... */\n      jump(tag_79)\n        /* \"contracts/gainzilla.sol\":28054:28194  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_96\n      tag_106\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":13368:13676  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_89\n      tag_110\n      calldatasize\n      0x04\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9542:9578  uint256 public _sellEcosystemFee = 0 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_79\n      sload(0x13)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":25810:26133  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_96\n      tag_120\n      calldatasize\n      0x04\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9036:9071  uint256 public _buyEcosystemFee = 0 */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_79\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":22717:22899  function manualSendToken(address token) external onlyOwner() {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      tag_96\n      tag_129\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_129:\n      tag_131\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":11041:11072  bool public canBlackList = true */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      sload(0x28)\n      tag_89\n      swap1\n      0x01000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":12453:12545  function decimals() override external pure returns (uint8) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      mload(0x40)\n        /* \"contracts/gainzilla.sol\":8412:8413  9 */\n      0x09\n        /* \"#utility.yul\":17883:17919   */\n      dup2\n      mstore\n        /* \"#utility.yul\":17871:17873   */\n      0x20\n        /* \"#utility.yul\":17856:17874   */\n      add\n        /* \"contracts/gainzilla.sol\":12453:12545  function decimals() override external pure returns (uint8) {... */\n      tag_81\n        /* \"#utility.yul\":17838:17925   */\n      jump\n        /* \"contracts/gainzilla.sol\":11008:11035  bool public canPause = true */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      sload(0x28)\n      tag_89\n      swap1\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":11078:11109  bool public canChangeTax = true */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      sload(0x28)\n      tag_89\n      swap1\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":12775:12871  function isBot(address account) public view returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      tag_89\n      tag_151\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12851:12864  bots[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12828:12832  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":12851:12864  bots[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12851:12855  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":12851:12864  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":12775:12871  function isBot(address account) public view returns (bool) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":22038:22180  function disableToken() external onlyOwner() {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_96\n      tag_156\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":25053:25164  function excludeFromFee(address account) public onlyOwner() {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_96\n      tag_159\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":10869:10897  address public uniswapV2Pair */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      sload(0x26)\n      tag_162\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_162:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5011:5066   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4993:5067   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4981:4983   */\n      0x20\n        /* \"#utility.yul\":4966:4984   */\n      add\n        /* \"contracts/gainzilla.sol\":10869:10897  address public uniswapV2Pair */\n      tag_81\n        /* \"#utility.yul\":4948:5073   */\n      jump\n        /* \"contracts/gainzilla.sol\":25292:25387  function removeBot(address account) external onlyOwner() {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_96\n      tag_168\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":22186:22271  function disablePauseAbility() onlyOwner() external {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_96\n      tag_172\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8745:8795  uint256 public _maxWalletAmount = 10000001 * 10**9 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      tag_79\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":22485:22711  function manualsend() external onlyOwner() {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_96\n      tag_179\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":12652:12769  function balanceOf(address account) public view override returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_79\n      tag_182\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12718:12725  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12744:12753  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":12652:12769  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      tag_96\n      tag_187\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":28578:28751  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_96\n      tag_190\n      calldatasize\n      0x04\n      tag_191\n      jump\t// in\n    tag_190:\n      tag_192\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9911:9955  uint256 public transferFeeIncreaseFactor = 0 */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_79\n      sload(0x19)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":10277:10310  StrongHandsConfig public cooldown */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      sload(0x1a)\n      tag_198\n      swap1\n      0xff\n      dup2\n      and\n      swap1\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n      dup3\n      jump\n    tag_198:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6905:6919   */\n      swap3\n      iszero\n        /* \"#utility.yul\":6898:6920   */\n      iszero\n        /* \"#utility.yul\":6880:6921   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6969:6979   */\n      0xffffffff\n        /* \"#utility.yul\":6957:6980   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6952:6954   */\n      0x20\n        /* \"#utility.yul\":6937:6955   */\n      dup4\n      add\n        /* \"#utility.yul\":6930:6981   */\n      mstore\n        /* \"#utility.yul\":6853:6871   */\n      add\n        /* \"contracts/gainzilla.sol\":10277:10310  StrongHandsConfig public cooldown */\n      tag_81\n        /* \"#utility.yul\":6835:6987   */\n      jump\n        /* \"contracts/gainzilla.sol\":29861:30549  function ATHvariance() public view returns (int256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_79\n      tag_204\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9414:9450  uint256 public _sellLiquidityFee = 0 */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      tag_79\n      sload(0x11)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump(tag_162)\n        /* \"contracts/gainzilla.sol\":21953:22032  function enableToken() external onlyOwner() {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      tag_96\n      tag_217\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":19632:20048  function pairPrice() public view returns (uint256) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      tag_79\n      tag_220\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":12351:12447  function symbol() override external pure returns (string memory) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n        /* \"contracts/gainzilla.sol\":12433:12440  _symbol */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x04\n      dup2\n      mstore\n      0x5241575200000000000000000000000000000000000000000000000000000000\n      0x20\n      dup3\n      add\n      mstore\n        /* \"contracts/gainzilla.sol\":12351:12447  function symbol() override external pure returns (string memory) {... */\n      jump(tag_84)\n        /* \"contracts/gainzilla.sol\":27812:27898  function disableTaxChange() onlyOwner() external {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      tag_96\n      tag_228\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":28757:29295  function cooldownRemaining(address account) public view returns (... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_229\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_229:\n      pop\n      tag_230\n      tag_231\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_231:\n      tag_232\n      jump\t// in\n    tag_230:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17576:17601   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":17632:17634   */\n      0x20\n        /* \"#utility.yul\":17617:17635   */\n      dup6\n      add\n        /* \"#utility.yul\":17610:17644   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":17660:17678   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":17653:17687   */\n      mstore\n        /* \"#utility.yul\":17718:17720   */\n      0x60\n        /* \"#utility.yul\":17703:17721   */\n      dup3\n      add\n        /* \"#utility.yul\":17696:17730   */\n      mstore\n        /* \"#utility.yul\":17563:17566   */\n      0x80\n        /* \"#utility.yul\":17548:17567   */\n      add\n        /* \"contracts/gainzilla.sol\":28757:29295  function cooldownRemaining(address account) public view returns (... */\n      tag_81\n        /* \"#utility.yul\":17530:17736   */\n      jump\n        /* \"contracts/gainzilla.sol\":25664:25804  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      tag_96\n      tag_237\n      calldatasize\n      0x04\n      tag_121\n      jump\t// in\n    tag_237:\n      tag_238\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":12881:13047  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      tag_89\n      tag_241\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_241:\n      tag_242\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":22277:22479  function manualswap() external onlyOwner() {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      pop\n      tag_96\n      tag_246\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":9286:9316  uint256 public _buyTeamFee = 0 */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n      pop\n      tag_79\n      sload(0x0f)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":9161:9196  uint256 public _buyMarketingFee = 0 */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      tag_79\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":9670:9706  uint256 public _sellMarketingFee = 0 */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      tag_79\n      sload(0x15)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":10485:10517  DiamondFloor public diamondFloor */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      sload(0x1c)\n      sload(0x1d)\n      sload(0x1e)\n      sload(0x1f)\n      tag_260\n      swap4\n      0xff\n      dup1\n      dup3\n      and\n      swap5\n      0x0100\n      swap1\n      swap3\n      div\n      0xffff\n      and\n      swap4\n      swap2\n      swap3\n      swap2\n      and\n      swap1\n      dup6\n      jump\n    tag_260:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6485:6499   */\n      swap6\n      iszero\n        /* \"#utility.yul\":6478:6500   */\n      iszero\n        /* \"#utility.yul\":6460:6501   */\n      dup7\n      mstore\n        /* \"#utility.yul\":6549:6555   */\n      0xffff\n        /* \"#utility.yul\":6537:6556   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":6532:6534   */\n      0x20\n        /* \"#utility.yul\":6517:6535   */\n      dup7\n      add\n        /* \"#utility.yul\":6510:6557   */\n      mstore\n        /* \"#utility.yul\":6573:6591   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":6566:6600   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6643:6657   */\n      iszero\n        /* \"#utility.yul\":6636:6658   */\n      iszero\n        /* \"#utility.yul\":6631:6633   */\n      0x60\n        /* \"#utility.yul\":6616:6634   */\n      dup4\n      add\n        /* \"#utility.yul\":6609:6659   */\n      mstore\n        /* \"#utility.yul\":6690:6693   */\n      0x80\n        /* \"#utility.yul\":6675:6694   */\n      dup3\n      add\n        /* \"#utility.yul\":6668:6703   */\n      mstore\n        /* \"#utility.yul\":6447:6450   */\n      0xa0\n        /* \"#utility.yul\":6432:6451   */\n      add\n        /* \"contracts/gainzilla.sol\":10485:10517  DiamondFloor public diamondFloor */\n      tag_81\n        /* \"#utility.yul\":6414:6709   */\n      jump\n        /* \"contracts/gainzilla.sol\":9798:9829  uint256 public _sellTeamFee = 0 */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_264\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_264:\n      pop\n      tag_79\n      sload(0x17)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":28331:28451  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      tag_96\n      tag_270\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_270:\n      tag_271\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21780:21947  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_272\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_272:\n      pop\n      tag_96\n      tag_274\n      calldatasize\n      0x04\n      tag_121\n      jump\t// in\n    tag_274:\n      tag_275\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":25565:25654  function disableBlackListing() onlyOwner() external {... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n      pop\n      tag_96\n      tag_278\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":27904:28044  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n      pop\n      tag_96\n      tag_281\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_281:\n      tag_282\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":8911:8946  uint256 public _buyLiquidityFee = 0 */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n      pop\n      tag_79\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":13053:13196  function allowance(address owner, address spender) external view override returns (uint256) {... */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_287\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_287:\n      pop\n      tag_79\n      tag_289\n      calldatasize\n      0x04\n      tag_290\n      jump\t// in\n    tag_289:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":13162:13180  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/gainzilla.sol\":13136:13143  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":13162:13180  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":13162:13173  _allowances */\n      0x03\n        /* \"contracts/gainzilla.sol\":13162:13180  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/gainzilla.sol\":13162:13189  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":13053:13196  function allowance(address owner, address spender) external view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":28457:28572  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n      pop\n      tag_96\n      tag_295\n      calldatasize\n      0x04\n      tag_121\n      jump\t// in\n    tag_295:\n      tag_296\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":26139:26962  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_297:\n      pop\n      tag_96\n      tag_299\n      calldatasize\n      0x04\n      tag_300\n      jump\t// in\n    tag_299:\n      tag_301\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":25170:25282  function includeInFee(address account) external onlyOwner() {... */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_302\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_302:\n      pop\n      tag_96\n      tag_304\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_304:\n      tag_305\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n      pop\n      tag_96\n      tag_308\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_308:\n      tag_309\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":26968:27806  function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_310\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_310:\n      pop\n      tag_96\n      tag_312\n      calldatasize\n      0x04\n      tag_300\n      jump\t// in\n    tag_312:\n      tag_313\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":29301:29855  function configureDiamondFloor(bool enabled, uint16 triggerPercentage) external onlyOwner {... */\n    tag_58:\n      callvalue\n      dup1\n      iszero\n      tag_314\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_314:\n      pop\n      tag_96\n      tag_316\n      calldatasize\n      0x04\n      tag_317\n      jump\t// in\n    tag_316:\n      tag_318\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":10938:10969  bool public tradingOpen = false */\n    tag_59:\n      callvalue\n      dup1\n      iszero\n      tag_319\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_319:\n      pop\n      sload(0x28)\n      tag_89\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/gainzilla.sol\":25393:25559  function addBot(address account) external onlyOwner() {... */\n    tag_60:\n      callvalue\n      dup1\n      iszero\n      tag_323\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_323:\n      pop\n      tag_96\n      tag_325\n      calldatasize\n      0x04\n      tag_130\n      jump\t// in\n    tag_325:\n      tag_326\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":13202:13362  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_92:\n        /* \"contracts/gainzilla.sol\":13279:13283  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":13295:13334  _approve(_msgSender(), spender, amount) */\n      tag_329\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13318:13325  spender */\n      dup5\n        /* \"contracts/gainzilla.sol\":13327:13333  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":13295:13303  _approve */\n      tag_332\n        /* \"contracts/gainzilla.sol\":13295:13334  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_329:\n      pop\n        /* \"contracts/gainzilla.sol\":13351:13355  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":13202:13362  function approve(address spender, uint256 amount) external override returns (bool) {... */\n    tag_328:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28204:28324  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n    tag_99:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"contracts/gainzilla.sol\":28291:28303  _teamAddress */\n      0x22\n        /* \"contracts/gainzilla.sol\":28291:28317  _teamAddress = teamAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28204:28324  function updateTeamAddress(address payable teamAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28054:28194  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n    tag_107:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_342:\n        /* \"contracts/gainzilla.sol\":28151:28168  _marketingAddress */\n      0x21\n        /* \"contracts/gainzilla.sol\":28151:28187  _marketingAddress = marketingAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28054:28194  function updateMarketingAddress(address payable marketingAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":13368:13676  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n    tag_112:\n        /* \"contracts/gainzilla.sol\":13468:13472  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":13484:13520  _transfer(sender, recipient, amount) */\n      tag_346\n        /* \"contracts/gainzilla.sol\":13494:13500  sender */\n      dup5\n        /* \"contracts/gainzilla.sol\":13502:13511  recipient */\n      dup5\n        /* \"contracts/gainzilla.sol\":13513:13519  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":13484:13493  _transfer */\n      tag_347\n        /* \"contracts/gainzilla.sol\":13484:13520  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_346:\n        /* \"contracts/gainzilla.sol\":13530:13648  _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\")) */\n      tag_348\n        /* \"contracts/gainzilla.sol\":13539:13545  sender */\n      dup5\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13559:13647  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      tag_350\n        /* \"contracts/gainzilla.sol\":13597:13603  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":13559:13647  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":13559:13578  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":13559:13570  _allowances */\n      0x03\n        /* \"contracts/gainzilla.sol\":13559:13578  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13559:13592  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n      swap1\n        /* \"contracts/gainzilla.sol\":13559:13596  _allowances[sender][_msgSender()].sub */\n      tag_352\n        /* \"contracts/gainzilla.sol\":13559:13647  _allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_350:\n        /* \"contracts/gainzilla.sol\":13530:13538  _approve */\n      tag_332\n        /* \"contracts/gainzilla.sol\":13530:13648  _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,\"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_348:\n      pop\n        /* \"contracts/gainzilla.sol\":13665:13669  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":13368:13676  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25810:26133  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n    tag_122:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_355:\n        /* \"contracts/gainzilla.sol\":25921:25938  _tTotal.div(1000) */\n      tag_358\n        /* \"contracts/gainzilla.sol\":8636:8654  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":25933:25937  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":25921:25932  _tTotal.div */\n      tag_359\n        /* \"contracts/gainzilla.sol\":25921:25938  _tTotal.div(1000) */\n      jump\t// in\n    tag_358:\n        /* \"contracts/gainzilla.sol\":25902:25917  maxWalletAmount */\n      dup2\n        /* \"contracts/gainzilla.sol\":25902:25938  maxWalletAmount >= _tTotal.div(1000) */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":25894:25985  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12282:12284   */\n      0x20\n        /* \"contracts/gainzilla.sol\":25894:25985  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12264:12285   */\n      mstore\n        /* \"#utility.yul\":12321:12323   */\n      0x2a\n        /* \"#utility.yul\":12301:12319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12294:12324   */\n      mstore\n        /* \"#utility.yul\":12360:12394   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e20302e3125\n        /* \"#utility.yul\":12340:12358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12333:12395   */\n      mstore\n        /* \"#utility.yul\":12431:12443   */\n      0x206f6620737570706c7900000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12411:12429   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12404:12444   */\n      mstore\n        /* \"#utility.yul\":12461:12480   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":25894:25985  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n      tag_336\n        /* \"#utility.yul\":12254:12486   */\n      jump\n        /* \"contracts/gainzilla.sol\":25894:25985  require(maxWalletAmount >= _tTotal.div(1000), \"Amount must be greater than 0.1% of supply\") */\n    tag_360:\n        /* \"contracts/gainzilla.sol\":8636:8654  1000000000 * 10**9 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":26003:26018  maxWalletAmount */\n      dup2\n        /* \"contracts/gainzilla.sol\":26003:26029  maxWalletAmount <= _tTotal */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":25995:26082  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13866:13868   */\n      0x20\n        /* \"contracts/gainzilla.sol\":25995:26082  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13848:13869   */\n      mstore\n        /* \"#utility.yul\":13905:13907   */\n      0x30\n        /* \"#utility.yul\":13885:13903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13878:13908   */\n      mstore\n        /* \"#utility.yul\":13944:13978   */\n      0x416d6f756e74206d757374206265206c657373207468616e206f722065717561\n        /* \"#utility.yul\":13924:13942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13917:13979   */\n      mstore\n        /* \"#utility.yul\":14015:14033   */\n      0x6c20746f20746f74616c537570706c7900000000000000000000000000000000\n        /* \"#utility.yul\":13995:14013   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13988:14034   */\n      mstore\n        /* \"#utility.yul\":14051:14070   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":25995:26082  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n      tag_336\n        /* \"#utility.yul\":13838:14076   */\n      jump\n        /* \"contracts/gainzilla.sol\":25995:26082  require(maxWalletAmount <= _tTotal, \"Amount must be less than or equal to totalSupply\") */\n    tag_363:\n        /* \"contracts/gainzilla.sol\":26092:26108  _maxWalletAmount */\n      0x07\n        /* \"contracts/gainzilla.sol\":26092:26126  _maxWalletAmount = maxWalletAmount */\n      sstore\n        /* \"contracts/gainzilla.sol\":25810:26133  function setMaxWalletAmount(uint256 maxWalletAmount) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22717:22899  function manualSendToken(address token) external onlyOwner() {... */\n    tag_131:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_368:\n        /* \"contracts/gainzilla.sol\":22805:22843  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":22837:22841  this */\n      address\n        /* \"contracts/gainzilla.sol\":22805:22843  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4993:5067   */\n      mstore\n        /* \"contracts/gainzilla.sol\":22788:22802  uint256 amount */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":22805:22828  IERC20(token).balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":4966:4984   */\n      0x24\n      add\n        /* \"contracts/gainzilla.sol\":22805:22843  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_372\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_372:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_374\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_374:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_375\n      swap2\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n        /* \"contracts/gainzilla.sol\":22788:22843  uint256 amount = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":22860:22865  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":22853:22875  IERC20(token).transfer */\n      and\n      0xa9059cbb\n        /* \"contracts/gainzilla.sol\":22876:22883  owner() */\n      tag_377\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":22876:22883  owner() */\n    tag_377:\n        /* \"contracts/gainzilla.sol\":22853:22892  IERC20(token).transfer(owner(), amount) */\n      mload(0x40)\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5270:5325   */\n      swap1\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":22853:22892  IERC20(token).transfer(owner(), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5252:5326   */\n      mstore\n        /* \"#utility.yul\":5342:5360   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5335:5369   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":5225:5243   */\n      0x44\n      add\n        /* \"contracts/gainzilla.sol\":22853:22892  IERC20(token).transfer(owner(), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_380\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_380:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_383\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      pop\n        /* \"contracts/gainzilla.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/gainzilla.sol\":22717:22899  function manualSendToken(address token) external onlyOwner() {... */\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22038:22180  function disableToken() external onlyOwner() {... */\n    tag_156:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_389\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_389:\n        /* \"contracts/gainzilla.sol\":22101:22109  canPause */\n      sload(0x28)\n      0x010000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":22093:22144  require(canPause, \"this contract cannot be paused\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8041:8043   */\n      0x20\n        /* \"contracts/gainzilla.sol\":22093:22144  require(canPause, \"this contract cannot be paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8023:8044   */\n      mstore\n        /* \"#utility.yul\":8080:8082   */\n      0x1e\n        /* \"#utility.yul\":8060:8078   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8053:8083   */\n      mstore\n        /* \"#utility.yul\":8119:8151   */\n      0x7468697320636f6e74726163742063616e6e6f74206265207061757365640000\n        /* \"#utility.yul\":8099:8117   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8092:8152   */\n      mstore\n        /* \"#utility.yul\":8169:8187   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":22093:22144  require(canPause, \"this contract cannot be paused\") */\n      tag_336\n        /* \"#utility.yul\":8013:8193   */\n      jump\n        /* \"contracts/gainzilla.sol\":22093:22144  require(canPause, \"this contract cannot be paused\") */\n    tag_392:\n        /* \"contracts/gainzilla.sol\":22154:22165  tradingOpen */\n      0x28\n        /* \"contracts/gainzilla.sol\":22154:22173  tradingOpen = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":22038:22180  function disableToken() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25053:25164  function excludeFromFee(address account) public onlyOwner() {... */\n    tag_160:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_397\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_397:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25123:25150  _isExcludedFromFee[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25123:25141  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":25123:25150  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25123:25157  _isExcludedFromFee[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":25153:25157  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":25123:25157  _isExcludedFromFee[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25053:25164  function excludeFromFee(address account) public onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25292:25387  function removeBot(address account) external onlyOwner() {... */\n    tag_169:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_402\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_402:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25359:25372  bots[account] */\n      and\n        /* \"contracts/gainzilla.sol\":25375:25380  false */\n      0x00\n        /* \"contracts/gainzilla.sol\":25359:25372  bots[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25359:25363  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":25359:25372  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25359:25380  bots[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25292:25387  function removeBot(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22186:22271  function disablePauseAbility() onlyOwner() external {... */\n    tag_172:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_407:\n        /* \"contracts/gainzilla.sol\":22248:22256  canPause */\n      0x28\n        /* \"contracts/gainzilla.sol\":22248:22264  canPause = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":22186:22271  function disablePauseAbility() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22485:22711  function manualsend() external onlyOwner() {... */\n    tag_179:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_412\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_412:\n        /* \"contracts/gainzilla.sol\":22567:22588  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":22602:22624  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":22598:22705  if (contractETHBalance > 0) {... */\n      tag_415\n      jumpi\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":22640:22694  payable(address(owner())).transfer(contractETHBalance) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":22640:22694  payable(address(owner())).transfer(contractETHBalance) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"contracts/gainzilla.sol\":22675:22693  contractETHBalance */\n      dup5\n      swap2\n        /* \"contracts/gainzilla.sol\":22640:22694  payable(address(owner())).transfer(contractETHBalance) */\n      dup2\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      dup2\n        /* \"contracts/gainzilla.sol\":22640:22694  payable(address(owner())).transfer(contractETHBalance) */\n      dup2\n        /* \"contracts/gainzilla.sol\":22675:22693  contractETHBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      dup9\n        /* \"contracts/gainzilla.sol\":22640:22694  payable(address(owner())).transfer(contractETHBalance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_418\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_418:\n      pop\n        /* \"contracts/gainzilla.sol\":22598:22705  if (contractETHBalance > 0) {... */\n    tag_415:\n        /* \"contracts/gainzilla.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/gainzilla.sol\":22485:22711  function manualsend() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n    tag_187:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_422\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_422:\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3943:3949  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/gainzilla.sol\":3959:3960  0 */\n      dup4\n      swap1\n        /* \"contracts/gainzilla.sol\":3922:3962  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/gainzilla.sol\":3989:3990  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":3972:3991  _owner = address(0) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":3851:3998  function renounceOwnership() public virtual onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28578:28751  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n    tag_192:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_427\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_427:\n        /* \"contracts/gainzilla.sol\":28668:28676  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":28668:28694  cooldown.enabled = enabled */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28724:28744  duration * 1 minutes */\n      tag_430\n        /* \"contracts/gainzilla.sol\":28724:28732  duration */\n      dup2\n        /* \"contracts/gainzilla.sol\":28735:28744  1 minutes */\n      0x3c\n        /* \"contracts/gainzilla.sol\":28724:28744  duration * 1 minutes */\n      tag_431\n      jump\t// in\n    tag_430:\n        /* \"contracts/gainzilla.sol\":28704:28712  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":28704:28744  cooldown.duration = duration * 1 minutes */\n      dup1\n      sload\n      0xffffffff\n      swap3\n      swap1\n      swap3\n      and\n      0x0100\n      mul\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":28578:28751  function configureStrongHands(bool enabled, uint32 duration) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":29861:30549  function ATHvariance() public view returns (int256) {... */\n    tag_204:\n        /* \"contracts/gainzilla.sol\":29923:29944  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":29905:29911  int256 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":29919:29959  if (diamondFloor.athPrice == 0) return 0 */\n      tag_433\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":29958:29959  0 */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":29861:30549  function ATHvariance() public view returns (int256) {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":29919:29959  if (diamondFloor.athPrice == 0) return 0 */\n    tag_433:\n        /* \"contracts/gainzilla.sol\":29965:29985  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":29988:29999  pairPrice() */\n      tag_434\n        /* \"contracts/gainzilla.sol\":29988:29997  pairPrice */\n      tag_220\n        /* \"contracts/gainzilla.sol\":29988:29999  pairPrice() */\n      jump\t// in\n    tag_434:\n        /* \"contracts/gainzilla.sol\":30032:30053  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":29965:29999  uint256 currentPrice = pairPrice() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":30017:30053  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":30017:30542  currentPrice > diamondFloor.athPrice ?... */\n      tag_435\n      jumpi\n        /* \"contracts/gainzilla.sol\":30510:30531  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":30371:30532  diamondFloor.athPrice.sub(currentPrice)... */\n      tag_436\n      swap1\n        /* \"contracts/gainzilla.sol\":30371:30434  diamondFloor.athPrice.sub(currentPrice)... */\n      tag_437\n        /* \"contracts/gainzilla.sol\":30428:30433  100e1 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":30371:30410  diamondFloor.athPrice.sub(currentPrice) */\n      tag_438\n        /* \"contracts/gainzilla.sol\":30510:30531  diamondFloor.athPrice */\n      dup4\n        /* \"contracts/gainzilla.sol\":30397:30409  currentPrice */\n      dup7\n        /* \"contracts/gainzilla.sol\":30371:30396  diamondFloor.athPrice.sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":30371:30410  diamondFloor.athPrice.sub(currentPrice) */\n      jump\t// in\n    tag_438:\n        /* \"contracts/gainzilla.sol\":30371:30427  diamondFloor.athPrice.sub(currentPrice)... */\n      swap1\n      tag_440\n        /* \"contracts/gainzilla.sol\":30371:30434  diamondFloor.athPrice.sub(currentPrice)... */\n      jump\t// in\n    tag_437:\n        /* \"contracts/gainzilla.sol\":30371:30509  diamondFloor.athPrice.sub(currentPrice)... */\n      swap1\n      tag_359\n        /* \"contracts/gainzilla.sol\":30371:30532  diamondFloor.athPrice.sub(currentPrice)... */\n      jump\t// in\n    tag_436:\n        /* \"contracts/gainzilla.sol\":30350:30542  -int256(... */\n      tag_441\n      swap1\n      tag_442\n      jump\t// in\n    tag_441:\n        /* \"contracts/gainzilla.sol\":30017:30542  currentPrice > diamondFloor.athPrice ?... */\n      jump(tag_444)\n    tag_435:\n        /* \"contracts/gainzilla.sol\":30265:30286  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":30126:30287  currentPrice.sub(diamondFloor.athPrice)... */\n      tag_444\n      swap1\n        /* \"contracts/gainzilla.sol\":30126:30189  currentPrice.sub(diamondFloor.athPrice)... */\n      tag_437\n        /* \"contracts/gainzilla.sol\":30183:30188  100e1 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":30126:30165  currentPrice.sub(diamondFloor.athPrice) */\n      tag_438\n        /* \"contracts/gainzilla.sol\":30126:30138  currentPrice */\n      dup6\n        /* \"contracts/gainzilla.sol\":30265:30286  diamondFloor.athPrice */\n      dup5\n        /* \"contracts/gainzilla.sol\":30126:30142  currentPrice.sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":30126:30165  currentPrice.sub(diamondFloor.athPrice) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":30126:30287  currentPrice.sub(diamondFloor.athPrice)... */\n    tag_444:\n        /* \"contracts/gainzilla.sol\":30010:30542  return currentPrice > diamondFloor.athPrice ?... */\n      swap2\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":29861:30549  function ATHvariance() public view returns (int256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":21953:22032  function enableToken() external onlyOwner() {... */\n    tag_217:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_450\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_450:\n        /* \"contracts/gainzilla.sol\":22007:22018  tradingOpen */\n      0x28\n        /* \"contracts/gainzilla.sol\":22007:22025  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":22021:22025  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":22007:22025  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":21953:22032  function enableToken() external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":19632:20048  function pairPrice() public view returns (uint256) {... */\n    tag_220:\n        /* \"contracts/gainzilla.sol\":19674:19681  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19694:19710  uint112 reserve0 */\n      dup1\n        /* \"contracts/gainzilla.sol\":19712:19728  uint112 reserve1 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19748:19761  uniswapV2Pair */\n      0x26\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":19733:19774  IUniswapV2Pair(uniswapV2Pair).getReserves */\n      and\n      0x0902f1ac\n        /* \"contracts/gainzilla.sol\":19733:19776  IUniswapV2Pair(uniswapV2Pair).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_454\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_454:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_456\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_456:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_457\n      swap2\n      swap1\n      tag_458\n      jump\t// in\n    tag_457:\n        /* \"contracts/gainzilla.sol\":19693:19776  (uint112 reserve0, uint112 reserve1,) = IUniswapV2Pair(uniswapV2Pair).getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":19790:19798  reserve0 */\n      dup2\n        /* \"contracts/gainzilla.sol\":19790:19803  reserve0 == 0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/gainzilla.sol\":19802:19803  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19790:19803  reserve0 == 0 */\n      eq\n        /* \"contracts/gainzilla.sol\":19790:19820  reserve0 == 0 || reserve1 == 0 */\n      dup1\n      tag_459\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":19807:19820  reserve1 == 0 */\n      0xffffffffffffffffffffffffffff\n      dup2\n      and\n      iszero\n        /* \"contracts/gainzilla.sol\":19790:19820  reserve0 == 0 || reserve1 == 0 */\n    tag_459:\n        /* \"contracts/gainzilla.sol\":19786:19830  if (reserve0 == 0 || reserve1 == 0) return 0 */\n      iszero\n      tag_460\n      jumpi\n        /* \"contracts/gainzilla.sol\":19829:19830  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":19822:19830  return 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":19632:20048  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":19786:19830  if (reserve0 == 0 || reserve1 == 0) return 0 */\n    tag_460:\n        /* \"contracts/gainzilla.sol\":19871:19884  uniswapV2Pair */\n      sload(0x26)\n        /* \"contracts/gainzilla.sol\":19856:19894  IUniswapV2Pair(uniswapV2Pair).token0() */\n      0x40\n      dup1\n      mload\n      0x0dfe168100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/gainzilla.sol\":19906:19910  this */\n      address\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":19871:19884  uniswapV2Pair */\n      and\n      swap2\n        /* \"contracts/gainzilla.sol\":19856:19892  IUniswapV2Pair(uniswapV2Pair).token0 */\n      0x0dfe1681\n      swap2\n        /* \"contracts/gainzilla.sol\":19856:19894  IUniswapV2Pair(uniswapV2Pair).token0() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/gainzilla.sol\":19871:19884  uniswapV2Pair */\n      dup7\n        /* \"contracts/gainzilla.sol\":19856:19894  IUniswapV2Pair(uniswapV2Pair).token0() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_461\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_461:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_463\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_463:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_464\n      swap2\n      swap1\n      tag_465\n      jump\t// in\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":19856:19911  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) */\n      and\n      eq\n        /* \"contracts/gainzilla.sol\":19856:20041  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      tag_466\n      jumpi\n        /* \"contracts/gainzilla.sol\":19991:20041  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n      tag_467\n        /* \"contracts/gainzilla.sol\":20023:20040  uint256(reserve1) */\n      0xffffffffffffffffffffffffffff\n      dup1\n      dup4\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":19991:20018  uint256(reserve0).mul(1e18) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":19991:20008  uint256(reserve0) */\n      dup6\n      and\n        /* \"contracts/gainzilla.sol\":20013:20017  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":19991:20012  uint256(reserve0).mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":19991:20018  uint256(reserve0).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":19991:20041  uint256(reserve0).mul(1e18).div(uint256(reserve1)) */\n    tag_467:\n        /* \"contracts/gainzilla.sol\":19856:20041  IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      jump(tag_470)\n    tag_466:\n        /* \"contracts/gainzilla.sol\":19926:19976  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n      tag_470\n        /* \"contracts/gainzilla.sol\":19958:19975  uint256(reserve0) */\n      0xffffffffffffffffffffffffffff\n      dup1\n      dup5\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":19926:19953  uint256(reserve1).mul(1e18) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":19926:19943  uint256(reserve1) */\n      dup5\n      and\n        /* \"contracts/gainzilla.sol\":19948:19952  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/gainzilla.sol\":19926:19947  uint256(reserve1).mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":19926:19953  uint256(reserve1).mul(1e18) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":19926:19976  uint256(reserve1).mul(1e18).div(uint256(reserve0)) */\n    tag_470:\n        /* \"contracts/gainzilla.sol\":19849:20041  return IUniswapV2Pair(uniswapV2Pair).token0() == address(this) ?... */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":19632:20048  function pairPrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":27812:27898  function disableTaxChange() onlyOwner() external {... */\n    tag_228:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_475\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_475:\n        /* \"contracts/gainzilla.sol\":27871:27883  canChangeTax */\n      0x28\n        /* \"contracts/gainzilla.sol\":27871:27891  canChangeTax = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27812:27898  function disableTaxChange() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28757:29295  function cooldownRemaining(address account) public view returns (... */\n    tag_232:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":28960:28988  cooldown.walletList[account] */\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":28831:28844  uint256 days_ */\n      0x00\n        /* \"contracts/gainzilla.sol\":28960:28988  cooldown.walletList[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":28960:28979  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":28960:28988  cooldown.walletList[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":28831:28844  uint256 days_ */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/gainzilla.sol\":28991:29006  block.timestamp */\n      timestamp\n      lt\n        /* \"contracts/gainzilla.sol\":28960:29075  cooldown.walletList[account] > block.timestamp ? ... */\n      tag_479\n      jumpi\n        /* \"contracts/gainzilla.sol\":29074:29075  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":28960:29075  cooldown.walletList[account] > block.timestamp ? ... */\n      jump(tag_481)\n    tag_479:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":29022:29050  cooldown.walletList[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":29022:29041  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":29022:29050  cooldown.walletList[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":29022:29071  cooldown.walletList[account].sub(block.timestamp) */\n      tag_481\n      swap1\n        /* \"contracts/gainzilla.sol\":29055:29070  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":29022:29054  cooldown.walletList[account].sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":29022:29071  cooldown.walletList[account].sub(block.timestamp) */\n      jump\t// in\n    tag_481:\n        /* \"contracts/gainzilla.sol\":28940:29075  uint256 remaining = cooldown.walletList[account] > block.timestamp ? ... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":29102:29122  remaining.div(86400) */\n      tag_482\n        /* \"contracts/gainzilla.sol\":28940:29075  uint256 remaining = cooldown.walletList[account] > block.timestamp ? ... */\n      dup2\n        /* \"contracts/gainzilla.sol\":29116:29121  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":29102:29115  remaining.div */\n      tag_359\n        /* \"contracts/gainzilla.sol\":29102:29122  remaining.div(86400) */\n      jump\t// in\n    tag_482:\n        /* \"contracts/gainzilla.sol\":29094:29122  days_ = remaining.div(86400) */\n      swap5\n      pop\n        /* \"contracts/gainzilla.sol\":29132:29150  remaining %= 86400 */\n      tag_483\n        /* \"contracts/gainzilla.sol\":29145:29150  86400 */\n      0x015180\n        /* \"contracts/gainzilla.sol\":29132:29150  remaining %= 86400 */\n      dup3\n      tag_484\n      jump\t// in\n    tag_483:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":29169:29188  remaining.div(3600) */\n      tag_485\n        /* \"contracts/gainzilla.sol\":29132:29150  remaining %= 86400 */\n      dup2\n        /* \"contracts/gainzilla.sol\":29183:29187  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":29169:29182  remaining.div */\n      tag_359\n        /* \"contracts/gainzilla.sol\":29169:29188  remaining.div(3600) */\n      jump\t// in\n    tag_485:\n        /* \"contracts/gainzilla.sol\":29160:29188  hours_ = remaining.div(3600) */\n      swap4\n      pop\n        /* \"contracts/gainzilla.sol\":29198:29215  remaining %= 3600 */\n      tag_486\n        /* \"contracts/gainzilla.sol\":29211:29215  3600 */\n      0x0e10\n        /* \"contracts/gainzilla.sol\":29198:29215  remaining %= 3600 */\n      dup3\n      tag_484\n      jump\t// in\n    tag_486:\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":29236:29253  remaining.div(60) */\n      tag_487\n        /* \"contracts/gainzilla.sol\":29198:29215  remaining %= 3600 */\n      dup2\n        /* \"contracts/gainzilla.sol\":29250:29252  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":29236:29249  remaining.div */\n      tag_359\n        /* \"contracts/gainzilla.sol\":29236:29253  remaining.div(60) */\n      jump\t// in\n    tag_487:\n        /* \"contracts/gainzilla.sol\":29225:29253  minutes_ = remaining.div(60) */\n      swap3\n      pop\n        /* \"contracts/gainzilla.sol\":29274:29288  remaining % 60 */\n      tag_488\n        /* \"contracts/gainzilla.sol\":29286:29288  60 */\n      0x3c\n        /* \"contracts/gainzilla.sol\":29274:29283  remaining */\n      dup3\n        /* \"contracts/gainzilla.sol\":29274:29288  remaining % 60 */\n      tag_484\n      jump\t// in\n    tag_488:\n        /* \"contracts/gainzilla.sol\":29263:29288  seconds_ = remaining % 60 */\n      swap2\n      pop\n        /* \"contracts/gainzilla.sol\":28757:29295  function cooldownRemaining(address account) public view returns (... */\n      pop\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25664:25804  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n    tag_238:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_491\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_491:\n        /* \"contracts/gainzilla.sol\":25758:25783  transferFeeIncreaseFactor */\n      0x19\n        /* \"contracts/gainzilla.sol\":25758:25797  transferFeeIncreaseFactor = _multiplier */\n      sstore\n        /* \"contracts/gainzilla.sol\":25664:25804  function setTransferTransactionMultiplier(uint256 _multiplier) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":12881:13047  function transfer(address recipient, uint256 amount) external override returns (bool) {... */\n    tag_242:\n        /* \"contracts/gainzilla.sol\":12961:12965  bool */\n      0x00\n        /* \"contracts/gainzilla.sol\":12977:13019  _transfer(_msgSender(), recipient, amount) */\n      tag_329\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":13001:13010  recipient */\n      dup5\n        /* \"contracts/gainzilla.sol\":13012:13018  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":12977:12986  _transfer */\n      tag_347\n        /* \"contracts/gainzilla.sol\":12977:13019  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":22277:22479  function manualswap() external onlyOwner() {... */\n    tag_246:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_499\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_499:\n        /* \"contracts/gainzilla.sol\":22374:22378  this */\n      address\n        /* \"contracts/gainzilla.sol\":22330:22353  uint256 contractBalance */\n      0x00\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12744:12753  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":22394:22413  contractBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":22390:22473  if (contractBalance > 0) {... */\n      tag_415\n      jumpi\n        /* \"contracts/gainzilla.sol\":22429:22462  swapTokensForEth(contractBalance) */\n      tag_415\n        /* \"contracts/gainzilla.sol\":22446:22461  contractBalance */\n      dup2\n        /* \"contracts/gainzilla.sol\":22429:22445  swapTokensForEth */\n      tag_505\n        /* \"contracts/gainzilla.sol\":22429:22462  swapTokensForEth(contractBalance) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":28331:28451  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n    tag_271:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_508\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_508:\n        /* \"contracts/gainzilla.sol\":28418:28430  _lpRecipient */\n      0x24\n        /* \"contracts/gainzilla.sol\":28418:28444  _lpRecipient = lpRecipient */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":28331:28451  function updateLpRecipient(address payable lpRecipient) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":21780:21947  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n    tag_275:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_513\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_513:\n        /* \"contracts/gainzilla.sol\":21865:21880  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":21851:21862  _firstBlock */\n      0x05\n        /* \"contracts/gainzilla.sol\":21851:21880  _firstBlock = block.timestamp */\n      sstore\n        /* \"contracts/gainzilla.sol\":21890:21900  _botBlocks */\n      0x06\n        /* \"contracts/gainzilla.sol\":21890:21912  _botBlocks = botBlocks */\n      sstore\n        /* \"contracts/gainzilla.sol\":21922:21933  tradingOpen */\n      0x28\n        /* \"contracts/gainzilla.sol\":21922:21940  tradingOpen = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":21936:21940  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":21922:21940  tradingOpen = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":21780:21947  function openTrading(uint256 botBlocks) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25565:25654  function disableBlackListing() onlyOwner() external {... */\n    tag_278:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_518\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_518:\n        /* \"contracts/gainzilla.sol\":25627:25639  canBlackList */\n      0x28\n        /* \"contracts/gainzilla.sol\":25627:25647  canBlackList = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25565:25654  function disableBlackListing() onlyOwner() external {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":27904:28044  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n    tag_282:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_523\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_523:\n        /* \"contracts/gainzilla.sol\":28001:28018  _ecosystemAddress */\n      0x23\n        /* \"contracts/gainzilla.sol\":28001:28037  _ecosystemAddress = ecosystemAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27904:28044  function updateEcosystemAddress(address payable ecosystemAddress) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":28457:28572  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n    tag_296:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_529\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_529:\n        /* \"contracts/gainzilla.sol\":28538:28553  numTokensToSwap */\n      0x08\n        /* \"contracts/gainzilla.sol\":28538:28565  numTokensToSwap = numTokens */\n      sstore\n        /* \"contracts/gainzilla.sol\":28457:28572  function updateNumTokensToSwap(uint256 numTokens) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":26139:26962  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_301:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_534\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_534:\n        /* \"contracts/gainzilla.sol\":26274:26290  uint256 totalFee */\n      0x00\n        /* \"contracts/gainzilla.sol\":26293:26354  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      tag_537\n        /* \"contracts/gainzilla.sol\":26341:26353  ecosystemFee */\n      dup3\n        /* \"contracts/gainzilla.sol\":26293:26336  marketingFee.add(liquidityFee).add(teamFee) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":26328:26335  teamFee */\n      dup6\n        /* \"contracts/gainzilla.sol\":26293:26336  marketingFee.add(liquidityFee).add(teamFee) */\n      dup2\n        /* \"contracts/gainzilla.sol\":26293:26305  marketingFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":26310:26322  liquidityFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":26293:26309  marketingFee.add */\n      tag_540\n        /* \"contracts/gainzilla.sol\":26293:26323  marketingFee.add(liquidityFee) */\n      jump\t// in\n    tag_539:\n        /* \"contracts/gainzilla.sol\":26293:26327  marketingFee.add(liquidityFee).add */\n      swap1\n      tag_540\n        /* \"contracts/gainzilla.sol\":26293:26336  marketingFee.add(liquidityFee).add(teamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":26293:26354  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n    tag_537:\n        /* \"contracts/gainzilla.sol\":26274:26354  uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":26384:26387  250 */\n      0xfa\n        /* \"contracts/gainzilla.sol\":26372:26380  totalFee */\n      dup2\n        /* \"contracts/gainzilla.sol\":26372:26387  totalFee <= 250 */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":26364:26441  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      tag_541\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8804:8806   */\n      0x20\n        /* \"contracts/gainzilla.sol\":26364:26441  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8786:8807   */\n      mstore\n        /* \"#utility.yul\":8843:8845   */\n      0x31\n        /* \"#utility.yul\":8823:8841   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8816:8846   */\n      mstore\n        /* \"#utility.yul\":8882:8916   */\n      0x53756d206f66206275792066656573206d757374206265206c65737320746861\n        /* \"#utility.yul\":8862:8880   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8855:8917   */\n      mstore\n        /* \"#utility.yul\":8953:8972   */\n      0x6e206f7220657175616c20746f20323525000000000000000000000000000000\n        /* \"#utility.yul\":8933:8951   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8926:8973   */\n      mstore\n        /* \"#utility.yul\":8990:9009   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":26364:26441  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n      tag_336\n        /* \"#utility.yul\":8776:9015   */\n      jump\n        /* \"contracts/gainzilla.sol\":26364:26441  require(totalFee <= 250, \"Sum of buy fees must be less than or equal to 25%\") */\n    tag_541:\n        /* \"contracts/gainzilla.sol\":26459:26471  canChangeTax */\n      sload(0x28)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":26451:26500  require(canChangeTax, \"This function is diabled\") */\n      tag_544\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15098:15100   */\n      0x20\n        /* \"contracts/gainzilla.sol\":26451:26500  require(canChangeTax, \"This function is diabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15080:15101   */\n      mstore\n        /* \"#utility.yul\":15137:15139   */\n      0x18\n        /* \"#utility.yul\":15117:15135   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15110:15140   */\n      mstore\n        /* \"#utility.yul\":15176:15202   */\n      0x546869732066756e6374696f6e20697320646961626c65640000000000000000\n        /* \"#utility.yul\":15156:15174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15149:15203   */\n      mstore\n        /* \"#utility.yul\":15220:15238   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":26451:26500  require(canChangeTax, \"This function is diabled\") */\n      tag_336\n        /* \"#utility.yul\":15070:15244   */\n      jump\n        /* \"contracts/gainzilla.sol\":26451:26500  require(canChangeTax, \"This function is diabled\") */\n    tag_544:\n        /* \"contracts/gainzilla.sol\":26511:26527  _buyMarketingFee */\n      0x0d\n        /* \"contracts/gainzilla.sol\":26511:26542  _buyMarketingFee = marketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26552:26568  _buyLiquidityFee */\n      0x09\n        /* \"contracts/gainzilla.sol\":26552:26583  _buyLiquidityFee = liquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26593:26604  _buyTeamFee */\n      0x0f\n        /* \"contracts/gainzilla.sol\":26593:26614  _buyTeamFee = teamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26624:26640  _buyEcosystemFee */\n      0x0b\n        /* \"contracts/gainzilla.sol\":26624:26655  _buyEcosystemFee = ecosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26674:26698  _previousBuyMarketingFee */\n      0x0e\n        /* \"contracts/gainzilla.sol\":26674:26717  _previousBuyMarketingFee = _buyMarketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26727:26751  _previousBuyLiquidityFee */\n      0x0a\n        /* \"contracts/gainzilla.sol\":26727:26770  _previousBuyLiquidityFee = _buyLiquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26780:26799  _previousBuyTeamFee */\n      0x10\n        /* \"contracts/gainzilla.sol\":26780:26813  _previousBuyTeamFee = _buyTeamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26823:26847  _previousBuyEcosystemFee */\n      0x0c\n        /* \"contracts/gainzilla.sol\":26823:26866  _previousBuyEcosystemFee = _buyEcosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":26890:26955  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17576:17601   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":17632:17634   */\n      0x20\n        /* \"#utility.yul\":17617:17635   */\n      dup2\n      add\n        /* \"#utility.yul\":17610:17644   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":17660:17678   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":17653:17687   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":17718:17720   */\n      0x60\n        /* \"#utility.yul\":17703:17721   */\n      dup2\n      add\n        /* \"#utility.yul\":17696:17730   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":26890:26955  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0\n      swap1\n        /* \"#utility.yul\":17563:17566   */\n      0x80\n        /* \"#utility.yul\":17548:17567   */\n      add\n        /* \"contracts/gainzilla.sol\":26890:26955  BuyFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n    tag_547:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/gainzilla.sol\":3145:3146  _ */\n      pop\n        /* \"contracts/gainzilla.sol\":26139:26962  function setBuyTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25170:25282  function includeInFee(address account) external onlyOwner() {... */\n    tag_305:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_550\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_550:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25240:25267  _isExcludedFromFee[account] */\n      and\n        /* \"contracts/gainzilla.sol\":25270:25275  false */\n      0x00\n        /* \"contracts/gainzilla.sol\":25240:25267  _isExcludedFromFee[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25240:25258  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":25240:25267  _isExcludedFromFee[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25240:25275  _isExcludedFromFee[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25170:25282  function includeInFee(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":3302:3500  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_309:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_555\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_555:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3390:3412  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_558\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9572:9574   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9554:9575   */\n      mstore\n        /* \"#utility.yul\":9611:9613   */\n      0x26\n        /* \"#utility.yul\":9591:9609   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9584:9614   */\n      mstore\n        /* \"#utility.yul\":9650:9684   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9630:9648   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9623:9685   */\n      mstore\n        /* \"#utility.yul\":9721:9729   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9701:9719   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9694:9730   */\n      mstore\n        /* \"#utility.yul\":9747:9766   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_336\n        /* \"#utility.yul\":9544:9772   */\n      jump\n        /* \"contracts/gainzilla.sol\":3382:3455  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_558:\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      tag_415\n        /* \"contracts/gainzilla.sol\":3484:3492  newOwner */\n      dup2\n        /* \"contracts/gainzilla.sol\":3465:3483  _transferOwnership */\n      tag_562\n        /* \"contracts/gainzilla.sol\":3465:3493  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":26968:27806  function setSellTaxes(uint256 marketingFee, uint256 liquidityFee, uint256 teamFee, uint256 ecosystemFee) external onlyOwner() {... */\n    tag_313:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_565\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_565:\n        /* \"contracts/gainzilla.sol\":27104:27120  uint256 totalFee */\n      0x00\n        /* \"contracts/gainzilla.sol\":27123:27184  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      tag_568\n        /* \"contracts/gainzilla.sol\":27171:27183  ecosystemFee */\n      dup3\n        /* \"contracts/gainzilla.sol\":27123:27166  marketingFee.add(liquidityFee).add(teamFee) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":27158:27165  teamFee */\n      dup6\n        /* \"contracts/gainzilla.sol\":27123:27166  marketingFee.add(liquidityFee).add(teamFee) */\n      dup2\n        /* \"contracts/gainzilla.sol\":27123:27135  marketingFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":27140:27152  liquidityFee */\n      dup10\n        /* \"contracts/gainzilla.sol\":27123:27139  marketingFee.add */\n      tag_540\n        /* \"contracts/gainzilla.sol\":27123:27153  marketingFee.add(liquidityFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":27123:27184  marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n    tag_568:\n        /* \"contracts/gainzilla.sol\":27104:27184  uint256 totalFee = marketingFee.add(liquidityFee).add(teamFee).add(ecosystemFee) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":27214:27217  250 */\n      0xfa\n        /* \"contracts/gainzilla.sol\":27202:27210  totalFee */\n      dup2\n        /* \"contracts/gainzilla.sol\":27202:27217  totalFee <= 250 */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":27194:27272  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      tag_571\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11863:11865   */\n      0x20\n        /* \"contracts/gainzilla.sol\":27194:27272  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11845:11866   */\n      mstore\n        /* \"#utility.yul\":11902:11904   */\n      0x32\n        /* \"#utility.yul\":11882:11900   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11875:11905   */\n      mstore\n        /* \"#utility.yul\":11941:11975   */\n      0x53756d206f662073656c6c2066656573206d757374206265206c657373207468\n        /* \"#utility.yul\":11921:11939   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11914:11976   */\n      mstore\n        /* \"#utility.yul\":12012:12032   */\n      0x616e206f7220657175616c20746f203235250000000000000000000000000000\n        /* \"#utility.yul\":11992:12010   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11985:12033   */\n      mstore\n        /* \"#utility.yul\":12050:12069   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":27194:27272  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n      tag_336\n        /* \"#utility.yul\":11835:12075   */\n      jump\n        /* \"contracts/gainzilla.sol\":27194:27272  require(totalFee <= 250, \"Sum of sell fees must be less than or equal to 25%\") */\n    tag_571:\n        /* \"contracts/gainzilla.sol\":27290:27302  canChangeTax */\n      sload(0x28)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":27282:27331  require(canChangeTax, \"This function is diabled\") */\n      tag_574\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15098:15100   */\n      0x20\n        /* \"contracts/gainzilla.sol\":27282:27331  require(canChangeTax, \"This function is diabled\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15080:15101   */\n      mstore\n        /* \"#utility.yul\":15137:15139   */\n      0x18\n        /* \"#utility.yul\":15117:15135   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15110:15140   */\n      mstore\n        /* \"#utility.yul\":15176:15202   */\n      0x546869732066756e6374696f6e20697320646961626c65640000000000000000\n        /* \"#utility.yul\":15156:15174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15149:15203   */\n      mstore\n        /* \"#utility.yul\":15220:15238   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":27282:27331  require(canChangeTax, \"This function is diabled\") */\n      tag_336\n        /* \"#utility.yul\":15070:15244   */\n      jump\n        /* \"contracts/gainzilla.sol\":27282:27331  require(canChangeTax, \"This function is diabled\") */\n    tag_574:\n        /* \"contracts/gainzilla.sol\":27342:27359  _sellMarketingFee */\n      0x15\n        /* \"contracts/gainzilla.sol\":27342:27374  _sellMarketingFee = marketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27384:27401  _sellLiquidityFee */\n      0x11\n        /* \"contracts/gainzilla.sol\":27384:27416  _sellLiquidityFee = liquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27426:27438  _sellTeamFee */\n      0x17\n        /* \"contracts/gainzilla.sol\":27426:27448  _sellTeamFee = teamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27458:27475  _sellEcosystemFee */\n      0x13\n        /* \"contracts/gainzilla.sol\":27458:27490  _sellEcosystemFee = ecosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27509:27534  _previousSellMarketingFee */\n      0x16\n        /* \"contracts/gainzilla.sol\":27509:27554  _previousSellMarketingFee = _sellMarketingFee */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27564:27589  _previousSellLiquidityFee */\n      0x12\n        /* \"contracts/gainzilla.sol\":27564:27609  _previousSellLiquidityFee = _sellLiquidityFee */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27619:27639  _previousSellTeamFee */\n      0x18\n        /* \"contracts/gainzilla.sol\":27619:27654  _previousSellTeamFee = _sellTeamFee */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27664:27689  _previousSellEcosystemFee */\n      0x14\n        /* \"contracts/gainzilla.sol\":27664:27709  _previousSellEcosystemFee = _sellEcosystemFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":27733:27799  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17576:17601   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":17632:17634   */\n      0x20\n        /* \"#utility.yul\":17617:17635   */\n      dup2\n      add\n        /* \"#utility.yul\":17610:17644   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":17660:17678   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":17653:17687   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":17718:17720   */\n      0x60\n        /* \"#utility.yul\":17703:17721   */\n      dup2\n      add\n        /* \"#utility.yul\":17696:17730   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":27733:27799  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      0x439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d1\n      swap1\n        /* \"#utility.yul\":17563:17566   */\n      0x80\n        /* \"#utility.yul\":17548:17567   */\n      add\n        /* \"contracts/gainzilla.sol\":27733:27799  SellFeesUpdated(marketingFee, liquidityFee, teamFee, ecosystemFee) */\n      tag_547\n        /* \"#utility.yul\":17530:17736   */\n      jump\n        /* \"contracts/gainzilla.sol\":29301:29855  function configureDiamondFloor(bool enabled, uint16 triggerPercentage) external onlyOwner {... */\n    tag_318:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_579\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_579:\n        /* \"contracts/gainzilla.sol\":29429:29433  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":29409:29426  triggerPercentage */\n      dup2\n        /* \"contracts/gainzilla.sol\":29409:29433  triggerPercentage < 1000 */\n      0xffff\n      and\n      lt\n        /* \"contracts/gainzilla.sol\":29401:29478  require(triggerPercentage < 1000, \"Trigger percentage must be < 1000 (100%)\") */\n      tag_582\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10739:10741   */\n      0x20\n        /* \"contracts/gainzilla.sol\":29401:29478  require(triggerPercentage < 1000, \"Trigger percentage must be < 1000 (100%)\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10721:10742   */\n      mstore\n        /* \"#utility.yul\":10778:10780   */\n      0x28\n        /* \"#utility.yul\":10758:10776   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10751:10781   */\n      mstore\n        /* \"#utility.yul\":10817:10851   */\n      0x547269676765722070657263656e74616765206d757374206265203c20313030\n        /* \"#utility.yul\":10797:10815   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10790:10852   */\n      mstore\n        /* \"#utility.yul\":10888:10898   */\n      0x3020283130302529000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10868:10886   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10861:10899   */\n      mstore\n        /* \"#utility.yul\":10916:10935   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":29401:29478  require(triggerPercentage < 1000, \"Trigger percentage must be < 1000 (100%)\") */\n      tag_336\n        /* \"#utility.yul\":10711:10941   */\n      jump\n        /* \"contracts/gainzilla.sol\":29401:29478  require(triggerPercentage < 1000, \"Trigger percentage must be < 1000 (100%)\") */\n    tag_582:\n        /* \"contracts/gainzilla.sol\":29488:29500  diamondFloor */\n      0x1c\n        /* \"contracts/gainzilla.sol\":29488:29518  diamondFloor.enabled = enabled */\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":29528:29578  diamondFloor.triggerPercentage = triggerPercentage */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000\n      and\n        /* \"contracts/gainzilla.sol\":29488:29518  diamondFloor.enabled = enabled */\n      dup4\n      iszero\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":29528:29578  diamondFloor.triggerPercentage = triggerPercentage */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ff\n      and\n      swap2\n      swap1\n      swap2\n      or\n        /* \"contracts/gainzilla.sol\":29488:29518  diamondFloor.enabled = enabled */\n      0x0100\n        /* \"contracts/gainzilla.sol\":29528:29578  diamondFloor.triggerPercentage = triggerPercentage */\n      0xffff\n      dup6\n      and\n      mul\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/gainzilla.sol\":29488:29518  diamondFloor.enabled = enabled */\n      dup3\n      swap1\n        /* \"contracts/gainzilla.sol\":29647:29684  enabled && diamondFloor.athPrice == 0 */\n      tag_585\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":29658:29679  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":29658:29684  diamondFloor.athPrice == 0 */\n      iszero\n        /* \"contracts/gainzilla.sol\":29647:29684  enabled && diamondFloor.athPrice == 0 */\n    tag_585:\n        /* \"contracts/gainzilla.sol\":29643:29849  if (enabled && diamondFloor.athPrice == 0) {... */\n      iszero\n      tag_418\n      jumpi\n        /* \"contracts/gainzilla.sol\":29700:29720  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":29723:29734  pairPrice() */\n      tag_587\n        /* \"contracts/gainzilla.sol\":29723:29732  pairPrice */\n      tag_220\n        /* \"contracts/gainzilla.sol\":29723:29734  pairPrice() */\n      jump\t// in\n    tag_587:\n        /* \"contracts/gainzilla.sol\":29700:29734  uint256 currentPrice = pairPrice() */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":29752:29768  currentPrice > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":29748:29839  if (currentPrice > 0) {... */\n      tag_383\n      jumpi\n        /* \"contracts/gainzilla.sol\":29788:29809  diamondFloor.athPrice */\n      0x1d\n        /* \"contracts/gainzilla.sol\":29788:29824  diamondFloor.athPrice = currentPrice */\n      sstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":29301:29855  function configureDiamondFloor(bool enabled, uint16 triggerPercentage) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":25393:25559  function addBot(address account) external onlyOwner() {... */\n    tag_326:\n        /* \"contracts/gainzilla.sol\":3076:3082  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/gainzilla.sol\":818:828  msg.sender */\n      caller\n        /* \"contracts/gainzilla.sol\":3076:3098  _owner == _msgSender() */\n      eq\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_591\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13095:13097   */\n      0x20\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13077:13098   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13114:13132   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13107:13137   */\n      mstore\n        /* \"#utility.yul\":13173:13207   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13153:13171   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13146:13208   */\n      mstore\n        /* \"#utility.yul\":13225:13243   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n        /* \"#utility.yul\":13067:13249   */\n      jump\n        /* \"contracts/gainzilla.sol\":3068:3135  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_591:\n        /* \"contracts/gainzilla.sol\":25465:25477  canBlackList */\n      sload(0x28)\n      0x01000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":25457:25522  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      tag_594\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14283:14285   */\n      0x20\n        /* \"contracts/gainzilla.sol\":25457:25522  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14265:14286   */\n      mstore\n        /* \"#utility.yul\":14322:14324   */\n      0x28\n        /* \"#utility.yul\":14302:14320   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14295:14325   */\n      mstore\n        /* \"#utility.yul\":14361:14395   */\n      0x7468697320636f6e74726163742063616e6e6f7420626c61636b6c6973742061\n        /* \"#utility.yul\":14341:14359   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14334:14396   */\n      mstore\n        /* \"#utility.yul\":14432:14442   */\n      0x6464726573736573000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14412:14430   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14405:14443   */\n      mstore\n        /* \"#utility.yul\":14460:14479   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":25457:25522  require(canBlackList, \"this contract cannot blacklist addresses\") */\n      tag_336\n        /* \"#utility.yul\":14255:14485   */\n      jump\n        /* \"contracts/gainzilla.sol\":25457:25522  require(canBlackList, \"this contract cannot blacklist addresses\") */\n    tag_594:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":25532:25545  bots[account] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":25532:25536  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":25532:25545  bots[account] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":25532:25552  bots[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":25548:25552  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":25532:25552  bots[account] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":25393:25559  function addBot(address account) external onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":14855:15185  function _approve(address owner, address spender, uint256 amount) private {... */\n    tag_332:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":14947:14966  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":14939:15007  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_599\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15451:15453   */\n      0x20\n        /* \"contracts/gainzilla.sol\":14939:15007  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15433:15454   */\n      mstore\n        /* \"#utility.yul\":15490:15492   */\n      0x24\n        /* \"#utility.yul\":15470:15488   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":15463:15493   */\n      mstore\n        /* \"#utility.yul\":15529:15563   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":15509:15527   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15502:15564   */\n      mstore\n        /* \"#utility.yul\":15600:15606   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15580:15598   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15573:15607   */\n      mstore\n        /* \"#utility.yul\":15624:15643   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":14939:15007  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_336\n        /* \"#utility.yul\":15423:15649   */\n      jump\n        /* \"contracts/gainzilla.sol\":14939:15007  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_599:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15025:15046  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_602\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9979:9981   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9961:9982   */\n      mstore\n        /* \"#utility.yul\":10018:10020   */\n      0x22\n        /* \"#utility.yul\":9998:10016   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9991:10021   */\n      mstore\n        /* \"#utility.yul\":10057:10091   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":10037:10055   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10030:10092   */\n      mstore\n        /* \"#utility.yul\":10128:10132   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10108:10126   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10101:10133   */\n      mstore\n        /* \"#utility.yul\":10150:10169   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_336\n        /* \"#utility.yul\":9951:10175   */\n      jump\n        /* \"contracts/gainzilla.sol\":15017:15085  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_602:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15095:15113  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15095:15106  _allowances */\n      0x03\n        /* \"contracts/gainzilla.sol\":15095:15113  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/gainzilla.sol\":15095:15122  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":15095:15131  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":15146:15178  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7136:7161   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15146:15178  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":7109:7127   */\n      add\n        /* \"contracts/gainzilla.sol\":15146:15178  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/gainzilla.sol\":14855:15185  function _approve(address owner, address spender, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":15195:18402  function _transfer(address from, address to, uint256 amount) private {... */\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15282:15300  from != address(0) */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":15274:15342  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_607\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14692:14694   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15274:15342  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14674:14695   */\n      mstore\n        /* \"#utility.yul\":14731:14733   */\n      0x25\n        /* \"#utility.yul\":14711:14729   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14704:14734   */\n      mstore\n        /* \"#utility.yul\":14770:14804   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":14750:14768   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14743:14805   */\n      mstore\n        /* \"#utility.yul\":14841:14848   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14821:14839   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14814:14849   */\n      mstore\n        /* \"#utility.yul\":14866:14885   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15274:15342  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_336\n        /* \"#utility.yul\":14664:14891   */\n      jump\n        /* \"contracts/gainzilla.sol\":15274:15342  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_607:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15360:15376  to != address(0) */\n      dup3\n      and\n        /* \"contracts/gainzilla.sol\":15352:15416  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_610\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8400:8402   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15352:15416  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8382:8403   */\n      mstore\n        /* \"#utility.yul\":8439:8441   */\n      0x23\n        /* \"#utility.yul\":8419:8437   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8412:8442   */\n      mstore\n        /* \"#utility.yul\":8478:8512   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8458:8476   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8451:8513   */\n      mstore\n        /* \"#utility.yul\":8549:8554   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8529:8547   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8522:8555   */\n      mstore\n        /* \"#utility.yul\":8572:8591   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15352:15416  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_336\n        /* \"#utility.yul\":8372:8597   */\n      jump\n        /* \"contracts/gainzilla.sol\":15352:15416  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_610:\n        /* \"contracts/gainzilla.sol\":15443:15444  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":15434:15440  amount */\n      dup2\n        /* \"contracts/gainzilla.sol\":15434:15444  amount > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":15426:15490  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_613\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13456:13458   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15426:15490  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13438:13459   */\n      mstore\n        /* \"#utility.yul\":13495:13497   */\n      0x29\n        /* \"#utility.yul\":13475:13493   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13468:13498   */\n      mstore\n        /* \"#utility.yul\":13534:13568   */\n      0x5472616e7366657220616d6f756e74206d757374206265206772656174657220\n        /* \"#utility.yul\":13514:13532   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13507:13569   */\n      mstore\n        /* \"#utility.yul\":13605:13616   */\n      0x7468616e207a65726f0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13585:13603   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13578:13617   */\n      mstore\n        /* \"#utility.yul\":13634:13653   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":15426:15490  require(amount > 0, \"Transfer amount must be greater than zero\") */\n      tag_336\n        /* \"#utility.yul\":13428:13659   */\n      jump\n        /* \"contracts/gainzilla.sol\":15426:15490  require(amount > 0, \"Transfer amount must be greater than zero\") */\n    tag_613:\n        /* \"contracts/gainzilla.sol\":15516:15520  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":15543:15550  owner() */\n      tag_616\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":2954:3031  function owner() public view returns (address) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":15543:15550  owner() */\n    tag_616:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15535:15550  from != owner() */\n      and\n        /* \"contracts/gainzilla.sol\":15535:15539  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15535:15550  from != owner() */\n      and\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15535:15567  from != owner() && to != owner() */\n      dup1\n      iszero\n      tag_617\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":2992:2999  address */\n      0x00\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15554:15567  to != owner() */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":3018:3024  _owner */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":15554:15567  to != owner() */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15535:15567  from != owner() && to != owner() */\n    tag_617:\n        /* \"contracts/gainzilla.sol\":15535:15592  from != owner() && to != owner() && from != address(this) */\n      dup1\n      iszero\n      tag_619\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15571:15592  from != address(this) */\n      dup5\n      and\n        /* \"contracts/gainzilla.sol\":15587:15591  this */\n      address\n        /* \"contracts/gainzilla.sol\":15571:15592  from != address(this) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15535:15592  from != owner() && to != owner() && from != address(this) */\n    tag_619:\n        /* \"contracts/gainzilla.sol\":15535:15615  from != owner() && to != owner() && from != address(this) && to != address(this) */\n      dup1\n      iszero\n      tag_620\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15596:15615  to != address(this) */\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":15610:15614  this */\n      address\n        /* \"contracts/gainzilla.sol\":15596:15615  to != address(this) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15535:15615  from != owner() && to != owner() && from != address(this) && to != address(this) */\n    tag_620:\n        /* \"contracts/gainzilla.sol\":15531:18230  if (from != owner() && to != owner() && from != address(this) && to != address(this)) {... */\n      iszero\n      tag_676\n      jumpi\n        /* \"contracts/gainzilla.sol\":15639:15650  tradingOpen */\n      and(0xff, sload(0x28))\n        /* \"contracts/gainzilla.sol\":15631:15676  require(tradingOpen, \"Trading is not active\") */\n      tag_622\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9222:9224   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15631:15676  require(tradingOpen, \"Trading is not active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9204:9225   */\n      mstore\n        /* \"#utility.yul\":9261:9263   */\n      0x15\n        /* \"#utility.yul\":9241:9259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9234:9264   */\n      mstore\n        /* \"#utility.yul\":9300:9323   */\n      0x54726164696e67206973206e6f74206163746976650000000000000000000000\n        /* \"#utility.yul\":9280:9298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9273:9324   */\n      mstore\n        /* \"#utility.yul\":9341:9359   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":15631:15676  require(tradingOpen, \"Trading is not active\") */\n      tag_336\n        /* \"#utility.yul\":9194:9365   */\n      jump\n        /* \"contracts/gainzilla.sol\":15631:15676  require(tradingOpen, \"Trading is not active\") */\n    tag_622:\n        /* \"contracts/gainzilla.sol\":15702:15715  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15694:15715  from == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":15702:15715  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":15694:15715  from == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":15694:15749  from == uniswapV2Pair && to != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_625\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":15733:15748  uniswapV2Router */\n      sload(0x25)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15719:15749  to != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":15733:15748  uniswapV2Router */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":15719:15749  to != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":15694:15749  from == uniswapV2Pair && to != address(uniswapV2Router) */\n    tag_625:\n        /* \"contracts/gainzilla.sol\":15690:16110  if (from == uniswapV2Pair && to != address(uniswapV2Router)) {//buys... */\n      iszero\n      tag_632\n      jumpi\n        /* \"contracts/gainzilla.sol\":15815:15825  _botBlocks */\n      sload(0x06)\n        /* \"contracts/gainzilla.sol\":15799:15810  _firstBlock */\n      sload(0x05)\n        /* \"contracts/gainzilla.sol\":15799:15826  _firstBlock.add(_botBlocks) */\n      tag_627\n      swap2\n        /* \"contracts/gainzilla.sol\":15799:15814  _firstBlock.add */\n      tag_540\n        /* \"contracts/gainzilla.sol\":15799:15826  _firstBlock.add(_botBlocks) */\n      jump\t// in\n    tag_627:\n        /* \"contracts/gainzilla.sol\":15780:15795  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":15780:15826  block.timestamp <= _firstBlock.add(_botBlocks) */\n      gt\n        /* \"contracts/gainzilla.sol\":15776:15884  if (block.timestamp <= _firstBlock.add(_botBlocks)) {... */\n      tag_628\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15850:15858  bots[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15850:15854  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":15850:15858  bots[to] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":15850:15865  bots[to] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":15861:15865  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":15850:15865  bots[to] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":15776:15884  if (block.timestamp <= _firstBlock.add(_botBlocks)) {... */\n    tag_628:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":15907:15929  _isExcludedFromFee[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":15907:15925  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":15907:15929  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":15902:16096  if (!_isExcludedFromFee[to]) {... */\n      tag_632\n      jumpi\n        /* \"contracts/gainzilla.sol\":15990:16006  _maxWalletAmount */\n      sload(0x07)\n        /* \"contracts/gainzilla.sol\":15961:15986  balanceOf(to).add(amount) */\n      tag_630\n        /* \"contracts/gainzilla.sol\":15979:15985  amount */\n      dup4\n        /* \"contracts/gainzilla.sol\":15961:15974  balanceOf(to) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":15971:15973  to */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12718:12725  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12744:12753  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":12652:12769  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":15961:15986  balanceOf(to).add(amount) */\n    tag_630:\n        /* \"contracts/gainzilla.sol\":15961:16006  balanceOf(to).add(amount) <= _maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":15953:16077  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_632\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15856:15858   */\n      0x20\n        /* \"contracts/gainzilla.sol\":15953:16077  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15838:15859   */\n      mstore\n        /* \"#utility.yul\":15895:15897   */\n      0x42\n        /* \"#utility.yul\":15875:15893   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15868:15898   */\n      mstore\n        /* \"#utility.yul\":15934:15968   */\n      0x2e77616c6c65742062616c616e6365206166746572207472616e73666572206d\n        /* \"#utility.yul\":15914:15932   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15907:15969   */\n      mstore\n        /* \"#utility.yul\":16005:16039   */\n      0x757374206265206c657373207468616e206d61782077616c6c657420616d6f75\n        /* \"#utility.yul\":15985:16003   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15978:16040   */\n      mstore\n        /* \"#utility.yul\":16077:16081   */\n      0x6e74000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16056:16075   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":16049:16082   */\n      mstore\n        /* \"#utility.yul\":16099:16118   */\n      0xa4\n      add\n        /* \"contracts/gainzilla.sol\":15953:16077  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_336\n        /* \"#utility.yul\":15828:16124   */\n      jump\n        /* \"contracts/gainzilla.sol\":15953:16077  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n    tag_632:\n        /* \"contracts/gainzilla.sol\":16141:16147  inSwap */\n      sload(0x28)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16140:16147  !inSwap */\n      iszero\n        /* \"contracts/gainzilla.sol\":16140:16172  !inSwap && from != uniswapV2Pair */\n      dup1\n      iszero\n      tag_635\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":16159:16172  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16151:16172  from != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":16159:16172  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":16151:16172  from != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":16140:16172  !inSwap && from != uniswapV2Pair */\n    tag_635:\n        /* \"contracts/gainzilla.sol\":16140:16195  !inSwap && from != uniswapV2Pair && to == uniswapV2Pair */\n      dup1\n      iszero\n      tag_636\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":16182:16195  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16176:16195  to == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":16182:16195  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":16176:16195  to == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":16140:16195  !inSwap && from != uniswapV2Pair && to == uniswapV2Pair */\n    tag_636:\n        /* \"contracts/gainzilla.sol\":16136:17902  if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells... */\n      iszero\n      tag_637\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16232:16242  bots[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16232:16236  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":16232:16242  bots[from] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16231:16242  !bots[from] */\n      iszero\n        /* \"contracts/gainzilla.sol\":16231:16255  !bots[from] && !bots[to] */\n      dup1\n      iszero\n      tag_638\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16247:16255  bots[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16247:16251  bots */\n      0x20\n        /* \"contracts/gainzilla.sol\":16247:16255  bots[to] */\n      dup1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16246:16255  !bots[to] */\n      iszero\n        /* \"contracts/gainzilla.sol\":16231:16255  !bots[from] && !bots[to] */\n    tag_638:\n        /* \"contracts/gainzilla.sol\":16223:16256  require(!bots[from] && !bots[to]) */\n      tag_639\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_639:\n        /* \"contracts/gainzilla.sol\":16324:16332  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":16324:16340  cooldown.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16320:16553  if (cooldown.enabled) {... */\n      iszero\n      tag_640\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16391:16416  cooldown.walletList[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16391:16410  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":16391:16416  cooldown.walletList[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":16372:16387  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":16372:16416  block.timestamp >= cooldown.walletList[from] */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":16364:16449  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      tag_641\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10382:10384   */\n      0x20\n        /* \"contracts/gainzilla.sol\":16364:16449  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10364:10385   */\n      mstore\n        /* \"#utility.yul\":10421:10423   */\n      0x1c\n        /* \"#utility.yul\":10401:10419   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10394:10424   */\n      mstore\n        /* \"#utility.yul\":10460:10490   */\n      0x5374726f6e672048616e64732050726f746f636f6c2061637469766500000000\n        /* \"#utility.yul\":10440:10458   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10433:10491   */\n      mstore\n        /* \"#utility.yul\":10508:10526   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":16364:16449  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n      tag_336\n        /* \"#utility.yul\":10354:10532   */\n      jump\n        /* \"contracts/gainzilla.sol\":16364:16449  require(block.timestamp >= cooldown.walletList[from], \"Strong Hands Protocol active\") */\n    tag_641:\n        /* \"contracts/gainzilla.sol\":16517:16525  cooldown */\n      0x1a\n        /* \"contracts/gainzilla.sol\":16517:16534  cooldown.duration */\n      sload\n        /* \"contracts/gainzilla.sol\":16499:16534  block.timestamp + cooldown.duration */\n      tag_644\n      swap1\n        /* \"contracts/gainzilla.sol\":16517:16534  cooldown.duration */\n      0x0100\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"contracts/gainzilla.sol\":16499:16514  block.timestamp */\n      timestamp\n        /* \"contracts/gainzilla.sol\":16499:16534  block.timestamp + cooldown.duration */\n      tag_645\n      jump\t// in\n    tag_644:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":16471:16496  cooldown.walletList[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":16471:16490  cooldown.walletList */\n      0x1b\n        /* \"contracts/gainzilla.sol\":16471:16496  cooldown.walletList[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":16471:16534  cooldown.walletList[from] = block.timestamp + cooldown.duration */\n      sstore\n        /* \"contracts/gainzilla.sol\":16320:16553  if (cooldown.enabled) {... */\n    tag_640:\n        /* \"contracts/gainzilla.sol\":16614:16626  diamondFloor */\n      0x1c\n        /* \"contracts/gainzilla.sol\":16614:16634  diamondFloor.enabled */\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":16610:16790  if (diamondFloor.enabled) {... */\n      iszero\n      tag_650\n      jumpi\n        /* \"contracts/gainzilla.sol\":16667:16691  diamondFloor.sellStopped */\n      and(0xff, sload(0x1e))\n        /* \"contracts/gainzilla.sol\":16666:16691  !diamondFloor.sellStopped */\n      iszero\n        /* \"contracts/gainzilla.sol\":16658:16726  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_647\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11504:11506   */\n      0x20\n        /* \"contracts/gainzilla.sol\":16658:16726  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11486:11507   */\n      mstore\n        /* \"#utility.yul\":11543:11545   */\n      0x1e\n        /* \"#utility.yul\":11523:11541   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11516:11546   */\n      mstore\n        /* \"#utility.yul\":11582:11614   */\n      0x53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f720000\n        /* \"#utility.yul\":11562:11580   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11555:11615   */\n      mstore\n        /* \"#utility.yul\":11632:11650   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":16658:16726  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n      tag_336\n        /* \"#utility.yul\":11476:11656   */\n      jump\n        /* \"contracts/gainzilla.sol\":16658:16726  require(!diamondFloor.sellStopped, \"Sells stopped by Diamond Floor\") */\n    tag_647:\n        /* \"contracts/gainzilla.sol\":16748:16771  _checkPriceConditions() */\n      tag_650\n        /* \"contracts/gainzilla.sol\":16748:16769  _checkPriceConditions */\n      tag_651\n        /* \"contracts/gainzilla.sol\":16748:16771  _checkPriceConditions() */\n      jump\t// in\n    tag_650:\n        /* \"contracts/gainzilla.sol\":16873:16877  this */\n      address\n        /* \"contracts/gainzilla.sol\":16824:16852  uint256 contractTokenBalance */\n      0x00\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12744:12753  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":16926:16941  numTokensToSwap */\n      sload(0x08)\n        /* \"contracts/gainzilla.sol\":16902:16941  contractTokenBalance >= numTokensToSwap */\n      dup2\n      lt\n        /* \"contracts/gainzilla.sol\":16898:17867  if (contractTokenBalance >= numTokensToSwap) {... */\n      tag_653\n      jumpi\n        /* \"contracts/gainzilla.sol\":16969:16993  contractTokenBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":16965:17644  if (contractTokenBalance > 0) {... */\n      tag_658\n      jumpi\n        /* \"contracts/gainzilla.sol\":17109:17110  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":17025:17106  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n      tag_655\n        /* \"contracts/gainzilla.sol\":17088:17105  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":17025:17083  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":17065:17082  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":17025:17060  _sellMarketingFee.add(_sellTeamFee) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":17047:17059  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":17025:17042  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":17025:17046  _sellMarketingFee.add */\n      tag_540\n      swap1\n        /* \"contracts/gainzilla.sol\":17025:17060  _sellMarketingFee.add(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":17025:17106  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n    tag_655:\n        /* \"contracts/gainzilla.sol\":17025:17110  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0 */\n      gt\n        /* \"contracts/gainzilla.sol\":17021:17622  if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {... */\n      iszero\n      tag_658\n      jumpi\n        /* \"contracts/gainzilla.sol\":17142:17162  uint256 autoLPamount */\n      0x00\n        /* \"contracts/gainzilla.sol\":17165:17295  _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n      tag_659\n        /* \"contracts/gainzilla.sol\":17213:17294  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n      tag_660\n        /* \"contracts/gainzilla.sol\":17276:17293  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":17213:17271  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":17253:17270  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":17213:17248  _sellMarketingFee.add(_sellTeamFee) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":17235:17247  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":17213:17230  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":17213:17234  _sellMarketingFee.add */\n      tag_540\n      swap1\n        /* \"contracts/gainzilla.sol\":17213:17248  _sellMarketingFee.add(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":17213:17294  _sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) */\n    tag_660:\n        /* \"contracts/gainzilla.sol\":17165:17182  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":17165:17208  _sellLiquidityFee.mul(contractTokenBalance) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":17187:17207  contractTokenBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":17165:17186  _sellLiquidityFee.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":17165:17208  _sellLiquidityFee.mul(contractTokenBalance) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":17165:17295  _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n    tag_659:\n        /* \"contracts/gainzilla.sol\":17142:17295  uint256 autoLPamount = _sellLiquidityFee.mul(contractTokenBalance).div(_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee)) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":17325:17340  uint256 minusLP */\n      0x00\n        /* \"contracts/gainzilla.sol\":17402:17414  autoLPamount */\n      dup2\n        /* \"contracts/gainzilla.sol\":17378:17398  contractTokenBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":17378:17414  contractTokenBalance >= autoLPamount */\n      lt\n        /* \"contracts/gainzilla.sol\":17374:17529  if (contractTokenBalance >= autoLPamount) {... */\n      tag_664\n      jumpi\n        /* \"contracts/gainzilla.sol\":17460:17498  contractTokenBalance.sub(autoLPamount) */\n      tag_665\n        /* \"contracts/gainzilla.sol\":17460:17480  contractTokenBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":17485:17497  autoLPamount */\n      dup4\n        /* \"contracts/gainzilla.sol\":17460:17484  contractTokenBalance.sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":17460:17498  contractTokenBalance.sub(autoLPamount) */\n      jump\t// in\n    tag_665:\n        /* \"contracts/gainzilla.sol\":17450:17498  minusLP = contractTokenBalance.sub(autoLPamount) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":17374:17529  if (contractTokenBalance >= autoLPamount) {... */\n    tag_664:\n        /* \"contracts/gainzilla.sol\":17558:17595  swapAndLiquify(autoLPamount, minusLP) */\n      tag_666\n        /* \"contracts/gainzilla.sol\":17573:17585  autoLPamount */\n      dup3\n        /* \"contracts/gainzilla.sol\":17587:17594  minusLP */\n      dup3\n        /* \"contracts/gainzilla.sol\":17558:17572  swapAndLiquify */\n      tag_667\n        /* \"contracts/gainzilla.sol\":17558:17595  swapAndLiquify(autoLPamount, minusLP) */\n      jump\t// in\n    tag_666:\n        /* \"contracts/gainzilla.sol\":17021:17622  if (_sellMarketingFee.add(_sellTeamFee).add(_sellEcosystemFee).add(_sellLiquidityFee) > 0) {... */\n      pop\n      pop\n    tag_658:\n        /* \"contracts/gainzilla.sol\":17694:17715  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":17741:17763  contractETHBalance > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":17737:17849  if (contractETHBalance > 0) {... */\n      tag_669\n      jumpi\n        /* \"contracts/gainzilla.sol\":17791:17826  sendETHToFee(address(this).balance) */\n      tag_669\n        /* \"contracts/gainzilla.sol\":17804:17825  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":17791:17803  sendETHToFee */\n      tag_670\n        /* \"contracts/gainzilla.sol\":17791:17826  sendETHToFee(address(this).balance) */\n      jump\t// in\n    tag_669:\n        /* \"contracts/gainzilla.sol\":16898:17867  if (contractTokenBalance >= numTokensToSwap) {... */\n      pop\n    tag_653:\n        /* \"contracts/gainzilla.sol\":16136:17902  if (!inSwap && from != uniswapV2Pair && to == uniswapV2Pair) { //sells... */\n      pop\n    tag_637:\n        /* \"contracts/gainzilla.sol\":17927:17940  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":17919:17940  from != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":17927:17940  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":17919:17940  from != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":17919:17963  from != uniswapV2Pair && to != uniswapV2Pair */\n      tag_671\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":17950:17963  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":17944:17963  to != uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":17950:17963  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":17944:17963  to != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":17919:17963  from != uniswapV2Pair && to != uniswapV2Pair */\n    tag_671:\n        /* \"contracts/gainzilla.sol\":17916:18220  if(from != uniswapV2Pair && to != uniswapV2Pair) { //transfers... */\n      iszero\n      tag_676\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18017:18039  _isExcludedFromFee[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":18017:18035  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":18017:18039  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":18012:18206  if (!_isExcludedFromFee[to]) {... */\n      tag_676\n      jumpi\n        /* \"contracts/gainzilla.sol\":18100:18116  _maxWalletAmount */\n      sload(0x07)\n        /* \"contracts/gainzilla.sol\":18071:18096  balanceOf(to).add(amount) */\n      tag_674\n        /* \"contracts/gainzilla.sol\":18089:18095  amount */\n      dup4\n        /* \"contracts/gainzilla.sol\":18071:18084  balanceOf(to) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":18081:18083  to */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      and\n        /* \"contracts/gainzilla.sol\":12718:12725  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":12744:12753  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":12744:12762  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":12652:12769  function balanceOf(address account) public view override returns (uint256) {... */\n      jump\n        /* \"contracts/gainzilla.sol\":18071:18096  balanceOf(to).add(amount) */\n    tag_674:\n        /* \"contracts/gainzilla.sol\":18071:18116  balanceOf(to).add(amount) <= _maxWalletAmount */\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":18063:18187  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_676\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15856:15858   */\n      0x20\n        /* \"contracts/gainzilla.sol\":18063:18187  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15838:15859   */\n      mstore\n        /* \"#utility.yul\":15895:15897   */\n      0x42\n        /* \"#utility.yul\":15875:15893   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15868:15898   */\n      mstore\n        /* \"#utility.yul\":15934:15968   */\n      0x2e77616c6c65742062616c616e6365206166746572207472616e73666572206d\n        /* \"#utility.yul\":15914:15932   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15907:15969   */\n      mstore\n        /* \"#utility.yul\":16005:16039   */\n      0x757374206265206c657373207468616e206d61782077616c6c657420616d6f75\n        /* \"#utility.yul\":15985:16003   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15978:16040   */\n      mstore\n        /* \"#utility.yul\":16077:16081   */\n      0x6e74000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16056:16075   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":16049:16082   */\n      mstore\n        /* \"#utility.yul\":16099:16118   */\n      0xa4\n      add\n        /* \"contracts/gainzilla.sol\":18063:18187  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n      tag_336\n        /* \"#utility.yul\":15828:16124   */\n      jump\n        /* \"contracts/gainzilla.sol\":18063:18187  require(balanceOf(to).add(amount) <= _maxWalletAmount, \".wallet balance after transfer must be less than max wallet amount\") */\n    tag_676:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18244:18268  _isExcludedFromFee[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":18244:18262  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":18244:18268  _isExcludedFromFee[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/gainzilla.sol\":18244:18294  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n      tag_678\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18272:18294  _isExcludedFromFee[to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":18272:18290  _isExcludedFromFee */\n      0x04\n        /* \"contracts/gainzilla.sol\":18272:18294  _isExcludedFromFee[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/gainzilla.sol\":18244:18294  _isExcludedFromFee[from] || _isExcludedFromFee[to] */\n    tag_678:\n        /* \"contracts/gainzilla.sol\":18240:18336  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n      iszero\n      tag_679\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":18320:18325  false */\n      0x00\n        /* \"contracts/gainzilla.sol\":18240:18336  if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {... */\n    tag_679:\n        /* \"contracts/gainzilla.sol\":18354:18395  _tokenTransfer(from, to, amount, takeFee) */\n      tag_680\n        /* \"contracts/gainzilla.sol\":18369:18373  from */\n      dup5\n        /* \"contracts/gainzilla.sol\":18375:18377  to */\n      dup5\n        /* \"contracts/gainzilla.sol\":18379:18385  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":18387:18394  takeFee */\n      dup5\n        /* \"contracts/gainzilla.sol\":18354:18368  _tokenTransfer */\n      tag_681\n        /* \"contracts/gainzilla.sol\":18354:18395  _tokenTransfer(from, to, amount, takeFee) */\n      jump\t// in\n    tag_680:\n        /* \"contracts/gainzilla.sol\":15195:18402  function _transfer(address from, address to, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":1849:2035  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_352:\n        /* \"contracts/gainzilla.sol\":1935:1942  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":1970:1982  errorMessage */\n      dup2\n        /* \"contracts/gainzilla.sol\":1962:1968  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/gainzilla.sol\":1954:1983  require(b <= a, errorMessage) */\n      tag_683\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_683:\n      pop\n        /* \"contracts/gainzilla.sol\":1993:2002  uint256 c */\n      0x00\n        /* \"contracts/gainzilla.sol\":2005:2010  a - b */\n      tag_685\n        /* \"contracts/gainzilla.sol\":2009:2010  b */\n      dup5\n        /* \"contracts/gainzilla.sol\":2005:2006  a */\n      dup7\n        /* \"contracts/gainzilla.sol\":2005:2010  a - b */\n      tag_686\n      jump\t// in\n    tag_685:\n        /* \"contracts/gainzilla.sol\":1993:2010  uint256 c = a - b */\n      swap6\n        /* \"contracts/gainzilla.sol\":1849:2035  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":2286:2416  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_359:\n        /* \"contracts/gainzilla.sol\":2344:2351  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      tag_688\n        /* \"contracts/gainzilla.sol\":2374:2375  a */\n      dup4\n        /* \"contracts/gainzilla.sol\":2377:2378  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/gainzilla.sol\":2370:2373  div */\n      tag_689\n        /* \"contracts/gainzilla.sol\":2370:2409  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_688:\n        /* \"contracts/gainzilla.sol\":2363:2409  return div(a, b, \"SafeMath: division by zero\") */\n      swap4\n        /* \"contracts/gainzilla.sol\":2286:2416  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":1709:1843  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_439:\n        /* \"contracts/gainzilla.sol\":1767:1774  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_688\n        /* \"contracts/gainzilla.sol\":1797:1798  a */\n      dup4\n        /* \"contracts/gainzilla.sol\":1800:1801  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"contracts/gainzilla.sol\":1793:1796  sub */\n      tag_352\n        /* \"contracts/gainzilla.sol\":1793:1836  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":2041:2280  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_440:\n        /* \"contracts/gainzilla.sol\":2099:2106  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2122:2128  a == 0 */\n      dup3\n        /* \"contracts/gainzilla.sol\":2118:2163  if (a == 0) {... */\n      tag_693\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":2151:2152  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2144:2152  return 0 */\n      jump(tag_328)\n        /* \"contracts/gainzilla.sol\":2118:2163  if (a == 0) {... */\n    tag_693:\n        /* \"contracts/gainzilla.sol\":2172:2181  uint256 c */\n      0x00\n        /* \"contracts/gainzilla.sol\":2184:2189  a * b */\n      tag_694\n        /* \"contracts/gainzilla.sol\":2188:2189  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":2184:2185  a */\n      dup6\n        /* \"contracts/gainzilla.sol\":2184:2189  a * b */\n      tag_695\n      jump\t// in\n    tag_694:\n        /* \"contracts/gainzilla.sol\":2172:2189  uint256 c = a * b */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":2216:2217  b */\n      dup3\n        /* \"contracts/gainzilla.sol\":2207:2212  c / a */\n      tag_696\n        /* \"contracts/gainzilla.sol\":2211:2212  a */\n      dup6\n        /* \"contracts/gainzilla.sol\":2172:2189  uint256 c = a * b */\n      dup4\n        /* \"contracts/gainzilla.sol\":2207:2212  c / a */\n      tag_697\n      jump\t// in\n    tag_696:\n        /* \"contracts/gainzilla.sol\":2207:2217  c / a == b */\n      eq\n        /* \"contracts/gainzilla.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_688\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12693:12695   */\n      0x20\n        /* \"contracts/gainzilla.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12675:12696   */\n      mstore\n        /* \"#utility.yul\":12732:12734   */\n      0x21\n        /* \"#utility.yul\":12712:12730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12705:12735   */\n      mstore\n        /* \"#utility.yul\":12771:12805   */\n      0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f\n        /* \"#utility.yul\":12751:12769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12744:12806   */\n      mstore\n        /* \"#utility.yul\":12842:12845   */\n      0x7700000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12822:12840   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12815:12846   */\n      mstore\n        /* \"#utility.yul\":12863:12882   */\n      0x84\n      add\n        /* \"contracts/gainzilla.sol\":2199:2255  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_336\n        /* \"#utility.yul\":12665:12888   */\n      jump\n        /* \"contracts/gainzilla.sol\":18411:18812  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n    tag_505:\n        /* \"contracts/gainzilla.sol\":11455:11461  inSwap */\n      0x28\n        /* \"contracts/gainzilla.sol\":11455:11468  inSwap = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":18512:18528  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/gainzilla.sol\":18526:18527  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":18512:18528  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n      0x00\n      swap3\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":18488:18528  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":18556:18560  this */\n      address\n        /* \"contracts/gainzilla.sol\":18538:18542  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":18543:18544  0 */\n      0x00\n        /* \"contracts/gainzilla.sol\":18538:18545  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_705\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_705:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18538:18561  path[0] = address(this) */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":18538:18545  path[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      dup2\n      add\n        /* \"contracts/gainzilla.sol\":18538:18561  path[0] = address(this) */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/gainzilla.sol\":18581:18596  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":18581:18603  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      0xad5c464800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/gainzilla.sol\":18581:18596  uniswapV2Router */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"contracts/gainzilla.sol\":18581:18601  uniswapV2Router.WETH */\n      0xad5c4648\n      swap3\n        /* \"contracts/gainzilla.sol\":18581:18603  uniswapV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap4\n        /* \"contracts/gainzilla.sol\":18538:18545  path[0] */\n      swap2\n      swap3\n        /* \"contracts/gainzilla.sol\":18581:18603  uniswapV2Router.WETH() */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/gainzilla.sol\":18581:18596  uniswapV2Router */\n      dup7\n        /* \"contracts/gainzilla.sol\":18581:18603  uniswapV2Router.WETH() */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_706\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_706:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_708\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_708:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_709\n      swap2\n      swap1\n      tag_465\n      jump\t// in\n    tag_709:\n        /* \"contracts/gainzilla.sol\":18571:18575  path */\n      dup2\n        /* \"contracts/gainzilla.sol\":18576:18577  1 */\n      0x01\n        /* \"contracts/gainzilla.sol\":18571:18578  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_710\n      jumpi\n      mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n    tag_710:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18571:18603  path[1] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"contracts/gainzilla.sol\":18571:18578  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/gainzilla.sol\":18571:18603  path[1] = uniswapV2Router.WETH() */\n      mstore\n        /* \"contracts/gainzilla.sol\":18645:18660  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":18613:18675  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_711\n      swap2\n        /* \"contracts/gainzilla.sol\":18630:18634  this */\n      address\n      swap2\n        /* \"contracts/gainzilla.sol\":18645:18660  uniswapV2Router */\n      and\n        /* \"contracts/gainzilla.sol\":18663:18674  tokenAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":18613:18621  _approve */\n      tag_332\n        /* \"contracts/gainzilla.sol\":18613:18675  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_711:\n        /* \"contracts/gainzilla.sol\":18685:18700  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":18685:18805  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      mload(0x40)\n      0x791ac94700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":18685:18700  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":18685:18751  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      0x791ac947\n      swap1\n        /* \"contracts/gainzilla.sol\":18685:18805  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      tag_712\n      swap1\n        /* \"contracts/gainzilla.sol\":18752:18763  tokenAmount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":18685:18700  uniswapV2Router */\n      0x00\n      swap1\n        /* \"contracts/gainzilla.sol\":18768:18772  path */\n      dup7\n      swap1\n        /* \"contracts/gainzilla.sol\":18782:18786  this */\n      address\n      swap1\n        /* \"contracts/gainzilla.sol\":18789:18804  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/gainzilla.sol\":18685:18805  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount, 0, path, address(this), block.timestamp) */\n      0x04\n      add\n      tag_713\n      jump\t// in\n    tag_712:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_714\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_714:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_716\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_716:\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":11489:11495  inSwap */\n      0x28\n        /* \"contracts/gainzilla.sol\":11489:11503  inSwap = false */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":18411:18812  function swapTokensForEth(uint256 tokenAmount) private lockTheSwap {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":1528:1703  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_540:\n        /* \"contracts/gainzilla.sol\":1586:1593  uint256 */\n      0x00\n      dup1\n        /* \"contracts/gainzilla.sol\":1617:1622  a + b */\n      tag_718\n        /* \"contracts/gainzilla.sol\":1621:1622  b */\n      dup4\n        /* \"contracts/gainzilla.sol\":1617:1618  a */\n      dup6\n        /* \"contracts/gainzilla.sol\":1617:1622  a + b */\n      tag_645\n      jump\t// in\n    tag_718:\n        /* \"contracts/gainzilla.sol\":1605:1622  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":1645:1646  a */\n      dup4\n        /* \"contracts/gainzilla.sol\":1640:1641  c */\n      dup2\n        /* \"contracts/gainzilla.sol\":1640:1646  c >= a */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_688\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11148:11150   */\n      0x20\n        /* \"contracts/gainzilla.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11130:11151   */\n      mstore\n        /* \"#utility.yul\":11187:11189   */\n      0x1b\n        /* \"#utility.yul\":11167:11185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11160:11190   */\n      mstore\n        /* \"#utility.yul\":11226:11255   */\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n        /* \"#utility.yul\":11206:11224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11199:11256   */\n      mstore\n        /* \"#utility.yul\":11273:11291   */\n      0x64\n      add\n        /* \"contracts/gainzilla.sol\":1632:1678  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_336\n        /* \"#utility.yul\":11120:11297   */\n      jump\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_562:\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      0x00\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":3762:3779  _owner = newOwner */\n      dup4\n      dup2\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/gainzilla.sol\":3746:3752  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/gainzilla.sol\":3727:3743  address oldOwner */\n      swap1\n        /* \"contracts/gainzilla.sol\":3794:3834  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/gainzilla.sol\":3654:3841  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":18818:19626  function _checkPriceConditions() private {... */\n    tag_651:\n        /* \"contracts/gainzilla.sol\":18869:18889  uint256 currentPrice */\n      0x00\n        /* \"contracts/gainzilla.sol\":18892:18903  pairPrice() */\n      tag_724\n        /* \"contracts/gainzilla.sol\":18892:18901  pairPrice */\n      tag_220\n        /* \"contracts/gainzilla.sol\":18892:18903  pairPrice() */\n      jump\t// in\n    tag_724:\n        /* \"contracts/gainzilla.sol\":18869:18903  uint256 currentPrice = pairPrice() */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":18917:18934  currentPrice == 0 */\n      dup1\n        /* \"contracts/gainzilla.sol\":18913:18943  if (currentPrice == 0) return; */\n      tag_725\n      jumpi\n        /* \"contracts/gainzilla.sol\":18936:18943  return; */\n      pop\n        /* \"contracts/gainzilla.sol\":18818:19626  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":18913:18943  if (currentPrice == 0) return; */\n    tag_725:\n        /* \"contracts/gainzilla.sol\":18972:18993  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":18957:18993  currentPrice > diamondFloor.athPrice */\n      dup2\n      gt\n        /* \"contracts/gainzilla.sol\":18953:19122  if (currentPrice > diamondFloor.athPrice) {... */\n      iszero\n      tag_726\n      jumpi\n        /* \"contracts/gainzilla.sol\":19009:19030  diamondFloor.athPrice */\n      0x1d\n        /* \"contracts/gainzilla.sol\":19009:19045  diamondFloor.athPrice = currentPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":19059:19083  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/gainzilla.sol\":19059:19091  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":18818:19626  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":18953:19122  if (currentPrice > diamondFloor.athPrice) {... */\n    tag_726:\n        /* \"contracts/gainzilla.sol\":19206:19218  diamondFloor */\n      0x1c\n        /* \"contracts/gainzilla.sol\":19206:19236  diamondFloor.triggerPercentage */\n      sload\n        /* \"contracts/gainzilla.sol\":19157:19178  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":19132:19154  uint256 thresholdPrice */\n      0x00\n      swap2\n        /* \"contracts/gainzilla.sol\":19157:19260  diamondFloor.athPrice... */\n      tag_727\n      swap2\n        /* \"contracts/gainzilla.sol\":19255:19259  1000 */\n      0x03e8\n      swap2\n        /* \"contracts/gainzilla.sol\":19157:19237  diamondFloor.athPrice... */\n      tag_437\n      swap2\n        /* \"contracts/gainzilla.sol\":19206:19236  diamondFloor.triggerPercentage */\n      0x0100\n      swap1\n      swap2\n      div\n      0xffff\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":19157:19201  diamondFloor.athPrice... */\n      tag_729\n      swap1\n        /* \"contracts/gainzilla.sol\":19255:19259  1000 */\n      dup5\n        /* \"contracts/gainzilla.sol\":19157:19195  diamondFloor.athPrice... */\n      tag_440\n        /* \"contracts/gainzilla.sol\":19157:19201  diamondFloor.athPrice... */\n      jump\t// in\n    tag_729:\n        /* \"contracts/gainzilla.sol\":19157:19205  diamondFloor.athPrice... */\n      swap1\n      tag_439\n        /* \"contracts/gainzilla.sol\":19157:19237  diamondFloor.athPrice... */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":19157:19260  diamondFloor.athPrice... */\n    tag_727:\n        /* \"contracts/gainzilla.sol\":19132:19260  uint256 thresholdPrice = diamondFloor.athPrice... */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":19290:19304  thresholdPrice */\n      dup1\n        /* \"contracts/gainzilla.sol\":19275:19287  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":19275:19304  currentPrice < thresholdPrice */\n      lt\n        /* \"contracts/gainzilla.sol\":19271:19423  if (currentPrice < thresholdPrice) {... */\n      iszero\n      tag_730\n      jumpi\n        /* \"contracts/gainzilla.sol\":19320:19344  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/gainzilla.sol\":19320:19351  diamondFloor.sellStopped = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/gainzilla.sol\":19347:19351  true */\n      0x01\n        /* \"contracts/gainzilla.sol\":19320:19351  diamondFloor.sellStopped = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":19391:19412  diamondFloor.athPrice */\n      sload(0x1d)\n        /* \"contracts/gainzilla.sol\":19365:19388  diamondFloor.blockedAth */\n      0x1f\n        /* \"contracts/gainzilla.sol\":19365:19412  diamondFloor.blockedAth = diamondFloor.athPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":19271:19423  if (currentPrice < thresholdPrice) {... */\n    tag_730:\n        /* \"contracts/gainzilla.sol\":19437:19461  diamondFloor.sellStopped */\n      and(0xff, sload(0x1e))\n        /* \"contracts/gainzilla.sol\":19437:19511  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n      dup1\n      iszero\n      tag_731\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":19481:19504  diamondFloor.blockedAth */\n      sload(0x1f)\n        /* \"contracts/gainzilla.sol\":19481:19511  diamondFloor.blockedAth.mul(2) */\n      tag_732\n      swap1\n        /* \"contracts/gainzilla.sol\":19509:19510  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":19481:19508  diamondFloor.blockedAth.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":19481:19511  diamondFloor.blockedAth.mul(2) */\n      jump\t// in\n    tag_732:\n        /* \"contracts/gainzilla.sol\":19465:19477  currentPrice */\n      dup3\n        /* \"contracts/gainzilla.sol\":19465:19511  currentPrice >= diamondFloor.blockedAth.mul(2) */\n      lt\n      iszero\n        /* \"contracts/gainzilla.sol\":19437:19511  diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2) */\n    tag_731:\n        /* \"contracts/gainzilla.sol\":19433:19620  if (diamondFloor.sellStopped && currentPrice >= diamondFloor.blockedAth.mul(2)) {... */\n      iszero\n      tag_418\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":19527:19551  diamondFloor.sellStopped */\n      0x1e\n        /* \"contracts/gainzilla.sol\":19527:19559  diamondFloor.sellStopped = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":19573:19594  diamondFloor.athPrice */\n      0x1d\n        /* \"contracts/gainzilla.sol\":19573:19609  diamondFloor.athPrice = currentPrice */\n      sstore\n        /* \"contracts/gainzilla.sol\":18818:19626  function _checkPriceConditions() private {... */\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":20519:21026  function swapAndLiquify(uint256 lpAmount, uint256 contractTokenBalance) private lockTheSwap {... */\n    tag_667:\n        /* \"contracts/gainzilla.sol\":11455:11461  inSwap */\n      0x28\n        /* \"contracts/gainzilla.sol\":11455:11468  inSwap = true */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff\n      and\n      0x0100\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/gainzilla.sol\":20636:20651  lpAmount.div(2) */\n      tag_736\n        /* \"contracts/gainzilla.sol\":20636:20644  lpAmount */\n      dup4\n        /* \"contracts/gainzilla.sol\":20649:20650  2 */\n      0x02\n        /* \"contracts/gainzilla.sol\":20636:20648  lpAmount.div */\n      tag_359\n        /* \"contracts/gainzilla.sol\":20636:20651  lpAmount.div(2) */\n      jump\t// in\n    tag_736:\n        /* \"contracts/gainzilla.sol\":20621:20651  uint256 half = lpAmount.div(2) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":20661:20678  uint256 otherHalf */\n      0x00\n        /* \"contracts/gainzilla.sol\":20681:20699  lpAmount.sub(half) */\n      tag_737\n        /* \"contracts/gainzilla.sol\":20681:20689  lpAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":20621:20651  uint256 half = lpAmount.div(2) */\n      dup4\n        /* \"contracts/gainzilla.sol\":20681:20693  lpAmount.sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":20681:20699  lpAmount.sub(half) */\n      jump\t// in\n    tag_737:\n        /* \"contracts/gainzilla.sol\":20661:20699  uint256 otherHalf = lpAmount.sub(half) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":20734:20755  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":20765:20813  swapTokensForEth(contractTokenBalance.add(half)) */\n      tag_738\n        /* \"contracts/gainzilla.sol\":20782:20812  contractTokenBalance.add(half) */\n      tag_739\n        /* \"contracts/gainzilla.sol\":20782:20802  contractTokenBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":20807:20811  half */\n      dup6\n        /* \"contracts/gainzilla.sol\":20782:20806  contractTokenBalance.add */\n      tag_540\n        /* \"contracts/gainzilla.sol\":20782:20812  contractTokenBalance.add(half) */\n      jump\t// in\n    tag_739:\n        /* \"contracts/gainzilla.sol\":20765:20781  swapTokensForEth */\n      tag_505\n        /* \"contracts/gainzilla.sol\":20765:20813  swapTokensForEth(contractTokenBalance.add(half)) */\n      jump\t// in\n    tag_738:\n        /* \"contracts/gainzilla.sol\":20823:20841  uint256 newBalance */\n      0x00\n        /* \"contracts/gainzilla.sol\":20844:20885  address(this).balance.sub(initialBalance) */\n      tag_740\n        /* \"contracts/gainzilla.sol\":20844:20865  address(this).balance */\n      selfbalance\n        /* \"contracts/gainzilla.sol\":20870:20884  initialBalance */\n      dup4\n        /* \"contracts/gainzilla.sol\":20844:20869  address(this).balance.sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":20844:20885  address(this).balance.sub(initialBalance) */\n      jump\t// in\n    tag_740:\n        /* \"contracts/gainzilla.sol\":20823:20885  uint256 newBalance = address(this).balance.sub(initialBalance) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":20899:20912  otherHalf > 0 */\n      dup3\n      iszero\n        /* \"contracts/gainzilla.sol\":20895:21020  if (otherHalf > 0) {... */\n      tag_716\n      jumpi\n        /* \"contracts/gainzilla.sol\":20928:21009  addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half))) */\n      tag_716\n        /* \"contracts/gainzilla.sol\":20941:20950  otherHalf */\n      dup4\n        /* \"contracts/gainzilla.sol\":20952:21008  newBalance.mul(half).div(contractTokenBalance.add(half)) */\n      tag_743\n        /* \"contracts/gainzilla.sol\":20977:21007  contractTokenBalance.add(half) */\n      tag_744\n        /* \"contracts/gainzilla.sol\":20977:20997  contractTokenBalance */\n      dup9\n        /* \"contracts/gainzilla.sol\":21002:21006  half */\n      dup9\n        /* \"contracts/gainzilla.sol\":20977:21001  contractTokenBalance.add */\n      tag_540\n        /* \"contracts/gainzilla.sol\":20977:21007  contractTokenBalance.add(half) */\n      jump\t// in\n    tag_744:\n        /* \"contracts/gainzilla.sol\":20952:20972  newBalance.mul(half) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":20952:20962  newBalance */\n      dup6\n        /* \"contracts/gainzilla.sol\":20967:20971  half */\n      dup10\n        /* \"contracts/gainzilla.sol\":20952:20966  newBalance.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":20952:20972  newBalance.mul(half) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":20952:21008  newBalance.mul(half).div(contractTokenBalance.add(half)) */\n    tag_743:\n        /* \"contracts/gainzilla.sol\":20928:20940  addLiquidity */\n      tag_746\n        /* \"contracts/gainzilla.sol\":20928:21009  addLiquidity(otherHalf, newBalance.mul(half).div(contractTokenBalance.add(half))) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21032:21774  function sendETHToFee(uint256 amount) private {... */\n    tag_670:\n        /* \"contracts/gainzilla.sol\":21088:21105  uint256 totalFees */\n      0x00\n        /* \"contracts/gainzilla.sol\":21108:21166  _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n      tag_748\n        /* \"contracts/gainzilla.sol\":21153:21165  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":21108:21148  _sellMarketingFee.add(_sellEcosystemFee) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":21130:21147  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":21108:21125  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":21108:21129  _sellMarketingFee.add */\n      tag_540\n      swap1\n        /* \"contracts/gainzilla.sol\":21108:21148  _sellMarketingFee.add(_sellEcosystemFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21108:21166  _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n    tag_748:\n        /* \"contracts/gainzilla.sol\":21088:21166  uint256 totalFees = _sellMarketingFee.add(_sellEcosystemFee).add(_sellTeamFee) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21180:21194  totalFees != 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":21176:21768  if (totalFees != 0) {... */\n      tag_418\n      jumpi\n        /* \"contracts/gainzilla.sol\":21210:21234  uint256 marketingPortion */\n      0x00\n        /* \"contracts/gainzilla.sol\":21237:21281  amount.mul(_sellMarketingFee).div(totalFees) */\n      tag_751\n        /* \"contracts/gainzilla.sol\":21271:21280  totalFees */\n      dup3\n        /* \"contracts/gainzilla.sol\":21237:21266  amount.mul(_sellMarketingFee) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":21248:21265  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":21237:21243  amount */\n      dup7\n        /* \"contracts/gainzilla.sol\":21237:21247  amount.mul */\n      tag_440\n      swap1\n        /* \"contracts/gainzilla.sol\":21237:21266  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21237:21281  amount.mul(_sellMarketingFee).div(totalFees) */\n    tag_751:\n        /* \"contracts/gainzilla.sol\":21210:21281  uint256 marketingPortion = amount.mul(_sellMarketingFee).div(totalFees) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21295:21314  uint256 teamPortion */\n      0x00\n        /* \"contracts/gainzilla.sol\":21317:21356  amount.mul(_sellTeamFee).div(totalFees) */\n      tag_753\n        /* \"contracts/gainzilla.sol\":21346:21355  totalFees */\n      dup4\n        /* \"contracts/gainzilla.sol\":21317:21341  amount.mul(_sellTeamFee) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":21328:21340  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":21317:21323  amount */\n      dup8\n        /* \"contracts/gainzilla.sol\":21317:21327  amount.mul */\n      tag_440\n      swap1\n        /* \"contracts/gainzilla.sol\":21317:21341  amount.mul(_sellTeamFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21317:21356  amount.mul(_sellTeamFee).div(totalFees) */\n    tag_753:\n        /* \"contracts/gainzilla.sol\":21295:21356  uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21370:21388  uint256 ecoPortion */\n      0x00\n        /* \"contracts/gainzilla.sol\":21391:21436  amount.sub(marketingPortion).sub(teamPortion) */\n      tag_755\n        /* \"contracts/gainzilla.sol\":21295:21356  uint256 teamPortion = amount.mul(_sellTeamFee).div(totalFees) */\n      dup3\n        /* \"contracts/gainzilla.sol\":21391:21419  amount.sub(marketingPortion) */\n      tag_729\n        /* \"contracts/gainzilla.sol\":21391:21397  amount */\n      dup8\n        /* \"contracts/gainzilla.sol\":21402:21418  marketingPortion */\n      dup7\n        /* \"contracts/gainzilla.sol\":21391:21401  amount.sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":21391:21419  amount.sub(marketingPortion) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":21391:21436  amount.sub(marketingPortion).sub(teamPortion) */\n    tag_755:\n        /* \"contracts/gainzilla.sol\":21370:21436  uint256 ecoPortion = amount.sub(marketingPortion).sub(teamPortion) */\n      swap1\n      pop\n        /* \"contracts/gainzilla.sol\":21454:21474  marketingPortion > 0 */\n      dup3\n      iszero\n        /* \"contracts/gainzilla.sol\":21450:21553  if (marketingPortion > 0) {... */\n      tag_757\n      jumpi\n        /* \"contracts/gainzilla.sol\":21494:21511  _marketingAddress */\n      sload(0x21)\n        /* \"contracts/gainzilla.sol\":21494:21538  _marketingAddress.transfer(marketingPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":21494:21511  _marketingAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":21494:21538  _marketingAddress.transfer(marketingPortion) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/gainzilla.sol\":21521:21537  marketingPortion */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":21494:21511  _marketingAddress */\n      0x00\n        /* \"contracts/gainzilla.sol\":21494:21538  _marketingAddress.transfer(marketingPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21494:21511  _marketingAddress */\n      dup2\n        /* \"contracts/gainzilla.sol\":21494:21538  _marketingAddress.transfer(marketingPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21521:21537  marketingPortion */\n      dup6\n        /* \"contracts/gainzilla.sol\":21494:21511  _marketingAddress */\n      dup9\n        /* \"contracts/gainzilla.sol\":21494:21538  _marketingAddress.transfer(marketingPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_759\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_759:\n      pop\n        /* \"contracts/gainzilla.sol\":21450:21553  if (marketingPortion > 0) {... */\n    tag_757:\n        /* \"contracts/gainzilla.sol\":21570:21585  teamPortion > 0 */\n      dup2\n      iszero\n        /* \"contracts/gainzilla.sol\":21566:21654  if (teamPortion > 0) {... */\n      tag_760\n      jumpi\n        /* \"contracts/gainzilla.sol\":21605:21617  _teamAddress */\n      sload(0x22)\n        /* \"contracts/gainzilla.sol\":21605:21639  _teamAddress.transfer(teamPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":21605:21617  _teamAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":21605:21639  _teamAddress.transfer(teamPortion) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/gainzilla.sol\":21627:21638  teamPortion */\n      dup5\n      swap1\n        /* \"contracts/gainzilla.sol\":21605:21617  _teamAddress */\n      0x00\n        /* \"contracts/gainzilla.sol\":21605:21639  _teamAddress.transfer(teamPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21605:21617  _teamAddress */\n      dup2\n        /* \"contracts/gainzilla.sol\":21605:21639  _teamAddress.transfer(teamPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21627:21638  teamPortion */\n      dup6\n        /* \"contracts/gainzilla.sol\":21605:21617  _teamAddress */\n      dup9\n        /* \"contracts/gainzilla.sol\":21605:21639  _teamAddress.transfer(teamPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_762\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_762:\n      pop\n        /* \"contracts/gainzilla.sol\":21566:21654  if (teamPortion > 0) {... */\n    tag_760:\n        /* \"contracts/gainzilla.sol\":21671:21685  ecoPortion > 0 */\n      dup1\n      iszero\n        /* \"contracts/gainzilla.sol\":21667:21758  if (ecoPortion > 0) {... */\n      tag_763\n      jumpi\n        /* \"contracts/gainzilla.sol\":21705:21722  _ecosystemAddress */\n      sload(0x23)\n        /* \"contracts/gainzilla.sol\":21705:21743  _ecosystemAddress.transfer(ecoPortion) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":21705:21722  _ecosystemAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":21705:21743  _ecosystemAddress.transfer(ecoPortion) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/gainzilla.sol\":21732:21742  ecoPortion */\n      dup4\n      swap1\n        /* \"contracts/gainzilla.sol\":21705:21722  _ecosystemAddress */\n      0x00\n        /* \"contracts/gainzilla.sol\":21705:21743  _ecosystemAddress.transfer(ecoPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21705:21722  _ecosystemAddress */\n      dup2\n        /* \"contracts/gainzilla.sol\":21705:21743  _ecosystemAddress.transfer(ecoPortion) */\n      dup2\n        /* \"contracts/gainzilla.sol\":21732:21742  ecoPortion */\n      dup6\n        /* \"contracts/gainzilla.sol\":21705:21722  _ecosystemAddress */\n      dup9\n        /* \"contracts/gainzilla.sol\":21705:21743  _ecosystemAddress.transfer(ecoPortion) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_765\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_765:\n      pop\n        /* \"contracts/gainzilla.sol\":21667:21758  if (ecoPortion > 0) {... */\n    tag_763:\n        /* \"contracts/gainzilla.sol\":21176:21768  if (totalFees != 0) {... */\n      pop\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":21032:21774  function sendETHToFee(uint256 amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/gainzilla.sol\":22905:23155  function _tokenTransfer(address sender, address recipient, uint256 amount, bool takeFee) private {... */\n    tag_681:\n        /* \"contracts/gainzilla.sol\":23017:23024  takeFee */\n      dup1\n        /* \"contracts/gainzilla.sol\":23012:23070  if (!takeFee) { ... */\n      tag_768\n      jumpi\n        /* \"contracts/gainzilla.sol\":23045:23059  removeAllFee() */\n      tag_768\n        /* \"contracts/gainzilla.sol\":13751:13767  _buyMarketingFee */\n      0x0d\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13724:13748  _previousBuyMarketingFee */\n      0x0e\n        /* \"contracts/gainzilla.sol\":13724:13767  _previousBuyMarketingFee = _buyMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":13804:13820  _buyLiquidityFee */\n      0x09\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13777:13801  _previousBuyLiquidityFee */\n      0x0a\n        /* \"contracts/gainzilla.sol\":13777:13820  _previousBuyLiquidityFee = _buyLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":13852:13863  _buyTeamFee */\n      0x0f\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13830:13849  _previousBuyTeamFee */\n      0x10\n        /* \"contracts/gainzilla.sol\":13830:13863  _previousBuyTeamFee = _buyTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":13900:13916  _buyEcosystemFee */\n      0x0b\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":13873:13897  _previousBuyEcosystemFee */\n      0x0c\n        /* \"contracts/gainzilla.sol\":13873:13916  _previousBuyEcosystemFee = _buyEcosystemFee */\n      sstore\n      0x00\n        /* \"contracts/gainzilla.sol\":13935:13955  _buyMarketingFee = 0 */\n      swap4\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":13965:13985  _buyLiquidityFee = 0 */\n      swap2\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":13995:14010  _buyTeamFee = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14020:14040  _buyEcosystemFee = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14079:14096  _sellMarketingFee */\n      0x15\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14051:14076  _previousSellMarketingFee */\n      0x16\n        /* \"contracts/gainzilla.sol\":14051:14096  _previousSellMarketingFee = _sellMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14134:14151  _sellLiquidityFee */\n      0x11\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14106:14131  _previousSellLiquidityFee */\n      0x12\n        /* \"contracts/gainzilla.sol\":14106:14151  _previousSellLiquidityFee = _sellLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14184:14196  _sellTeamFee */\n      0x17\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14161:14181  _previousSellTeamFee */\n      0x18\n        /* \"contracts/gainzilla.sol\":14161:14196  _previousSellTeamFee = _sellTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14234:14251  _sellEcosystemFee */\n      0x13\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":14206:14231  _previousSellEcosystemFee */\n      0x14\n        /* \"contracts/gainzilla.sol\":14206:14251  _previousSellEcosystemFee = _sellEcosystemFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14270:14291  _sellMarketingFee = 0 */\n      swap3\n      dup5\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14301:14322  _sellLiquidityFee = 0 */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14332:14348  _sellTeamFee = 0 */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/gainzilla.sol\":14358:14379  _sellEcosystemFee = 0 */\n      sstore\n        /* \"contracts/gainzilla.sol\":13682:14386  function removeAllFee() private {... */\n      jump\n        /* \"contracts/gainzilla.sol\":23045:23059  removeAllFee() */\n    tag_768:\n        /* \"contracts/gainzilla.sol\":23079:23123  _transferStandard(sender, recipient, amount) */\n      tag_770\n        /* \"contracts/gainzilla.sol\":23097:23103  sender */\n      dup5\n        /* \"contracts/gainzilla.sol\":23105:23114  recipient */\n      dup5\n        /* \"contracts/gainzilla.sol\":23116:23122  amount */\n      dup5\n        /* \"contracts/gainzilla.sol\":23079:23096  _transferStandard */\n      tag_771\n        /* \"contracts/gainzilla.sol\":23079:23123  _transferStandard(sender, recipient, amount) */\n      jump\t// in\n    tag_770:\n        /* \"contracts/gainzilla.sol\":23133:23148  restoreAllFee() */\n      tag_680\n        /* \"contracts/gainzilla.sol\":14458:14482  _previousBuyMarketingFee */\n      sload(0x0e)\n        /* \"contracts/gainzilla.sol\":14439:14455  _buyMarketingFee */\n      0x0d\n        /* \"contracts/gainzilla.sol\":14439:14482  _buyMarketingFee = _previousBuyMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14511:14535  _previousBuyLiquidityFee */\n      sload(0x0a)\n        /* \"contracts/gainzilla.sol\":14492:14508  _buyLiquidityFee */\n      0x09\n        /* \"contracts/gainzilla.sol\":14492:14535  _buyLiquidityFee = _previousBuyLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14559:14578  _previousBuyTeamFee */\n      sload(0x10)\n        /* \"contracts/gainzilla.sol\":14545:14556  _buyTeamFee */\n      0x0f\n        /* \"contracts/gainzilla.sol\":14545:14578  _buyTeamFee = _previousBuyTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14607:14631  _previousBuyEcosystemFee */\n      sload(0x0c)\n        /* \"contracts/gainzilla.sol\":14588:14604  _buyEcosystemFee */\n      0x0b\n        /* \"contracts/gainzilla.sol\":14588:14631  _buyEcosystemFee = _previousBuyEcosystemFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14662:14687  _previousSellMarketingFee */\n      sload(0x16)\n        /* \"contracts/gainzilla.sol\":14642:14659  _sellMarketingFee */\n      0x15\n        /* \"contracts/gainzilla.sol\":14642:14687  _sellMarketingFee = _previousSellMarketingFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14717:14742  _previousSellLiquidityFee */\n      sload(0x12)\n        /* \"contracts/gainzilla.sol\":14697:14714  _sellLiquidityFee */\n      0x11\n        /* \"contracts/gainzilla.sol\":14697:14742  _sellLiquidityFee = _previousSellLiquidityFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14767:14787  _previousSellTeamFee */\n      sload(0x18)\n        /* \"contracts/gainzilla.sol\":14752:14764  _sellTeamFee */\n      0x17\n        /* \"contracts/gainzilla.sol\":14752:14787  _sellTeamFee = _previousSellTeamFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14817:14842  _previousSellEcosystemFee */\n      sload(0x14)\n        /* \"contracts/gainzilla.sol\":14797:14814  _sellEcosystemFee */\n      0x13\n        /* \"contracts/gainzilla.sol\":14797:14842  _sellEcosystemFee = _previousSellEcosystemFee */\n      sstore\n        /* \"contracts/gainzilla.sol\":14396:14849  function restoreAllFee() private {... */\n      jump\n        /* \"contracts/gainzilla.sol\":2422:2607  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_689:\n        /* \"contracts/gainzilla.sol\":2508:2515  uint256 */\n      0x00\n        /* \"contracts/gainzilla.sol\":2542:2554  errorMessage */\n      dup2\n        /* \"contracts/gainzilla.sol\":2535:2540  b > 0 */\n      dup4\n        /* \"contracts/gainzilla.sol\":2527:2555  require(b > 0, errorMessage) */\n      tag_775\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_775:\n      pop\n        /* \"contracts/gainzilla.sol\":2565:2574  uint256 c */\n      0x00\n        /* \"contracts/gainzilla.sol\":2577:2582  a / b */\n      tag_685\n        /* \"contracts/gainzilla.sol\":2581:2582  b */\n      dup5\n        /* \"contracts/gainzilla.sol\":2577:2578  a */\n      dup7\n        /* \"contracts/gainzilla.sol\":2577:2582  a / b */\n      tag_697\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":20058:20511  function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {... */\n    tag_746:\n        /* \"contracts/gainzilla.sol\":20170:20185  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":20138:20200  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      tag_779\n      swap1\n        /* \"contracts/gainzilla.sol\":20155:20159  this */\n      address\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":20170:20185  uniswapV2Router */\n      and\n        /* \"contracts/gainzilla.sol\":20188:20199  tokenAmount */\n      dup5\n        /* \"contracts/gainzilla.sol\":20138:20146  _approve */\n      tag_332\n        /* \"contracts/gainzilla.sol\":20138:20200  _approve(address(this), address(uniswapV2Router), tokenAmount) */\n      jump\t// in\n    tag_779:\n        /* \"contracts/gainzilla.sol\":20240:20255  uniswapV2Router */\n      sload(0x25)\n        /* \"contracts/gainzilla.sol\":20449:20461  _lpRecipient */\n      0x24\n      dup1\n      sload\n        /* \"contracts/gainzilla.sol\":20240:20504  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      mload(0x40)\n      0xf305d71900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":20313:20317  this */\n      address\n        /* \"contracts/gainzilla.sol\":20240:20504  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5752:5786   */\n      mstore\n        /* \"#utility.yul\":5802:5820   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":5795:5829   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/gainzilla.sol\":20240:20255  uniswapV2Router */\n      0x00\n        /* \"#utility.yul\":5845:5863   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5838:5872   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5888:5906   */\n      0x64\n      dup4\n      add\n        /* \"#utility.yul\":5881:5915   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":20449:20461  _lpRecipient */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5931:5950   */\n      0x84\n      dup4\n      add\n        /* \"#utility.yul\":5924:5968   */\n      mstore\n        /* \"contracts/gainzilla.sol\":20477:20492  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":5984:6003   */\n      0xa4\n      dup4\n      add\n        /* \"#utility.yul\":5977:6012   */\n      mstore\n        /* \"contracts/gainzilla.sol\":20240:20255  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/gainzilla.sol\":20240:20271  uniswapV2Router.addLiquidityETH */\n      0xf305d719\n      swap1\n        /* \"contracts/gainzilla.sol\":20279:20288  ethAmount */\n      dup4\n      swap1\n        /* \"#utility.yul\":5663:5682   */\n      0xc4\n      add\n        /* \"contracts/gainzilla.sol\":20240:20504  uniswapV2Router.addLiquidityETH{value: ethAmount}(... */\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_782\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_782:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_784\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_784:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_763\n      swap2\n      swap1\n      tag_786\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23161:25008  function _transferStandard(address sender, address recipient, uint256 amount) private {... */\n    tag_771:\n        /* \"contracts/gainzilla.sol\":23257:23281  FeeBreakdown memory fees */\n      tag_789\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_789:\n        /* \"contracts/gainzilla.sol\":23305:23318  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23295:23318  sender == uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23305:23318  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23295:23318  sender == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":23295:23359  sender == uniswapV2Pair && recipient != address(uniswapV2Router) */\n      dup1\n      iszero\n      tag_791\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":23343:23358  uniswapV2Router */\n      sload(0x25)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23322:23359  recipient != address(uniswapV2Router) */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23343:23358  uniswapV2Router */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23322:23359  recipient != address(uniswapV2Router) */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":23295:23359  sender == uniswapV2Pair && recipient != address(uniswapV2Router) */\n    tag_791:\n        /* \"contracts/gainzilla.sol\":23291:23648  if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys... */\n      iszero\n      tag_792\n      jumpi\n        /* \"contracts/gainzilla.sol\":23399:23437  amount.mul(_buyMarketingFee).div(1000) */\n      tag_793\n        /* \"contracts/gainzilla.sol\":23432:23436  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":23399:23427  amount.mul(_buyMarketingFee) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":23410:23426  _buyMarketingFee */\n      sload(0x0d)\n        /* \"contracts/gainzilla.sol\":23399:23405  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":23399:23409  amount.mul */\n      tag_440\n      swap1\n        /* \"contracts/gainzilla.sol\":23399:23427  amount.mul(_buyMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23399:23437  amount.mul(_buyMarketingFee).div(1000) */\n    tag_793:\n        /* \"contracts/gainzilla.sol\":23381:23396  fees.tMarketing */\n      0x20\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23381:23437  fees.tMarketing = amount.mul(_buyMarketingFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23480:23496  _buyLiquidityFee */\n      sload(0x09)\n        /* \"contracts/gainzilla.sol\":23469:23507  amount.mul(_buyLiquidityFee).div(1000) */\n      tag_795\n      swap1\n        /* \"contracts/gainzilla.sol\":23502:23506  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23469:23497  amount.mul(_buyLiquidityFee) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":23469:23475  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23469:23479  amount.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":23469:23497  amount.mul(_buyLiquidityFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23469:23507  amount.mul(_buyLiquidityFee).div(1000) */\n    tag_795:\n        /* \"contracts/gainzilla.sol\":23451:23507  fees.tLiquidity = amount.mul(_buyLiquidityFee).div(1000) */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":23545:23556  _buyTeamFee */\n      sload(0x0f)\n        /* \"contracts/gainzilla.sol\":23534:23567  amount.mul(_buyTeamFee).div(1000) */\n      tag_797\n      swap1\n        /* \"contracts/gainzilla.sol\":23562:23566  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23534:23557  amount.mul(_buyTeamFee) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":23534:23540  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23534:23544  amount.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":23534:23557  amount.mul(_buyTeamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23534:23567  amount.mul(_buyTeamFee).div(1000) */\n    tag_797:\n        /* \"contracts/gainzilla.sol\":23521:23531  fees.tTeam */\n      0x40\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23521:23567  fees.tTeam = amount.mul(_buyTeamFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23610:23626  _buyEcosystemFee */\n      sload(0x0b)\n        /* \"contracts/gainzilla.sol\":23599:23637  amount.mul(_buyEcosystemFee).div(1000) */\n      tag_799\n      swap1\n        /* \"contracts/gainzilla.sol\":23632:23636  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23599:23627  amount.mul(_buyEcosystemFee) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":23599:23605  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23599:23609  amount.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":23599:23627  amount.mul(_buyEcosystemFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23599:23637  amount.mul(_buyEcosystemFee).div(1000) */\n    tag_799:\n        /* \"contracts/gainzilla.sol\":23581:23596  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23581:23637  fees.tEcosystem = amount.mul(_buyEcosystemFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23291:23648  if (sender == uniswapV2Pair && recipient != address(uniswapV2Router)) {//buys... */\n    tag_792:\n        /* \"contracts/gainzilla.sol\":23671:23684  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23661:23684  sender != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23671:23684  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23661:23684  sender != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":23661:23714  sender != uniswapV2Pair && recipient == uniswapV2Pair */\n      tag_801\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":23701:23714  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":23688:23714  recipient == uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":23701:23714  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":23688:23714  recipient == uniswapV2Pair */\n      eq\n        /* \"contracts/gainzilla.sol\":23661:23714  sender != uniswapV2Pair && recipient == uniswapV2Pair */\n    tag_801:\n        /* \"contracts/gainzilla.sol\":23657:24008  if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells... */\n      iszero\n      tag_802\n      jumpi\n        /* \"contracts/gainzilla.sol\":23755:23794  amount.mul(_sellMarketingFee).div(1000) */\n      tag_803\n        /* \"contracts/gainzilla.sol\":23789:23793  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":23755:23784  amount.mul(_sellMarketingFee) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":23766:23783  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":23755:23761  amount */\n      dup6\n        /* \"contracts/gainzilla.sol\":23755:23765  amount.mul */\n      tag_440\n      swap1\n        /* \"contracts/gainzilla.sol\":23755:23784  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23755:23794  amount.mul(_sellMarketingFee).div(1000) */\n    tag_803:\n        /* \"contracts/gainzilla.sol\":23737:23752  fees.tMarketing */\n      0x20\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23737:23794  fees.tMarketing = amount.mul(_sellMarketingFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23837:23854  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":23826:23865  amount.mul(_sellLiquidityFee).div(1000) */\n      tag_805\n      swap1\n        /* \"contracts/gainzilla.sol\":23860:23864  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23826:23855  amount.mul(_sellLiquidityFee) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":23826:23832  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23826:23836  amount.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":23826:23855  amount.mul(_sellLiquidityFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23826:23865  amount.mul(_sellLiquidityFee).div(1000) */\n    tag_805:\n        /* \"contracts/gainzilla.sol\":23808:23865  fees.tLiquidity = amount.mul(_sellLiquidityFee).div(1000) */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":23903:23915  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":23892:23926  amount.mul(_sellTeamFee).div(1000) */\n      tag_807\n      swap1\n        /* \"contracts/gainzilla.sol\":23921:23925  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23892:23916  amount.mul(_sellTeamFee) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":23892:23898  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23892:23902  amount.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":23892:23916  amount.mul(_sellTeamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23892:23926  amount.mul(_sellTeamFee).div(1000) */\n    tag_807:\n        /* \"contracts/gainzilla.sol\":23879:23889  fees.tTeam */\n      0x40\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23879:23926  fees.tTeam = amount.mul(_sellTeamFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23969:23986  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":23958:23997  amount.mul(_sellEcosystemFee).div(1000) */\n      tag_809\n      swap1\n        /* \"contracts/gainzilla.sol\":23992:23996  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":23958:23987  amount.mul(_sellEcosystemFee) */\n      tag_437\n      swap1\n        /* \"contracts/gainzilla.sol\":23958:23964  amount */\n      dup6\n      swap1\n        /* \"contracts/gainzilla.sol\":23958:23968  amount.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":23958:23987  amount.mul(_sellEcosystemFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":23958:23997  amount.mul(_sellEcosystemFee).div(1000) */\n    tag_809:\n        /* \"contracts/gainzilla.sol\":23940:23955  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":23940:23997  fees.tEcosystem = amount.mul(_sellEcosystemFee).div(1000) */\n      mstore\n        /* \"contracts/gainzilla.sol\":23657:24008  if (sender != uniswapV2Pair && recipient == uniswapV2Pair) {//sells... */\n    tag_802:\n        /* \"contracts/gainzilla.sol\":24031:24044  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24021:24044  sender != uniswapV2Pair */\n      dup6\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":24031:24044  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":24021:24044  sender != uniswapV2Pair */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"contracts/gainzilla.sol\":24021:24074  sender != uniswapV2Pair && recipient != uniswapV2Pair */\n      tag_811\n      jumpi\n      pop\n        /* \"contracts/gainzilla.sol\":24061:24074  uniswapV2Pair */\n      sload(0x26)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24048:24074  recipient != uniswapV2Pair */\n      dup5\n      dup2\n      and\n        /* \"contracts/gainzilla.sol\":24061:24074  uniswapV2Pair */\n      swap2\n      and\n        /* \"contracts/gainzilla.sol\":24048:24074  recipient != uniswapV2Pair */\n      eq\n      iszero\n        /* \"contracts/gainzilla.sol\":24021:24074  sender != uniswapV2Pair && recipient != uniswapV2Pair */\n    tag_811:\n        /* \"contracts/gainzilla.sol\":24017:24539  if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer... */\n      iszero\n      tag_812\n      jumpi\n        /* \"contracts/gainzilla.sol\":24118:24199  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_813\n        /* \"contracts/gainzilla.sol\":24195:24198  100 */\n      0x64\n        /* \"contracts/gainzilla.sol\":24118:24190  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":24164:24189  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24119:24158  amount.mul(_sellMarketingFee).div(1000) */\n      tag_438\n        /* \"contracts/gainzilla.sol\":24153:24157  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":24119:24148  amount.mul(_sellMarketingFee) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":24130:24147  _sellMarketingFee */\n      sload(0x15)\n        /* \"contracts/gainzilla.sol\":24119:24125  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24119:24129  amount.mul */\n      tag_440\n      swap1\n        /* \"contracts/gainzilla.sol\":24119:24148  amount.mul(_sellMarketingFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24118:24199  (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_813:\n        /* \"contracts/gainzilla.sol\":24100:24104  fees */\n      dup2\n        /* \"contracts/gainzilla.sol\":24100:24115  fees.tMarketing */\n      0x20\n      add\n        /* \"contracts/gainzilla.sol\":24100:24199  fees.tMarketing = (amount.mul(_sellMarketingFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":24231:24312  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_817\n        /* \"contracts/gainzilla.sol\":24308:24311  100 */\n      0x64\n        /* \"contracts/gainzilla.sol\":24231:24303  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":24277:24302  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24232:24271  amount.mul(_sellLiquidityFee).div(1000) */\n      tag_438\n        /* \"contracts/gainzilla.sol\":24266:24270  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":24232:24261  amount.mul(_sellLiquidityFee) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":24243:24260  _sellLiquidityFee */\n      sload(0x11)\n        /* \"contracts/gainzilla.sol\":24232:24238  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24232:24242  amount.mul */\n      tag_440\n      swap1\n        /* \"contracts/gainzilla.sol\":24232:24261  amount.mul(_sellLiquidityFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24231:24312  (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_817:\n        /* \"contracts/gainzilla.sol\":24213:24312  fees.tLiquidity = (amount.mul(_sellLiquidityFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24380:24405  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24351:24363  _sellTeamFee */\n      sload(0x17)\n        /* \"contracts/gainzilla.sol\":24339:24415  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_821\n      swap2\n        /* \"contracts/gainzilla.sol\":24411:24414  100 */\n      0x64\n      swap2\n        /* \"contracts/gainzilla.sol\":24339:24406  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_437\n      swap2\n        /* \"contracts/gainzilla.sol\":24380:24405  transferFeeIncreaseFactor */\n      swap1\n        /* \"contracts/gainzilla.sol\":24340:24374  amount.mul(_sellTeamFee).div(1000) */\n      tag_438\n      swap1\n        /* \"contracts/gainzilla.sol\":24369:24373  1000 */\n      0x03e8\n      swap1\n        /* \"contracts/gainzilla.sol\":24339:24406  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      dup5\n      swap1\n        /* \"contracts/gainzilla.sol\":24340:24346  amount */\n      dup10\n      swap1\n        /* \"contracts/gainzilla.sol\":24340:24350  amount.mul */\n      tag_440\n        /* \"contracts/gainzilla.sol\":24340:24364  amount.mul(_sellTeamFee) */\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24339:24415  (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_821:\n        /* \"contracts/gainzilla.sol\":24326:24330  fees */\n      dup2\n        /* \"contracts/gainzilla.sol\":24326:24336  fees.tTeam */\n      0x40\n      add\n        /* \"contracts/gainzilla.sol\":24326:24415  fees.tTeam = (amount.mul(_sellTeamFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/gainzilla.sol\":24447:24528  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      tag_825\n        /* \"contracts/gainzilla.sol\":24524:24527  100 */\n      0x64\n        /* \"contracts/gainzilla.sol\":24447:24519  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":24493:24518  transferFeeIncreaseFactor */\n      sload(0x19)\n        /* \"contracts/gainzilla.sol\":24448:24487  amount.mul(_sellEcosystemFee).div(1000) */\n      tag_438\n        /* \"contracts/gainzilla.sol\":24482:24486  1000 */\n      0x03e8\n        /* \"contracts/gainzilla.sol\":24448:24477  amount.mul(_sellEcosystemFee) */\n      tag_437\n        /* \"contracts/gainzilla.sol\":24459:24476  _sellEcosystemFee */\n      sload(0x13)\n        /* \"contracts/gainzilla.sol\":24448:24454  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24448:24458  amount.mul */\n      tag_440\n      swap1\n        /* \"contracts/gainzilla.sol\":24448:24477  amount.mul(_sellEcosystemFee) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24447:24528  (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n    tag_825:\n        /* \"contracts/gainzilla.sol\":24429:24444  fees.tEcosystem */\n      0x60\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":24429:24528  fees.tEcosystem = (amount.mul(_sellEcosystemFee).div(1000)).mul(transferFeeIncreaseFactor).div(100) */\n      mstore\n        /* \"contracts/gainzilla.sol\":24017:24539  if (sender != uniswapV2Pair && recipient != uniswapV2Pair) {//transfer... */\n    tag_812:\n        /* \"contracts/gainzilla.sol\":24572:24657  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n      tag_829\n        /* \"contracts/gainzilla.sol\":24641:24645  fees */\n      dup2\n        /* \"contracts/gainzilla.sol\":24641:24656  fees.tEcosystem */\n      0x60\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24572:24636  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam) */\n      tag_729\n        /* \"contracts/gainzilla.sol\":24625:24629  fees */\n      dup4\n        /* \"contracts/gainzilla.sol\":24625:24635  fees.tTeam */\n      0x40\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24572:24620  amount.sub(fees.tMarketing).sub(fees.tLiquidity) */\n      tag_729\n        /* \"contracts/gainzilla.sol\":24604:24608  fees */\n      dup6\n        /* \"contracts/gainzilla.sol\":24604:24619  fees.tLiquidity */\n      0x00\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24572:24599  amount.sub(fees.tMarketing) */\n      tag_729\n        /* \"contracts/gainzilla.sol\":24583:24587  fees */\n      dup8\n        /* \"contracts/gainzilla.sol\":24583:24598  fees.tMarketing */\n      0x20\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24572:24578  amount */\n      dup10\n        /* \"contracts/gainzilla.sol\":24572:24582  amount.sub */\n      tag_439\n      swap1\n        /* \"contracts/gainzilla.sol\":24572:24599  amount.sub(fees.tMarketing) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24572:24657  amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n    tag_829:\n        /* \"contracts/gainzilla.sol\":24557:24569  fees.tAmount */\n      0x80\n      dup3\n      add\n        /* \"contracts/gainzilla.sol\":24557:24657  fees.tAmount = amount.sub(fees.tMarketing).sub(fees.tLiquidity).sub(fees.tTeam).sub(fees.tEcosystem) */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24696:24713  _balances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24696:24705  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24696:24713  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":24696:24725  _balances[sender].sub(amount) */\n      tag_833\n      swap1\n        /* \"contracts/gainzilla.sol\":24718:24724  amount */\n      dup4\n        /* \"contracts/gainzilla.sol\":24696:24717  _balances[sender].sub */\n      tag_439\n        /* \"contracts/gainzilla.sol\":24696:24725  _balances[sender].sub(amount) */\n      jump\t// in\n    tag_833:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24676:24693  _balances[sender] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24676:24685  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24676:24693  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/gainzilla.sol\":24676:24725  _balances[sender] = _balances[sender].sub(amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/gainzilla.sol\":24783:24795  fees.tAmount */\n      0x80\n      dup5\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24758:24778  _balances[recipient] */\n      swap2\n      dup7\n      and\n      dup2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/gainzilla.sol\":24758:24796  _balances[recipient].add(fees.tAmount) */\n      tag_834\n      swap2\n        /* \"contracts/gainzilla.sol\":24758:24782  _balances[recipient].add */\n      tag_540\n        /* \"contracts/gainzilla.sol\":24758:24796  _balances[recipient].add(fees.tAmount) */\n      jump\t// in\n    tag_834:\n        /* \"contracts/gainzilla.sol\":24735:24744  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24735:24755  _balances[recipient] */\n      0x00\n        /* \"contracts/gainzilla.sol\":24745:24754  recipient */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24735:24755  _balances[recipient] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/gainzilla.sol\":24735:24796  _balances[recipient] = _balances[recipient].add(fees.tAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/gainzilla.sol\":24833:24936  _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      tag_835\n        /* \"contracts/gainzilla.sol\":24862:24935  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem) */\n      tag_836\n        /* \"contracts/gainzilla.sol\":24919:24923  fees */\n      dup3\n        /* \"contracts/gainzilla.sol\":24919:24934  fees.tEcosystem */\n      0x60\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24862:24914  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":24903:24907  fees */\n      dup5\n        /* \"contracts/gainzilla.sol\":24903:24913  fees.tTeam */\n      0x40\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24862:24898  fees.tMarketing.add(fees.tLiquidity) */\n      tag_539\n        /* \"contracts/gainzilla.sol\":24882:24886  fees */\n      dup7\n        /* \"contracts/gainzilla.sol\":24882:24897  fees.tLiquidity */\n      0x00\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24862:24866  fees */\n      dup8\n        /* \"contracts/gainzilla.sol\":24862:24877  fees.tMarketing */\n      0x20\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24862:24881  fees.tMarketing.add */\n      tag_540\n      swap1\n        /* \"contracts/gainzilla.sol\":24862:24898  fees.tMarketing.add(fees.tLiquidity) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/gainzilla.sol\":24862:24935  fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem) */\n    tag_836:\n        /* \"contracts/gainzilla.sol\":24851:24855  this */\n      address\n        /* \"contracts/gainzilla.sol\":24833:24857  _balances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24833:24842  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24833:24857  _balances[address(this)] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/gainzilla.sol\":24833:24861  _balances[address(this)].add */\n      tag_540\n        /* \"contracts/gainzilla.sol\":24833:24936  _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      jump\t// in\n    tag_835:\n        /* \"contracts/gainzilla.sol\":24824:24828  this */\n      address\n        /* \"contracts/gainzilla.sol\":24806:24830  _balances[address(this)] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/gainzilla.sol\":24806:24815  _balances */\n      0x02\n        /* \"contracts/gainzilla.sol\":24806:24830  _balances[address(this)] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/gainzilla.sol\":24806:24936  _balances[address(this)] = _balances[address(this)].add(fees.tMarketing.add(fees.tLiquidity).add(fees.tTeam).add(fees.tEcosystem)) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/gainzilla.sol\":24988:25000  fees.tAmount */\n      0x80\n      dup4\n      add\n      mload\n        /* \"contracts/gainzilla.sol\":24960:25001  Transfer(sender, recipient, fees.tAmount) */\n      swap1\n      mload\n        /* \"#utility.yul\":7136:7161   */\n      swap1\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/gainzilla.sol\":24960:25001  Transfer(sender, recipient, fees.tAmount) */\n      dup6\n      dup2\n      and\n      swap3\n      swap1\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":7109:7127   */\n      add\n        /* \"contracts/gainzilla.sol\":24960:25001  Transfer(sender, recipient, fees.tAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/gainzilla.sol\":23161:25008  function _transferStandard(address sender, address recipient, uint256 amount) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:202   */\n    tag_842:\n        /* \"#utility.yul\":93:106   */\n      dup1\n      mload\n        /* \"#utility.yul\":146:176   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":135:177   */\n      dup2\n      and\n        /* \"#utility.yul\":125:178   */\n      dup2\n      eq\n        /* \"#utility.yul\":115:117   */\n      tag_844\n      jumpi\n        /* \"#utility.yul\":192:193   */\n      0x00\n        /* \"#utility.yul\":189:190   */\n      dup1\n        /* \"#utility.yul\":182:194   */\n      revert\n        /* \"#utility.yul\":115:117   */\n    tag_844:\n        /* \"#utility.yul\":74:202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":207:464   */\n    tag_130:\n        /* \"#utility.yul\":266:272   */\n      0x00\n        /* \"#utility.yul\":319:321   */\n      0x20\n        /* \"#utility.yul\":307:316   */\n      dup3\n        /* \"#utility.yul\":298:305   */\n      dup5\n        /* \"#utility.yul\":294:317   */\n      sub\n        /* \"#utility.yul\":290:322   */\n      slt\n        /* \"#utility.yul\":287:289   */\n      iszero\n      tag_846\n      jumpi\n        /* \"#utility.yul\":340:346   */\n      dup1\n        /* \"#utility.yul\":332:338   */\n      dup2\n        /* \"#utility.yul\":325:347   */\n      revert\n        /* \"#utility.yul\":287:289   */\n    tag_846:\n        /* \"#utility.yul\":384:393   */\n      dup2\n        /* \"#utility.yul\":371:394   */\n      calldataload\n        /* \"#utility.yul\":403:434   */\n      tag_688\n        /* \"#utility.yul\":428:433   */\n      dup2\n        /* \"#utility.yul\":403:434   */\n      tag_848\n      jump\t// in\n        /* \"#utility.yul\":469:730   */\n    tag_465:\n        /* \"#utility.yul\":539:545   */\n      0x00\n        /* \"#utility.yul\":592:594   */\n      0x20\n        /* \"#utility.yul\":580:589   */\n      dup3\n        /* \"#utility.yul\":571:578   */\n      dup5\n        /* \"#utility.yul\":567:590   */\n      sub\n        /* \"#utility.yul\":563:595   */\n      slt\n        /* \"#utility.yul\":560:562   */\n      iszero\n      tag_850\n      jumpi\n        /* \"#utility.yul\":613:619   */\n      dup1\n        /* \"#utility.yul\":605:611   */\n      dup2\n        /* \"#utility.yul\":598:620   */\n      revert\n        /* \"#utility.yul\":560:562   */\n    tag_850:\n        /* \"#utility.yul\":650:659   */\n      dup2\n        /* \"#utility.yul\":644:660   */\n      mload\n        /* \"#utility.yul\":669:700   */\n      tag_688\n        /* \"#utility.yul\":694:699   */\n      dup2\n        /* \"#utility.yul\":669:700   */\n      tag_848\n      jump\t// in\n        /* \"#utility.yul\":1005:1403   */\n    tag_290:\n        /* \"#utility.yul\":1073:1079   */\n      0x00\n        /* \"#utility.yul\":1081:1087   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1122:1131   */\n      dup4\n        /* \"#utility.yul\":1113:1120   */\n      dup6\n        /* \"#utility.yul\":1109:1132   */\n      sub\n        /* \"#utility.yul\":1105:1137   */\n      slt\n        /* \"#utility.yul\":1102:1104   */\n      iszero\n      tag_856\n      jumpi\n        /* \"#utility.yul\":1155:1161   */\n      dup1\n        /* \"#utility.yul\":1147:1153   */\n      dup2\n        /* \"#utility.yul\":1140:1162   */\n      revert\n        /* \"#utility.yul\":1102:1104   */\n    tag_856:\n        /* \"#utility.yul\":1199:1208   */\n      dup3\n        /* \"#utility.yul\":1186:1209   */\n      calldataload\n        /* \"#utility.yul\":1218:1249   */\n      tag_857\n        /* \"#utility.yul\":1243:1248   */\n      dup2\n        /* \"#utility.yul\":1218:1249   */\n      tag_848\n      jump\t// in\n    tag_857:\n        /* \"#utility.yul\":1268:1273   */\n      swap2\n      pop\n        /* \"#utility.yul\":1325:1327   */\n      0x20\n        /* \"#utility.yul\":1310:1328   */\n      dup4\n      add\n        /* \"#utility.yul\":1297:1329   */\n      calldataload\n        /* \"#utility.yul\":1338:1371   */\n      tag_858\n        /* \"#utility.yul\":1297:1329   */\n      dup2\n        /* \"#utility.yul\":1338:1371   */\n      tag_848\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":1390:1397   */\n      dup1\n        /* \"#utility.yul\":1380:1397   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1092:1403   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1408:1874   */\n    tag_111:\n        /* \"#utility.yul\":1485:1491   */\n      0x00\n        /* \"#utility.yul\":1493:1499   */\n      dup1\n        /* \"#utility.yul\":1501:1507   */\n      0x00\n        /* \"#utility.yul\":1554:1556   */\n      0x60\n        /* \"#utility.yul\":1542:1551   */\n      dup5\n        /* \"#utility.yul\":1533:1540   */\n      dup7\n        /* \"#utility.yul\":1529:1552   */\n      sub\n        /* \"#utility.yul\":1525:1557   */\n      slt\n        /* \"#utility.yul\":1522:1524   */\n      iszero\n      tag_860\n      jumpi\n        /* \"#utility.yul\":1575:1581   */\n      dup1\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1560:1582   */\n      revert\n        /* \"#utility.yul\":1522:1524   */\n    tag_860:\n        /* \"#utility.yul\":1619:1628   */\n      dup4\n        /* \"#utility.yul\":1606:1629   */\n      calldataload\n        /* \"#utility.yul\":1638:1669   */\n      tag_861\n        /* \"#utility.yul\":1663:1668   */\n      dup2\n        /* \"#utility.yul\":1638:1669   */\n      tag_848\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":1688:1693   */\n      swap3\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x20\n        /* \"#utility.yul\":1730:1748   */\n      dup5\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1758:1791   */\n      tag_862\n        /* \"#utility.yul\":1717:1749   */\n      dup2\n        /* \"#utility.yul\":1758:1791   */\n      tag_848\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":1512:1874   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1810:1817   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1864:1866   */\n      0x40\n        /* \"#utility.yul\":1849:1867   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1836:1868   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1512:1874   */\n      jump\t// out\n        /* \"#utility.yul\":1879:2204   */\n    tag_91:\n        /* \"#utility.yul\":1947:1953   */\n      0x00\n        /* \"#utility.yul\":1955:1961   */\n      dup1\n        /* \"#utility.yul\":2008:2010   */\n      0x40\n        /* \"#utility.yul\":1996:2005   */\n      dup4\n        /* \"#utility.yul\":1987:1994   */\n      dup6\n        /* \"#utility.yul\":1983:2006   */\n      sub\n        /* \"#utility.yul\":1979:2011   */\n      slt\n        /* \"#utility.yul\":1976:1978   */\n      iszero\n      tag_864\n      jumpi\n        /* \"#utility.yul\":2029:2035   */\n      dup2\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2014:2036   */\n      revert\n        /* \"#utility.yul\":1976:1978   */\n    tag_864:\n        /* \"#utility.yul\":2073:2082   */\n      dup3\n        /* \"#utility.yul\":2060:2083   */\n      calldataload\n        /* \"#utility.yul\":2092:2123   */\n      tag_865\n        /* \"#utility.yul\":2117:2122   */\n      dup2\n        /* \"#utility.yul\":2092:2123   */\n      tag_848\n      jump\t// in\n    tag_865:\n        /* \"#utility.yul\":2142:2147   */\n      swap5\n        /* \"#utility.yul\":2194:2196   */\n      0x20\n        /* \"#utility.yul\":2179:2197   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2166:2198   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1966:2204   */\n      jump\t// out\n        /* \"#utility.yul\":2209:2464   */\n    tag_384:\n        /* \"#utility.yul\":2276:2282   */\n      0x00\n        /* \"#utility.yul\":2329:2331   */\n      0x20\n        /* \"#utility.yul\":2317:2326   */\n      dup3\n        /* \"#utility.yul\":2308:2315   */\n      dup5\n        /* \"#utility.yul\":2304:2327   */\n      sub\n        /* \"#utility.yul\":2300:2332   */\n      slt\n        /* \"#utility.yul\":2297:2299   */\n      iszero\n      tag_867\n      jumpi\n        /* \"#utility.yul\":2350:2356   */\n      dup1\n        /* \"#utility.yul\":2342:2348   */\n      dup2\n        /* \"#utility.yul\":2335:2357   */\n      revert\n        /* \"#utility.yul\":2297:2299   */\n    tag_867:\n        /* \"#utility.yul\":2387:2396   */\n      dup2\n        /* \"#utility.yul\":2381:2397   */\n      mload\n        /* \"#utility.yul\":2406:2434   */\n      tag_688\n        /* \"#utility.yul\":2428:2433   */\n      dup2\n        /* \"#utility.yul\":2406:2434   */\n      tag_869\n      jump\t// in\n        /* \"#utility.yul\":2469:2898   */\n    tag_317:\n        /* \"#utility.yul\":2533:2539   */\n      0x00\n        /* \"#utility.yul\":2541:2547   */\n      dup1\n        /* \"#utility.yul\":2594:2596   */\n      0x40\n        /* \"#utility.yul\":2582:2591   */\n      dup4\n        /* \"#utility.yul\":2573:2580   */\n      dup6\n        /* \"#utility.yul\":2569:2592   */\n      sub\n        /* \"#utility.yul\":2565:2597   */\n      slt\n        /* \"#utility.yul\":2562:2564   */\n      iszero\n      tag_871\n      jumpi\n        /* \"#utility.yul\":2615:2621   */\n      dup2\n        /* \"#utility.yul\":2607:2613   */\n      dup3\n        /* \"#utility.yul\":2600:2622   */\n      revert\n        /* \"#utility.yul\":2562:2564   */\n    tag_871:\n        /* \"#utility.yul\":2659:2668   */\n      dup3\n        /* \"#utility.yul\":2646:2669   */\n      calldataload\n        /* \"#utility.yul\":2678:2706   */\n      tag_872\n        /* \"#utility.yul\":2700:2705   */\n      dup2\n        /* \"#utility.yul\":2678:2706   */\n      tag_869\n      jump\t// in\n    tag_872:\n        /* \"#utility.yul\":2725:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2782:2784   */\n      0x20\n        /* \"#utility.yul\":2767:2785   */\n      dup4\n      add\n        /* \"#utility.yul\":2754:2786   */\n      calldataload\n        /* \"#utility.yul\":2830:2836   */\n      0xffff\n        /* \"#utility.yul\":2817:2837   */\n      dup2\n      and\n        /* \"#utility.yul\":2805:2838   */\n      dup2\n      eq\n        /* \"#utility.yul\":2795:2797   */\n      tag_858\n      jumpi\n        /* \"#utility.yul\":2857:2863   */\n      dup2\n        /* \"#utility.yul\":2849:2855   */\n      dup3\n        /* \"#utility.yul\":2842:2864   */\n      revert\n        /* \"#utility.yul\":2903:3293   */\n    tag_191:\n        /* \"#utility.yul\":2967:2973   */\n      0x00\n        /* \"#utility.yul\":2975:2981   */\n      dup1\n        /* \"#utility.yul\":3028:3030   */\n      0x40\n        /* \"#utility.yul\":3016:3025   */\n      dup4\n        /* \"#utility.yul\":3007:3014   */\n      dup6\n        /* \"#utility.yul\":3003:3026   */\n      sub\n        /* \"#utility.yul\":2999:3031   */\n      slt\n        /* \"#utility.yul\":2996:2998   */\n      iszero\n      tag_875\n      jumpi\n        /* \"#utility.yul\":3049:3055   */\n      dup2\n        /* \"#utility.yul\":3041:3047   */\n      dup3\n        /* \"#utility.yul\":3034:3056   */\n      revert\n        /* \"#utility.yul\":2996:2998   */\n    tag_875:\n        /* \"#utility.yul\":3093:3102   */\n      dup3\n        /* \"#utility.yul\":3080:3103   */\n      calldataload\n        /* \"#utility.yul\":3112:3140   */\n      tag_876\n        /* \"#utility.yul\":3134:3139   */\n      dup2\n        /* \"#utility.yul\":3112:3140   */\n      tag_869\n      jump\t// in\n    tag_876:\n        /* \"#utility.yul\":3159:3164   */\n      swap2\n      pop\n        /* \"#utility.yul\":3216:3218   */\n      0x20\n        /* \"#utility.yul\":3201:3219   */\n      dup4\n      add\n        /* \"#utility.yul\":3188:3220   */\n      calldataload\n        /* \"#utility.yul\":3229:3261   */\n      tag_858\n        /* \"#utility.yul\":3188:3220   */\n      dup2\n        /* \"#utility.yul\":3229:3261   */\n      tag_878\n      jump\t// in\n        /* \"#utility.yul\":3298:3727   */\n    tag_458:\n        /* \"#utility.yul\":3385:3391   */\n      0x00\n        /* \"#utility.yul\":3393:3399   */\n      dup1\n        /* \"#utility.yul\":3401:3407   */\n      0x00\n        /* \"#utility.yul\":3454:3456   */\n      0x60\n        /* \"#utility.yul\":3442:3451   */\n      dup5\n        /* \"#utility.yul\":3433:3440   */\n      dup7\n        /* \"#utility.yul\":3429:3452   */\n      sub\n        /* \"#utility.yul\":3425:3457   */\n      slt\n        /* \"#utility.yul\":3422:3424   */\n      iszero\n      tag_880\n      jumpi\n        /* \"#utility.yul\":3475:3481   */\n      dup3\n        /* \"#utility.yul\":3467:3473   */\n      dup4\n        /* \"#utility.yul\":3460:3482   */\n      revert\n        /* \"#utility.yul\":3422:3424   */\n    tag_880:\n        /* \"#utility.yul\":3503:3543   */\n      tag_881\n        /* \"#utility.yul\":3533:3542   */\n      dup5\n        /* \"#utility.yul\":3503:3543   */\n      tag_842\n      jump\t// in\n    tag_881:\n        /* \"#utility.yul\":3493:3543   */\n      swap3\n      pop\n        /* \"#utility.yul\":3562:3611   */\n      tag_882\n        /* \"#utility.yul\":3607:3609   */\n      0x20\n        /* \"#utility.yul\":3596:3605   */\n      dup6\n        /* \"#utility.yul\":3592:3610   */\n      add\n        /* \"#utility.yul\":3562:3611   */\n      tag_842\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":3552:3611   */\n      swap2\n      pop\n        /* \"#utility.yul\":3654:3656   */\n      0x40\n        /* \"#utility.yul\":3643:3652   */\n      dup5\n        /* \"#utility.yul\":3639:3657   */\n      add\n        /* \"#utility.yul\":3633:3658   */\n      mload\n        /* \"#utility.yul\":3667:3697   */\n      tag_883\n        /* \"#utility.yul\":3691:3696   */\n      dup2\n        /* \"#utility.yul\":3667:3697   */\n      tag_878\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":3716:3721   */\n      dup1\n        /* \"#utility.yul\":3706:3721   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3412:3727   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3732:3922   */\n    tag_121:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3844:3846   */\n      0x20\n        /* \"#utility.yul\":3832:3841   */\n      dup3\n        /* \"#utility.yul\":3823:3830   */\n      dup5\n        /* \"#utility.yul\":3819:3842   */\n      sub\n        /* \"#utility.yul\":3815:3847   */\n      slt\n        /* \"#utility.yul\":3812:3814   */\n      iszero\n      tag_885\n      jumpi\n        /* \"#utility.yul\":3865:3871   */\n      dup1\n        /* \"#utility.yul\":3857:3863   */\n      dup2\n        /* \"#utility.yul\":3850:3872   */\n      revert\n        /* \"#utility.yul\":3812:3814   */\n    tag_885:\n      pop\n        /* \"#utility.yul\":3893:3916   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3802:3922   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3927:4121   */\n    tag_376:\n        /* \"#utility.yul\":3997:4003   */\n      0x00\n        /* \"#utility.yul\":4050:4052   */\n      0x20\n        /* \"#utility.yul\":4038:4047   */\n      dup3\n        /* \"#utility.yul\":4029:4036   */\n      dup5\n        /* \"#utility.yul\":4025:4048   */\n      sub\n        /* \"#utility.yul\":4021:4053   */\n      slt\n        /* \"#utility.yul\":4018:4020   */\n      iszero\n      tag_887\n      jumpi\n        /* \"#utility.yul\":4071:4077   */\n      dup1\n        /* \"#utility.yul\":4063:4069   */\n      dup2\n        /* \"#utility.yul\":4056:4078   */\n      revert\n        /* \"#utility.yul\":4018:4020   */\n    tag_887:\n      pop\n        /* \"#utility.yul\":4099:4115   */\n      mload\n      swap2\n        /* \"#utility.yul\":4008:4121   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4126:4442   */\n    tag_786:\n        /* \"#utility.yul\":4214:4220   */\n      0x00\n        /* \"#utility.yul\":4222:4228   */\n      dup1\n        /* \"#utility.yul\":4230:4236   */\n      0x00\n        /* \"#utility.yul\":4283:4285   */\n      0x60\n        /* \"#utility.yul\":4271:4280   */\n      dup5\n        /* \"#utility.yul\":4262:4269   */\n      dup7\n        /* \"#utility.yul\":4258:4281   */\n      sub\n        /* \"#utility.yul\":4254:4286   */\n      slt\n        /* \"#utility.yul\":4251:4253   */\n      iszero\n      tag_889\n      jumpi\n        /* \"#utility.yul\":4304:4310   */\n      dup3\n        /* \"#utility.yul\":4296:4302   */\n      dup4\n        /* \"#utility.yul\":4289:4311   */\n      revert\n        /* \"#utility.yul\":4251:4253   */\n    tag_889:\n        /* \"#utility.yul\":4338:4347   */\n      dup4\n        /* \"#utility.yul\":4332:4348   */\n      mload\n        /* \"#utility.yul\":4322:4348   */\n      swap3\n      pop\n        /* \"#utility.yul\":4388:4390   */\n      0x20\n        /* \"#utility.yul\":4377:4386   */\n      dup5\n        /* \"#utility.yul\":4373:4391   */\n      add\n        /* \"#utility.yul\":4367:4392   */\n      mload\n        /* \"#utility.yul\":4357:4392   */\n      swap2\n      pop\n        /* \"#utility.yul\":4432:4434   */\n      0x40\n        /* \"#utility.yul\":4421:4430   */\n      dup5\n        /* \"#utility.yul\":4417:4435   */\n      add\n        /* \"#utility.yul\":4411:4436   */\n      mload\n        /* \"#utility.yul\":4401:4436   */\n      swap1\n      pop\n        /* \"#utility.yul\":4241:4442   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4447:4842   */\n    tag_300:\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      dup1\n        /* \"#utility.yul\":4549:4555   */\n      0x00\n        /* \"#utility.yul\":4557:4563   */\n      dup1\n        /* \"#utility.yul\":4610:4613   */\n      0x80\n        /* \"#utility.yul\":4598:4607   */\n      dup6\n        /* \"#utility.yul\":4589:4596   */\n      dup8\n        /* \"#utility.yul\":4585:4608   */\n      sub\n        /* \"#utility.yul\":4581:4614   */\n      slt\n        /* \"#utility.yul\":4578:4580   */\n      iszero\n      tag_891\n      jumpi\n        /* \"#utility.yul\":4632:4638   */\n      dup2\n        /* \"#utility.yul\":4624:4630   */\n      dup3\n        /* \"#utility.yul\":4617:4639   */\n      revert\n        /* \"#utility.yul\":4578:4580   */\n    tag_891:\n      pop\n      pop\n        /* \"#utility.yul\":4660:4683   */\n      dup3\n      calldataload\n      swap5\n        /* \"#utility.yul\":4730:4732   */\n      0x20\n        /* \"#utility.yul\":4715:4733   */\n      dup5\n      add\n        /* \"#utility.yul\":4702:4734   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":4781:4783   */\n      0x40\n        /* \"#utility.yul\":4766:4784   */\n      dup5\n      add\n        /* \"#utility.yul\":4753:4785   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":4832:4834   */\n      0x60\n        /* \"#utility.yul\":4817:4835   */\n      add\n        /* \"#utility.yul\":4804:4836   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4568:4842   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7172:7834   */\n    tag_87:\n        /* \"#utility.yul\":7284:7288   */\n      0x00\n        /* \"#utility.yul\":7313:7315   */\n      0x20\n        /* \"#utility.yul\":7342:7344   */\n      dup1\n        /* \"#utility.yul\":7331:7340   */\n      dup4\n        /* \"#utility.yul\":7324:7345   */\n      mstore\n        /* \"#utility.yul\":7374:7380   */\n      dup4\n        /* \"#utility.yul\":7368:7381   */\n      mload\n        /* \"#utility.yul\":7417:7423   */\n      dup1\n        /* \"#utility.yul\":7412:7414   */\n      dup3\n        /* \"#utility.yul\":7401:7410   */\n      dup6\n        /* \"#utility.yul\":7397:7415   */\n      add\n        /* \"#utility.yul\":7390:7424   */\n      mstore\n        /* \"#utility.yul\":7442:7446   */\n      dup3\n        /* \"#utility.yul\":7455:7595   */\n    tag_900:\n        /* \"#utility.yul\":7469:7475   */\n      dup2\n        /* \"#utility.yul\":7466:7467   */\n      dup2\n        /* \"#utility.yul\":7463:7476   */\n      lt\n        /* \"#utility.yul\":7455:7595   */\n      iszero\n      tag_902\n      jumpi\n        /* \"#utility.yul\":7564:7578   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":7560:7583   */\n      dup4\n      add\n        /* \"#utility.yul\":7554:7584   */\n      mload\n        /* \"#utility.yul\":7530:7547   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":7549:7551   */\n      0x40\n        /* \"#utility.yul\":7526:7552   */\n      add\n        /* \"#utility.yul\":7519:7585   */\n      mstore\n        /* \"#utility.yul\":7484:7494   */\n      dup3\n      add\n        /* \"#utility.yul\":7455:7595   */\n      jump(tag_900)\n    tag_902:\n        /* \"#utility.yul\":7613:7619   */\n      dup2\n        /* \"#utility.yul\":7610:7611   */\n      dup2\n        /* \"#utility.yul\":7607:7620   */\n      gt\n        /* \"#utility.yul\":7604:7606   */\n      iszero\n      tag_903\n      jumpi\n        /* \"#utility.yul\":7683:7687   */\n      dup4\n        /* \"#utility.yul\":7678:7680   */\n      0x40\n        /* \"#utility.yul\":7669:7675   */\n      dup4\n        /* \"#utility.yul\":7658:7667   */\n      dup8\n        /* \"#utility.yul\":7654:7676   */\n      add\n        /* \"#utility.yul\":7650:7681   */\n      add\n        /* \"#utility.yul\":7643:7688   */\n      mstore\n        /* \"#utility.yul\":7604:7606   */\n    tag_903:\n      pop\n        /* \"#utility.yul\":7750:7752   */\n      0x1f\n        /* \"#utility.yul\":7738:7753   */\n      add\n        /* \"#utility.yul\":7755:7821   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":7734:7822   */\n      and\n        /* \"#utility.yul\":7719:7823   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7825:7827   */\n      0x40\n        /* \"#utility.yul\":7715:7828   */\n      add\n      swap4\n        /* \"#utility.yul\":7293:7834   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16311:17340   */\n    tag_713:\n        /* \"#utility.yul\":16573:16577   */\n      0x00\n        /* \"#utility.yul\":16621:16624   */\n      0xa0\n        /* \"#utility.yul\":16610:16619   */\n      dup3\n        /* \"#utility.yul\":16606:16625   */\n      add\n        /* \"#utility.yul\":16652:16658   */\n      dup8\n        /* \"#utility.yul\":16641:16650   */\n      dup4\n        /* \"#utility.yul\":16634:16659   */\n      mstore\n        /* \"#utility.yul\":16678:16680   */\n      0x20\n        /* \"#utility.yul\":16716:16722   */\n      dup8\n        /* \"#utility.yul\":16711:16713   */\n      dup2\n        /* \"#utility.yul\":16700:16709   */\n      dup6\n        /* \"#utility.yul\":16696:16714   */\n      add\n        /* \"#utility.yul\":16689:16723   */\n      mstore\n        /* \"#utility.yul\":16759:16762   */\n      0xa0\n        /* \"#utility.yul\":16754:16756   */\n      0x40\n        /* \"#utility.yul\":16743:16752   */\n      dup6\n        /* \"#utility.yul\":16739:16757   */\n      add\n        /* \"#utility.yul\":16732:16763   */\n      mstore\n        /* \"#utility.yul\":16783:16789   */\n      dup2\n        /* \"#utility.yul\":16818:16824   */\n      dup8\n        /* \"#utility.yul\":16812:16825   */\n      mload\n        /* \"#utility.yul\":16849:16855   */\n      dup1\n        /* \"#utility.yul\":16841:16847   */\n      dup5\n        /* \"#utility.yul\":16834:16856   */\n      mstore\n        /* \"#utility.yul\":16887:16890   */\n      0xc0\n        /* \"#utility.yul\":16876:16885   */\n      dup7\n        /* \"#utility.yul\":16872:16891   */\n      add\n        /* \"#utility.yul\":16865:16891   */\n      swap2\n      pop\n        /* \"#utility.yul\":16926:16928   */\n      dup3\n        /* \"#utility.yul\":16918:16924   */\n      dup10\n        /* \"#utility.yul\":16914:16929   */\n      add\n        /* \"#utility.yul\":16900:16929   */\n      swap4\n      pop\n        /* \"#utility.yul\":16947:16951   */\n      dup5\n        /* \"#utility.yul\":16960:17178   */\n    tag_927:\n        /* \"#utility.yul\":16974:16980   */\n      dup2\n        /* \"#utility.yul\":16971:16972   */\n      dup2\n        /* \"#utility.yul\":16968:16981   */\n      lt\n        /* \"#utility.yul\":16960:17178   */\n      iszero\n      tag_929\n      jumpi\n        /* \"#utility.yul\":17039:17052   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17035:17097   */\n      and\n        /* \"#utility.yul\":17023:17098   */\n      dup4\n      mstore\n        /* \"#utility.yul\":17153:17168   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":17118:17130   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":16996:16997   */\n      0x01\n        /* \"#utility.yul\":16989:16998   */\n      add\n        /* \"#utility.yul\":16960:17178   */\n      jump(tag_927)\n    tag_929:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17234:17289   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":17229:17231   */\n      0x60\n        /* \"#utility.yul\":17214:17232   */\n      dup6\n      add\n        /* \"#utility.yul\":17207:17290   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17321:17324   */\n      0x80\n        /* \"#utility.yul\":17306:17325   */\n      add\n        /* \"#utility.yul\":17299:17334   */\n      mstore\n        /* \"#utility.yul\":17195:17198   */\n      swap4\n        /* \"#utility.yul\":16582:17340   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17930:18058   */\n    tag_645:\n        /* \"#utility.yul\":17970:17973   */\n      0x00\n        /* \"#utility.yul\":18001:18002   */\n      dup3\n        /* \"#utility.yul\":17997:18003   */\n      not\n        /* \"#utility.yul\":17994:17995   */\n      dup3\n        /* \"#utility.yul\":17991:18004   */\n      gt\n        /* \"#utility.yul\":17988:17990   */\n      iszero\n      tag_934\n      jumpi\n        /* \"#utility.yul\":18007:18025   */\n      tag_934\n      tag_935\n      jump\t// in\n    tag_934:\n      pop\n        /* \"#utility.yul\":18043:18052   */\n      add\n      swap1\n        /* \"#utility.yul\":17978:18058   */\n      jump\t// out\n        /* \"#utility.yul\":18063:18183   */\n    tag_697:\n        /* \"#utility.yul\":18103:18104   */\n      0x00\n        /* \"#utility.yul\":18129:18130   */\n      dup3\n        /* \"#utility.yul\":18119:18121   */\n      tag_938\n      jumpi\n        /* \"#utility.yul\":18134:18152   */\n      tag_938\n      tag_939\n      jump\t// in\n    tag_938:\n      pop\n        /* \"#utility.yul\":18168:18177   */\n      div\n      swap1\n        /* \"#utility.yul\":18109:18183   */\n      jump\t// out\n        /* \"#utility.yul\":18188:18416   */\n    tag_695:\n        /* \"#utility.yul\":18228:18235   */\n      0x00\n        /* \"#utility.yul\":18354:18355   */\n      dup2\n        /* \"#utility.yul\":18286:18352   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18282:18356   */\n      div\n        /* \"#utility.yul\":18279:18280   */\n      dup4\n        /* \"#utility.yul\":18276:18357   */\n      gt\n        /* \"#utility.yul\":18271:18272   */\n      dup3\n        /* \"#utility.yul\":18264:18273   */\n      iszero\n        /* \"#utility.yul\":18257:18274   */\n      iszero\n        /* \"#utility.yul\":18253:18358   */\n      and\n        /* \"#utility.yul\":18250:18252   */\n      iszero\n      tag_942\n      jumpi\n        /* \"#utility.yul\":18361:18379   */\n      tag_942\n      tag_935\n      jump\t// in\n    tag_942:\n      pop\n        /* \"#utility.yul\":18401:18410   */\n      mul\n      swap1\n        /* \"#utility.yul\":18240:18416   */\n      jump\t// out\n        /* \"#utility.yul\":18421:18683   */\n    tag_431:\n        /* \"#utility.yul\":18460:18467   */\n      0x00\n        /* \"#utility.yul\":18492:18502   */\n      0xffffffff\n        /* \"#utility.yul\":18529:18531   */\n      dup1\n        /* \"#utility.yul\":18526:18527   */\n      dup4\n        /* \"#utility.yul\":18522:18532   */\n      and\n        /* \"#utility.yul\":18559:18561   */\n      dup2\n        /* \"#utility.yul\":18556:18557   */\n      dup6\n        /* \"#utility.yul\":18552:18562   */\n      and\n        /* \"#utility.yul\":18615:18618   */\n      dup2\n        /* \"#utility.yul\":18611:18613   */\n      dup4\n        /* \"#utility.yul\":18607:18619   */\n      div\n        /* \"#utility.yul\":18602:18605   */\n      dup2\n        /* \"#utility.yul\":18599:18620   */\n      gt\n        /* \"#utility.yul\":18592:18595   */\n      dup3\n        /* \"#utility.yul\":18585:18596   */\n      iszero\n        /* \"#utility.yul\":18578:18597   */\n      iszero\n        /* \"#utility.yul\":18574:18621   */\n      and\n        /* \"#utility.yul\":18571:18573   */\n      iszero\n      tag_945\n      jumpi\n        /* \"#utility.yul\":18624:18642   */\n      tag_945\n      tag_935\n      jump\t// in\n    tag_945:\n        /* \"#utility.yul\":18664:18677   */\n      mul\n      swap5\n        /* \"#utility.yul\":18472:18683   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18688:18813   */\n    tag_686:\n        /* \"#utility.yul\":18728:18732   */\n      0x00\n        /* \"#utility.yul\":18756:18757   */\n      dup3\n        /* \"#utility.yul\":18753:18754   */\n      dup3\n        /* \"#utility.yul\":18750:18758   */\n      lt\n        /* \"#utility.yul\":18747:18749   */\n      iszero\n      tag_948\n      jumpi\n        /* \"#utility.yul\":18761:18779   */\n      tag_948\n      tag_935\n      jump\t// in\n    tag_948:\n      pop\n        /* \"#utility.yul\":18798:18807   */\n      sub\n      swap1\n        /* \"#utility.yul\":18737:18813   */\n      jump\t// out\n        /* \"#utility.yul\":18818:18930   */\n    tag_484:\n        /* \"#utility.yul\":18850:18851   */\n      0x00\n        /* \"#utility.yul\":18876:18877   */\n      dup3\n        /* \"#utility.yul\":18866:18868   */\n      tag_951\n      jumpi\n        /* \"#utility.yul\":18881:18899   */\n      tag_951\n      tag_939\n      jump\t// in\n    tag_951:\n      pop\n        /* \"#utility.yul\":18915:18924   */\n      mod\n      swap1\n        /* \"#utility.yul\":18856:18930   */\n      jump\t// out\n        /* \"#utility.yul\":18935:19128   */\n    tag_442:\n        /* \"#utility.yul\":18970:18973   */\n      0x00\n        /* \"#utility.yul\":19001:19067   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18994:18999   */\n      dup3\n        /* \"#utility.yul\":18991:19068   */\n      eq\n        /* \"#utility.yul\":18988:18990   */\n      iszero\n      tag_954\n      jumpi\n        /* \"#utility.yul\":19071:19089   */\n      tag_954\n      tag_935\n      jump\t// in\n    tag_954:\n        /* \"#utility.yul\":19107:19122   */\n      sub\n      swap1\n        /* \"#utility.yul\":18978:19128   */\n      jump\t// out\n        /* \"#utility.yul\":19133:19317   */\n    tag_935:\n        /* \"#utility.yul\":19185:19262   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19182:19183   */\n      0x00\n        /* \"#utility.yul\":19175:19263   */\n      mstore\n        /* \"#utility.yul\":19282:19286   */\n      0x11\n        /* \"#utility.yul\":19279:19280   */\n      0x04\n        /* \"#utility.yul\":19272:19287   */\n      mstore\n        /* \"#utility.yul\":19306:19310   */\n      0x24\n        /* \"#utility.yul\":19303:19304   */\n      0x00\n        /* \"#utility.yul\":19296:19311   */\n      revert\n        /* \"#utility.yul\":19322:19506   */\n    tag_939:\n        /* \"#utility.yul\":19374:19451   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19371:19372   */\n      0x00\n        /* \"#utility.yul\":19364:19452   */\n      mstore\n        /* \"#utility.yul\":19471:19475   */\n      0x12\n        /* \"#utility.yul\":19468:19469   */\n      0x04\n        /* \"#utility.yul\":19461:19476   */\n      mstore\n        /* \"#utility.yul\":19495:19499   */\n      0x24\n        /* \"#utility.yul\":19492:19493   */\n      0x00\n        /* \"#utility.yul\":19485:19500   */\n      revert\n        /* \"#utility.yul\":19511:19665   */\n    tag_848:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19590:19595   */\n      dup2\n        /* \"#utility.yul\":19586:19640   */\n      and\n        /* \"#utility.yul\":19579:19584   */\n      dup2\n        /* \"#utility.yul\":19576:19641   */\n      eq\n        /* \"#utility.yul\":19566:19568   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":19655:19656   */\n      0x00\n        /* \"#utility.yul\":19652:19653   */\n      dup1\n        /* \"#utility.yul\":19645:19657   */\n      revert\n        /* \"#utility.yul\":19670:19788   */\n    tag_869:\n        /* \"#utility.yul\":19756:19761   */\n      dup1\n        /* \"#utility.yul\":19749:19762   */\n      iszero\n        /* \"#utility.yul\":19742:19763   */\n      iszero\n        /* \"#utility.yul\":19735:19740   */\n      dup2\n        /* \"#utility.yul\":19732:19764   */\n      eq\n        /* \"#utility.yul\":19722:19724   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":19778:19779   */\n      0x00\n        /* \"#utility.yul\":19775:19776   */\n      dup1\n        /* \"#utility.yul\":19768:19780   */\n      revert\n        /* \"#utility.yul\":19793:19914   */\n    tag_878:\n        /* \"#utility.yul\":19878:19888   */\n      0xffffffff\n        /* \"#utility.yul\":19871:19876   */\n      dup2\n        /* \"#utility.yul\":19867:19889   */\n      and\n        /* \"#utility.yul\":19860:19865   */\n      dup2\n        /* \"#utility.yul\":19857:19890   */\n      eq\n        /* \"#utility.yul\":19847:19849   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":19904:19905   */\n      0x00\n        /* \"#utility.yul\":19901:19902   */\n      dup1\n        /* \"#utility.yul\":19894:19906   */\n      revert\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n\n    auxdata: 0xa2646970667358221220d445ba2fdba51cb8d3ee4bed2cedb6e9cd1b69c0317a471ad158af8fc12f109b64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2206:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "150:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "158:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "176:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "195:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "189:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "180:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "268:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "277:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "285:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "270:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "270:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "270:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "227:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "238:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "253:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "258:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "249:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "249:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "262:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "245:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "245:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "224:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "224:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "217:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "217:50:1"
															},
															"nodeType": "YulIf",
															"src": "214:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "303:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "313:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "303:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:310:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "407:219:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "453:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "462:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "455:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "455:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "428:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "437:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "424:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:32:1"
															},
															"nodeType": "YulIf",
															"src": "417:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "488:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "507:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "501:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "501:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "492:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "579:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "587:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "572:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "539:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "560:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "553:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "553:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "536:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "536:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:40:1"
															},
															"nodeType": "YulIf",
															"src": "526:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "605:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "615:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "605:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "373:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "384:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "396:6:1",
														"type": ""
													}
												],
												"src": "329:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "760:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "770:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "782:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "793:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "770:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "805:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "823:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "828:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "819:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "832:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "815:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "809:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "865:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "873:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "861:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "843:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "908:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "893:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "917:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "925:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "886:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "721:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "732:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "740:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "751:4:1",
														"type": ""
													}
												],
												"src": "631:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1069:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1091:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1087:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1136:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1152:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1157:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1148:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1161:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1144:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1144:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1132:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1114:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1114:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1196:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1181:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1201:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1174:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1030:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1041:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1049:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1060:4:1",
														"type": ""
													}
												],
												"src": "940:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1393:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1433:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1483:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1494:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1479:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1499:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1565:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1570:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1543:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1584:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1596:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1607:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1592:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1584:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1384:4:1",
														"type": ""
													}
												],
												"src": "1219:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1796:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1813:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1824:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1806:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1806:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1847:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1843:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1863:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1836:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1897:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1882:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1902:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1968:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1953:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1973:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1946:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1946:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1989:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2001:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1989:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1773:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1787:4:1",
														"type": ""
													}
												],
												"src": "1622:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2128:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2138:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2150:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2161:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2146:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2138:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2180:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2097:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2108:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2119:4:1",
														"type": ""
													}
												],
												"src": "2027:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x2386F2AB5BCA00 PUSH1 0x7 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x9 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SSTORE PUSH1 0x0 PUSH1 0xB SSTORE PUSH1 0xB SLOAD PUSH1 0xC SSTORE PUSH1 0x0 PUSH1 0xD SSTORE PUSH1 0xD SLOAD PUSH1 0xE SSTORE PUSH1 0x0 PUSH1 0xF SSTORE PUSH1 0xF SLOAD PUSH1 0x10 SSTORE PUSH1 0x0 PUSH1 0x11 SSTORE PUSH1 0x11 SLOAD PUSH1 0x12 SSTORE PUSH1 0x0 PUSH1 0x13 SSTORE PUSH1 0x13 SLOAD PUSH1 0x14 SSTORE PUSH1 0x0 PUSH1 0x15 SSTORE PUSH1 0x15 SLOAD PUSH1 0x16 SSTORE PUSH1 0x0 PUSH1 0x17 SSTORE PUSH1 0x17 SLOAD PUSH1 0x18 SSTORE PUSH1 0x0 PUSH1 0x19 SSTORE PUSH3 0x87 PUSH3 0x41D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SLOAD PUSH1 0x22 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP1 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x23 DUP1 SLOAD DUP3 AND DUP4 OR SWAP1 SSTORE PUSH1 0x24 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0x101010000 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x25 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0x10ED43C718714EB63D5AA57B78B54704E256024E SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH3 0x171 ADDRESS DUP3 PUSH8 0xDE0B6B3A7640000 PUSH3 0x42C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1E6 SWAP2 SWAP1 PUSH3 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x244 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x26A SWAP2 SWAP1 PUSH3 0x558 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x2C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2EE SWAP2 SWAP1 PUSH3 0x558 JUMP JUMPDEST PUSH1 0x26 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x38C SWAP2 SWAP1 PUSH3 0x588 JUMP JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x27 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE ADDRESS DUP6 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x5AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x48B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x56A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x581 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x59A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x581 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3C89 DUP1 PUSH3 0x5BA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x385 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88790A68 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xCAB03471 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xE315A6DA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF480FEC2 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF480FEC2 EQ PUSH2 0xADB JUMPI DUP1 PUSH4 0xFE0BB982 EQ PUSH2 0xAFB JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0xB1B JUMPI DUP1 PUSH4 0xFFECF516 EQ PUSH2 0xB35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE315A6DA EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0xE4BF1BED EQ PUSH2 0xA7B JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD55CB78A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD55CB78A EQ PUSH2 0x9CA JUMPI DUP1 PUSH4 0xDB0045EC EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0xDC44B6A0 EQ PUSH2 0x9FF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCAB03471 EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0xCDB3858F EQ PUSH2 0x98A JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xC469B6DD GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xC469B6DD EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xC5D24189 EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x8F9 JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x90F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x898 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9491F94D GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0x99A7B9BC EQ PUSH2 0x823 JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 EQ PUSH2 0x77F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x795 JUMPI DUP1 PUSH4 0x8E360253 EQ PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E GT PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x6C0A24EB GT PUSH2 0x254 JUMPI DUP1 PUSH4 0x729CB3F2 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x729CB3F2 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0x72B2AECC EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0x80670F3C EQ PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x437823EC GT PUSH2 0x290 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x5FECD926 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x6AABFF3F EQ PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x3E0F966D EQ PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 GT PUSH2 0x323 JUMPI DUP1 PUSH4 0x29409395 GT PUSH2 0x2FD JUMPI DUP1 PUSH4 0x29409395 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x301AD558 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x323BE1C5 EQ PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x2843631D EQ PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14EB76AC GT PUSH2 0x35F JUMPI DUP1 PUSH4 0x14EB76AC EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x2369BF83 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A6C43B EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x38C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4761696E5A696C6C610000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x39C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x3846 JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x3A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3806 JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1015 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x10D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x26 SLOAD PUSH2 0x62E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x124F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x6C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x12EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x70C CALLDATASIZE PUSH1 0x4 PUSH2 0x38C0 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1A SLOAD PUSH2 0x74E SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x145C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x14D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x1539 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH32 0x5241575200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1707 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x858 PUSH2 0x853 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x893 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x183A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3846 JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x18A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD PUSH2 0x945 SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x191F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x19B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1A23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0xA30 CALLDATASIZE PUSH1 0x4 PUSH2 0x37CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA76 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x1B3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA96 CALLDATASIZE PUSH1 0x4 PUSH2 0x3990 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1D57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1DD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3990 JUMP JUMPDEST PUSH2 0x1EB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xB16 CALLDATASIZE PUSH1 0x4 PUSH2 0x388D JUMP JUMPDEST PUSH2 0x205D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xB50 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 CALLER DUP5 DUP5 PUSH2 0x22B5 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 DUP5 DUP5 DUP5 PUSH2 0x240D JUMP JUMPDEST PUSH2 0xCF8 DUP5 CALLER PUSH2 0xCF3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C2C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0xD70 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E8 PUSH2 0x2B7C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E3125 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206F6620737570706C7900000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C20746F20746F74616C537570706C7900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF55 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xF78 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x3871 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F74206265207061757365640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x141D DUP2 PUSH1 0x3C PUSH2 0x3B0B JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x0 SWAP1 PUSH2 0x146C JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1476 PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x14B3 JUMPI PUSH1 0x1D SLOAD PUSH2 0x14A5 SWAP1 PUSH2 0x149F PUSH2 0x3E8 PUSH2 0x1499 DUP4 DUP7 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 PUSH2 0x2C07 JUMP JUMPDEST SWAP1 PUSH2 0x2B7C JUMP JUMPDEST PUSH2 0x14AE SWAP1 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH2 0x14CA SWAP1 PUSH2 0x149F PUSH2 0x3E8 PUSH2 0x1499 DUP6 DUP5 PUSH2 0x2BC5 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x152A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x26 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x158C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C4 SWAP2 SWAP1 PUSH2 0x38ED JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 EQ DUP1 PUSH2 0x15F6 JUMPI POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x1604 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDFE168100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1675 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x37B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16D6 JUMPI PUSH2 0x16D1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH2 0x149F SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C07 JUMP JUMPDEST PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x1700 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH2 0x149F SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C07 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0x17B9 JUMPI PUSH1 0x0 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17DC SWAP1 TIMESTAMP PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP PUSH2 0x17EB DUP2 PUSH3 0x15180 PUSH2 0x2B7C JUMP JUMPDEST SWAP5 POP PUSH2 0x17FA PUSH3 0x15180 DUP3 PUSH2 0x3B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x1808 DUP2 PUSH2 0xE10 PUSH2 0x2B7C JUMP JUMPDEST SWAP4 POP PUSH2 0x1816 PUSH2 0xE10 DUP3 PUSH2 0x3B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x1823 DUP2 PUSH1 0x3C PUSH2 0x2B7C JUMP JUMPDEST SWAP3 POP PUSH2 0x1830 PUSH1 0x3C DUP3 PUSH2 0x3B4E JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 CALLER DUP5 DUP5 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1900 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x12EB JUMPI PUSH2 0x12EB DUP2 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0C DUP3 PUSH2 0x1C06 DUP6 DUP2 DUP10 DUP10 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F66206275792066656573206D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7220657175616C20746F20323525000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1CDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xE DUP6 SWAP1 SSTORE PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x10 DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x12EB DUP2 PUSH2 0x2F3E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1D DUP3 PUSH2 0x1C06 DUP6 DUP2 DUP10 DUP10 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1F96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F662073656C6C2066656573206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E206F7220657175616C20746F203235250000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x15 DUP6 SWAP1 SSTORE PUSH1 0x11 DUP5 SWAP1 SSTORE PUSH1 0x17 DUP4 SWAP1 SSTORE PUSH1 0x13 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP6 SWAP1 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x18 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1 SWAP1 PUSH1 0x80 ADD PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0xFFFF AND LT PUSH2 0x2132 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547269676765722070657263656E74616765206D757374206265203C20313030 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3020283130302529000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 AND DUP4 ISZERO DUP1 ISZERO PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FF AND SWAP2 SWAP1 SWAP2 OR PUSH2 0x100 PUSH2 0xFFFF DUP6 AND MUL OR SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0x219B JUMPI POP PUSH1 0x1D SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 PUSH2 0x21AA PUSH2 0x1539 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1010 JUMPI PUSH1 0x1D SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2292 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573736573000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2330 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x23AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x257B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x258F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x25BE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x25D3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x25E8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x2AE8 JUMPI PUSH1 0x28 SLOAD PUSH1 0xFF AND PUSH2 0x263F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206973206E6F74206163746976650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x266A JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2787 JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x267E SWAP2 PUSH2 0x2EDF JUMP JUMPDEST TIMESTAMP GT PUSH2 0x26A7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2787 JUMPI PUSH1 0x7 SLOAD PUSH2 0x26ED DUP4 PUSH2 0x1C06 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2787 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x27AD JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x27C6 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x29D7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x280B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726F6E672048616E64732050726F746F636F6C2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x289F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x3AA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x291F JUMPI PUSH1 0x1E SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x291F PUSH2 0x2FA6 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x29D5 JUMPI DUP1 ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x0 PUSH2 0x2963 PUSH1 0x11 SLOAD PUSH2 0x1C06 PUSH1 0x13 SLOAD PUSH2 0x1C06 PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x0 PUSH2 0x299E PUSH2 0x2991 PUSH1 0x11 SLOAD PUSH2 0x1C06 PUSH1 0x13 SLOAD PUSH2 0x1C06 PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x149F SWAP1 DUP6 PUSH2 0x2C07 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x29B6 JUMPI PUSH2 0x29B3 DUP4 DUP4 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x29C0 DUP3 DUP3 PUSH2 0x3055 JUMP JUMPDEST POP POP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x29D3 JUMPI PUSH2 0x29D3 SELFBALANCE PUSH2 0x30E5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2A03 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2AE8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2AE8 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2A4E DUP4 PUSH2 0x1C06 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x2B27 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x2B30 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x2B3C DUP5 DUP5 DUP5 DUP5 PUSH2 0x3225 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2B66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0x39C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2B73 DUP5 DUP7 PUSH2 0x3B37 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBE DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x32C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBE DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C16 JUMPI POP PUSH1 0x0 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP4 DUP6 PUSH2 0x3ACE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2C2F DUP6 DUP4 PUSH2 0x3ABA JUMP JUMPDEST EQ PUSH2 0x2BBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D2A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x25 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DCF SWAP2 SWAP1 PUSH2 0x37B2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E09 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x25 SLOAD PUSH2 0x2E2F SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2E81 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x3A32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EEC DUP4 DUP6 PUSH2 0x3AA2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2BBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB0 PUSH2 0x1539 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2FBA JUMPI POP JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 GT ISZERO PUSH2 0x2FD3 JUMPI PUSH1 0x1D SSTORE PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x0 SWAP2 PUSH2 0x3003 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x149F SWAP2 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x2FFD SWAP1 DUP5 PUSH2 0x2C07 JUMP JUMPDEST SWAP1 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x3021 JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1D SLOAD PUSH1 0x1F SSTORE JUMPDEST PUSH1 0x1E SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x3040 JUMPI POP PUSH1 0x1F SLOAD PUSH2 0x303C SWAP1 PUSH1 0x2 PUSH2 0x2C07 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x12E9 JUMPI POP PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1D SSTORE JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x308E DUP4 PUSH1 0x2 PUSH2 0x2B7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x309C DUP5 DUP4 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x30B1 PUSH2 0x30AC DUP6 DUP6 PUSH2 0x2EDF JUMP JUMPDEST PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30BD SELFBALANCE DUP4 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAF DUP4 PUSH2 0x30E0 PUSH2 0x30D6 DUP9 DUP9 PUSH2 0x2EDF JUMP JUMPDEST PUSH2 0x149F DUP6 DUP10 PUSH2 0x2C07 JUMP JUMPDEST PUSH2 0x32F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3104 PUSH1 0x17 SLOAD PUSH2 0x1C06 PUSH1 0x13 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 PUSH2 0x3127 DUP3 PUSH2 0x149F PUSH1 0x15 SLOAD DUP7 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3144 DUP4 PUSH2 0x149F PUSH1 0x17 SLOAD DUP8 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3156 DUP3 PUSH2 0x2FFD DUP8 DUP7 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x319A JUMPI PUSH1 0x21 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3198 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x31DC JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x31DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x321E JUMPI PUSH1 0x23 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x321C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x3283 JUMPI PUSH2 0x3283 PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xA SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xC SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE DUP2 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x16 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x17 DUP1 SLOAD PUSH1 0x18 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x14 SSTORE SWAP3 DUP5 SWAP1 SSTORE SWAP1 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x328E DUP5 DUP5 DUP5 PUSH2 0x33C7 JUMP JUMPDEST PUSH2 0x2B3C PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0xA SLOAD PUSH1 0x9 SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0xC SLOAD PUSH1 0xB SSTORE PUSH1 0x16 SLOAD PUSH1 0x15 SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 SSTORE PUSH1 0x14 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x32E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0x39C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2B73 DUP5 DUP7 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH2 0x3309 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x24 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF305D719 SWAP1 DUP4 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x338E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x321E SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x33F9 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x3424 JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3498 JUMPI PUSH2 0x3444 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0xD SLOAD DUP6 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x345F SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF SLOAD PUSH2 0x3477 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x3492 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x34C3 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x3537 JUMPI PUSH2 0x34E3 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x15 SLOAD DUP6 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x34FE SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x17 SLOAD PUSH2 0x3516 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x3531 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3563 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3617 JUMPI PUSH2 0x358E PUSH1 0x64 PUSH2 0x149F PUSH1 0x19 SLOAD PUSH2 0x1499 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x15 SLOAD DUP10 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x35BD PUSH1 0x64 PUSH2 0x149F PUSH1 0x19 SLOAD PUSH2 0x1499 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x11 SLOAD DUP10 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x19 SLOAD PUSH1 0x17 SLOAD PUSH2 0x35E2 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x149F SWAP2 SWAP1 PUSH2 0x1499 SWAP1 PUSH2 0x3E8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3611 PUSH1 0x64 PUSH2 0x149F PUSH1 0x19 SLOAD PUSH2 0x1499 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x13 SLOAD DUP10 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x3646 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x2FFD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2FFD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2FFD DUP8 PUSH1 0x20 ADD MLOAD DUP10 PUSH2 0x2BC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x366E SWAP1 DUP4 PUSH2 0x2BC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 DUP7 AND DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x36A4 SWAP2 PUSH2 0x2EDF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3711 PUSH2 0x36FB DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x1C06 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1C06 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2EDF JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2BBE DUP2 PUSH2 0x3BF6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37C3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2BBE DUP2 PUSH2 0x3BF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37E0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x37EB DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x37FB DUP2 PUSH2 0x3BF6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x381A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3825 DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3835 DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3858 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3863 DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3882 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2BBE DUP2 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x389F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x38AA DUP2 PUSH2 0x3C0B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x37FB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38D2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x38DD DUP2 PUSH2 0x3C0B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x37FB DUP2 PUSH2 0x3C19 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3901 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x390A DUP5 PUSH2 0x3773 JUMP JUMPDEST SWAP3 POP PUSH2 0x3918 PUSH1 0x20 DUP6 ADD PUSH2 0x3773 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3928 DUP2 PUSH2 0x3C19 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3944 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3977 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39A5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x39D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x39FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A81 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3A5C JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB5 PUSH2 0x3B98 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3AC9 JUMPI PUSH2 0x3AC9 PUSH2 0x3BC7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3B06 JUMPI PUSH2 0x3B06 PUSH2 0x3B98 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3B2E JUMPI PUSH2 0x3B2E PUSH2 0x3B98 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3B49 JUMPI PUSH2 0x3B49 PUSH2 0x3B98 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B5D JUMPI PUSH2 0x3B5D PUSH2 0x3BC7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x3B94 JUMPI PUSH2 0x3B94 PUSH2 0x3B98 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 0xD4 GASLIMIT 0xBA 0x2F 0xDB 0xA5 SHR 0xB8 0xD3 0xEE 0x4B 0xED 0x2C 0xED 0xB6 0xE9 0xCD SHL PUSH10 0xC0317A471AD158AF8FC1 0x2F LT SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "8181:22370:0:-:0;;;8779:16;8745:50;;8834:15;8801:48;;8945:1;8911:35;;9014:16;;8971:59;;9070:1;9036:35;;9139:16;;9096:59;;9195:1;9161:35;;9264:16;;9221:59;;9315:1;9286:30;;9379:11;;9341:49;;9449:1;9414:36;;9519:17;;9475:61;;9577:1;9542:36;;9647:17;;9603:61;;9705:1;9670:36;;9775:17;;9731:61;;9828:1;9798:31;;9893:12;;9854:51;;9954:1;9911:44;;10619:7;:5;;;:7;;:::i;:::-;10567:60;;;-1:-1:-1;;;;;;10567:60:0;;;-1:-1:-1;;;;;10567:60:0;;;;;;;-1:-1:-1;3018:6:0;10633:55;;;3018:6;;;;10633:55;;;;;;;;10694:60;;;;;;;;;10760:55;;;;;;;;;;;10938:31;;;-1:-1:-1;;11078:31:0;;;;;11515:732;;;;;;;;;-1:-1:-1;2823:17:0;2865:18;;-1:-1:-1;;;;;;2865:18:0;818:10;2865:18;;;;;2898:43;;818:10;;;;2898:43;;2823:17;;2898:43;-1:-1:-1;11649:15:0;:34;;-1:-1:-1;;;;;;11649:34:0;11596:42;11649:34;;;;;;11693:58;11710:4;11596:42;8636:18;11693:8;:58::i;:::-;11795:16;-1:-1:-1;;;;;11795:24:0;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11777:56:0;;11842:4;11849:16;-1:-1:-1;;;;;11849:21:0;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11777:96;;-1:-1:-1;;;;;;11777:96:0;;;;;;;-1:-1:-1;;;;;861:15:1;;;11777:96:0;;;843:34:1;913:15;;893:18;;;886:43;778:18;;11777:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11761:13;:112;;-1:-1:-1;;;;;;11761:112:0;-1:-1:-1;;;;;11761:112:0;;;;;;;;;11921:15;;11883:73;;-1:-1:-1;;;11883:73:0;;11921:15;;11883:73;;;1114:51:1;-1:-1:-1;;1181:18:1;;;1174:34;11761:112:0;11883:29;;1087:18:1;;11883:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8636:18:0;11967:12;:22;;;818:10;12055:23;;;;:9;:23;;;;;;;;:33;;;3018:6;;-1:-1:-1;;;;;3018:6:0;12098:27;;:18;:27;;;;;:34;;12128:4;-1:-1:-1;;12098:34:0;;;;;;;;12169:4;12142:33;;;;;:40;;;;;;;;;;12197:43;2173:25:1;;;818:10:0;;12055:23;;12197:43;;2146:18:1;12197:43:0;;;;;;;11515:732;8181:22370;;2954:77;2992:7;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77::o;14855:330::-;-1:-1:-1;;;;;14947:19:0;;14939:68;;;;-1:-1:-1;;;14939:68:0;;1824:2:1;14939:68:0;;;1806:21:1;1863:2;1843:18;;;1836:30;1902:34;1882:18;;;1875:62;-1:-1:-1;;;1953:18:1;;;1946:34;1997:19;;14939:68:0;;;;;;;;;-1:-1:-1;;;;;15025:21:0;;15017:68;;;;-1:-1:-1;;;15017:68:0;;1421:2:1;15017:68:0;;;1403:21:1;1460:2;1440:18;;;1433:30;1499:34;1479:18;;;1472:62;-1:-1:-1;;;1550:18:1;;;1543:32;1592:19;;15017:68:0;1393:224:1;15017:68:0;-1:-1:-1;;;;;15095:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15146:32;;2173:25:1;;;15146:32:0;;2146:18:1;15146:32:0;;;;;;;14855:330;;;:::o;14:310:1:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:1;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:1:o;329:297::-;396:6;449:2;437:9;428:7;424:23;420:32;417:2;;;470:6;462;455:22;417:2;507:9;501:16;560:5;553:13;546:21;539:5;536:32;526:2;;587:6;579;572:22;2128:76;8181:22370:0;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19916:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "180:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "189:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "192:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "182:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "182:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "146:30:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:42:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:53:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:61:1"
															},
															"nodeType": "YulIf",
															"src": "115:2:1"
														}
													]
												},
												"name": "abi_decode_uint112_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:188:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "277:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "323:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "332:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "340:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "325:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "325:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "325:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "298:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "307:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "294:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:32:1"
															},
															"nodeType": "YulIf",
															"src": "287:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "358:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "384:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "371:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "371:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "362:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "403:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "403:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "403:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "443:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "453:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "243:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "254:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "266:6:1",
														"type": ""
													}
												],
												"src": "207:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "550:180:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "596:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "605:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "613:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "598:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "598:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "598:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "571:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "580:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "592:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "563:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:32:1"
															},
															"nodeType": "YulIf",
															"src": "560:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "631:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "650:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "644:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "644:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "635:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "694:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "669:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "669:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "669:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "709:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "719:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "709:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "516:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "527:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "539:6:1",
														"type": ""
													}
												],
												"src": "469:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "813:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "859:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "868:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "876:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "861:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "861:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "861:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "834:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "843:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "830:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "830:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "855:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:32:1"
															},
															"nodeType": "YulIf",
															"src": "823:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "894:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "907:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "898:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "964:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "939:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "939:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "939:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "979:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "989:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "979:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "779:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "790:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "802:6:1",
														"type": ""
													}
												],
												"src": "735:265:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1092:311:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1138:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1155:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1140:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1140:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1140:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1109:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:32:1"
															},
															"nodeType": "YulIf",
															"src": "1102:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1173:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1199:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1186:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1177:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1243:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1218:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1218:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1258:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1268:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1282:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1314:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1325:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1310:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1297:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1297:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1286:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1363:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1338:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1338:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1338:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1380:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1390:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1050:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1061:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1073:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1081:6:1",
														"type": ""
													}
												],
												"src": "1005:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1512:362:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1558:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1567:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "1575:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1560:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1560:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1560:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1533:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1542:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1529:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1554:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:32:1"
															},
															"nodeType": "YulIf",
															"src": "1522:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1593:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1619:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1597:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1663:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1638:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1678:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1688:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1702:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1706:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1783:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1758:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1800:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1810:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1826:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1864:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1849:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1836:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1462:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1473:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1485:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1493:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1501:6:1",
														"type": ""
													}
												],
												"src": "1408:466:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1966:238:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2012:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2021:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2029:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2014:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1987:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1996:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1983:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2008:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1979:32:1"
															},
															"nodeType": "YulIf",
															"src": "1976:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2047:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2060:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2051:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2117:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2092:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2092:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2132:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2142:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2156:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2183:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2179:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2166:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2156:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1924:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1935:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1955:6:1",
														"type": ""
													}
												],
												"src": "1879:325:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2287:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2333:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2342:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2350:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2335:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2335:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2308:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2317:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2329:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2300:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2300:32:1"
															},
															"nodeType": "YulIf",
															"src": "2297:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2368:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2387:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2381:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2372:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2428:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2406:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2406:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2443:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2453:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2253:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2264:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2276:6:1",
														"type": ""
													}
												],
												"src": "2209:255:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2552:346:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2607:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2615:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2600:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2573:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2582:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2569:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2594:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2565:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2565:32:1"
															},
															"nodeType": "YulIf",
															"src": "2562:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2633:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2659:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2646:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2646:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2637:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2700:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2678:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2678:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2678:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2715:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2725:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2715:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2739:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2782:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2754:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2754:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2743:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2840:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2849:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "2857:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2842:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2842:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2842:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "2808:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "2821:7:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2830:6:1",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2817:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2817:20:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2805:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2805:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:41:1"
															},
															"nodeType": "YulIf",
															"src": "2795:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2875:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2885:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2875:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2510:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2521:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2533:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2541:6:1",
														"type": ""
													}
												],
												"src": "2469:429:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:307:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3032:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3041:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3049:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3034:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3034:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3034:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3007:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3016:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3003:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3003:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3028:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2999:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:32:1"
															},
															"nodeType": "YulIf",
															"src": "2996:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3067:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3093:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3080:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3080:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3071:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3112:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3112:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3149:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3159:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3173:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3216:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3201:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3188:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "3177:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "3253:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "3229:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3270:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "3280:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3270:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2944:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2955:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2967:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2975:6:1",
														"type": ""
													}
												],
												"src": "2903:390:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:315:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3458:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3467:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3475:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3460:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3460:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3433:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3442:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3429:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3429:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3425:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3425:32:1"
															},
															"nodeType": "YulIf",
															"src": "3422:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3493:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3533:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3503:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3493:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3552:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3596:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3607:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3592:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3592:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint112_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3562:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3562:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3620:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3643:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3654:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3639:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3633:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3624:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3691:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "3667:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3667:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3667:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3706:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3716:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3706:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3362:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3373:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3385:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3393:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3401:6:1",
														"type": ""
													}
												],
												"src": "3298:429:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3802:120:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3848:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3857:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3865:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3850:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3850:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3850:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3823:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3832:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3819:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3815:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:32:1"
															},
															"nodeType": "YulIf",
															"src": "3812:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3883:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3906:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3893:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3768:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3779:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3791:6:1",
														"type": ""
													}
												],
												"src": "3732:190:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4008:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4054:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4063:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4071:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4056:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4038:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4050:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:32:1"
															},
															"nodeType": "YulIf",
															"src": "4018:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4089:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4105:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4099:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4099:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4089:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3974:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3985:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3997:6:1",
														"type": ""
													}
												],
												"src": "3927:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4241:201:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4287:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4296:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4304:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4289:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4289:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4289:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4262:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4271:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4283:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4254:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:32:1"
															},
															"nodeType": "YulIf",
															"src": "4251:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4338:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4332:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4332:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4322:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4357:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4377:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4388:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4373:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4367:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4367:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4401:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4432:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4417:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4411:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4411:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4191:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4202:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4214:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4222:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4230:6:1",
														"type": ""
													}
												],
												"src": "4126:316:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4568:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4615:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4624:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4632:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4617:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4617:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4617:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4589:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4598:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4585:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4610:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4581:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4581:33:1"
															},
															"nodeType": "YulIf",
															"src": "4578:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4650:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4660:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4650:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4730:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4715:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4702:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4743:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4770:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4781:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4766:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4766:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4753:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4753:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4743:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4794:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4821:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4832:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4817:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4817:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4804:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4804:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4510:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4521:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4533:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4541:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4549:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4557:6:1",
														"type": ""
													}
												],
												"src": "4447:395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4948:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4958:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4970:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4981:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4966:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4966:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4958:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5000:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5015:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5023:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5011:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4993:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4993:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4917:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4928:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4939:4:1",
														"type": ""
													}
												],
												"src": "4847:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5207:168:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5217:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5229:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5240:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5225:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5217:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5259:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5274:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5282:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5270:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5252:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5346:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5357:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5342:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5362:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5335:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5335:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5168:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5179:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5187:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5198:4:1",
														"type": ""
													}
												],
												"src": "5078:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5645:373:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5655:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5667:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5678:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5663:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5663:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5655:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5691:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5701:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5695:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5759:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5774:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5782:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5770:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5770:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5752:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5752:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5806:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5817:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5802:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5802:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5822:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5795:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5795:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5849:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5860:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5845:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5845:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5865:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5838:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5838:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5892:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5903:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5888:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5908:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5881:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5935:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5946:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5931:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5931:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "5956:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5964:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5952:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5924:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5924:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5999:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "6005:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5574:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5585:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5593:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5601:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5609:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5617:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5625:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5636:4:1",
														"type": ""
													}
												],
												"src": "5380:638:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6118:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6128:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6140:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6128:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6170:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6195:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6188:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6188:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6181:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6181:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6163:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6163:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6087:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6098:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6109:4:1",
														"type": ""
													}
												],
												"src": "6023:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6414:295:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6424:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6436:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6447:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6432:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6432:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6424:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6467:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6492:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6485:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6485:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6478:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6478:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6460:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6521:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6532:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6517:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6541:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6549:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6537:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6510:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6510:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6577:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6588:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6573:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6573:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6593:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6566:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6566:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6620:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6631:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6616:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6616:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "6650:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6643:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6643:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6636:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6636:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6609:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6609:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6609:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6690:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6675:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6696:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6668:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6351:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6362:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6370:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6378:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6386:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6394:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6405:4:1",
														"type": ""
													}
												],
												"src": "6215:494:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6835:152:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6845:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6857:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6868:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6853:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6853:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6845:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6887:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6912:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6905:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6905:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6898:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6898:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6880:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6880:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6941:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6952:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6937:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6961:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6969:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6957:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6930:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6930:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6796:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6807:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6815:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6826:4:1",
														"type": ""
													}
												],
												"src": "6714:273:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7091:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7101:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7113:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7124:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7109:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7109:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7101:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7143:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7154:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7136:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7136:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7060:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7071:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7082:4:1",
														"type": ""
													}
												],
												"src": "6992:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7293:541:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7303:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7313:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7307:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7331:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7342:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7324:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7324:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7354:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7374:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7368:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7358:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7401:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7412:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7397:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7417:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7433:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7442:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7437:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7505:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7534:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7545:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7530:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7530:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7549:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7526:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7526:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "7568:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "7576:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7564:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7564:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7580:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7560:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7560:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7554:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7554:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7519:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7519:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7466:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7469:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7463:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7477:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7479:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7488:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7491:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7484:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7484:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7479:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7459:3:1",
																"statements": []
															},
															"src": "7455:140:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7629:69:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "7658:9:1"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "7669:6:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7654:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7654:22:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7678:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7650:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7650:31:1"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "7683:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7643:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7643:45:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7643:45:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7610:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7607:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:13:1"
															},
															"nodeType": "YulIf",
															"src": "7604:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7707:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7723:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7742:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7750:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7738:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7738:15:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7755:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7734:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7734:88:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7719:104:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7825:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7715:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7715:113:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7707:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7262:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7273:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7284:4:1",
														"type": ""
													}
												],
												"src": "7172:662:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8013:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8030:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8023:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8023:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8023:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8064:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8075:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8060:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8080:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8053:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8114:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8099:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8119:32:1",
																		"type": "",
																		"value": "this contract cannot be paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8092:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8092:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8161:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8173:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8184:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8169:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8169:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8161:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7990:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8004:4:1",
														"type": ""
													}
												],
												"src": "7839:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8372:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8389:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8400:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8382:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8382:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8382:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8423:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8434:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8419:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8419:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8439:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8412:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8412:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8412:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8473:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8458:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8478:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8451:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8451:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8533:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8544:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8529:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8529:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8549:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8522:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8522:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8564:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8576:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8587:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8572:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8572:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8564:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8349:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8363:4:1",
														"type": ""
													}
												],
												"src": "8198:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8776:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8793:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8804:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8786:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8786:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8827:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8838:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8823:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8843:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8816:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8816:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8816:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8866:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8877:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8862:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8882:34:1",
																		"type": "",
																		"value": "Sum of buy fees must be less tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8855:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8855:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8855:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8937:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8948:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8933:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8953:19:1",
																		"type": "",
																		"value": "n or equal to 25%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8926:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8926:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8982:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8994:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9005:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8990:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8990:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8982:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8753:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8767:4:1",
														"type": ""
													}
												],
												"src": "8602:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9194:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9211:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9222:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9204:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9204:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9256:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9241:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9261:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9234:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9234:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9295:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9280:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9300:23:1",
																		"type": "",
																		"value": "Trading is not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9273:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9273:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9333:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9345:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9356:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9341:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9333:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9171:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9185:4:1",
														"type": ""
													}
												],
												"src": "9020:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9544:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9561:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9554:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9554:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9595:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9606:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9591:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9611:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9584:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9584:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9645:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9630:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9650:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9623:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9623:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9623:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9716:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9701:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9721:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9694:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9739:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9751:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9762:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9747:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9747:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9739:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9521:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9535:4:1",
														"type": ""
													}
												],
												"src": "9370:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9951:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9968:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9979:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9961:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10002:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10013:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9998:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10018:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9991:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9991:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9991:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10041:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10052:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10037:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10037:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10057:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10030:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10030:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10030:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10112:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10123:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10108:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10108:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10128:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10101:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10101:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10101:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10142:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10154:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10165:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10150:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10142:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9928:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9942:4:1",
														"type": ""
													}
												],
												"src": "9777:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10354:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10371:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10382:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10364:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10364:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10405:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10416:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10401:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10401:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10421:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10394:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10455:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10440:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10460:30:1",
																		"type": "",
																		"value": "Strong Hands Protocol active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10433:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10433:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10500:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10512:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10523:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10508:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10508:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10500:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10331:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10345:4:1",
														"type": ""
													}
												],
												"src": "10180:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10711:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10728:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10739:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10721:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10721:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10762:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10773:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10758:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10778:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10751:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10801:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10812:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10797:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10817:34:1",
																		"type": "",
																		"value": "Trigger percentage must be < 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10790:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10790:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10872:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10883:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10868:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10888:10:1",
																		"type": "",
																		"value": "0 (100%)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10861:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10861:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10908:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10931:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10916:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10908:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2b395aa8b334883aaf144e056e173c4c011f3bbc0306d65251aa06fa2fbde663__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10688:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10702:4:1",
														"type": ""
													}
												],
												"src": "10537:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11120:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11167:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11187:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11160:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11206:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11226:29:1",
																		"type": "",
																		"value": "SafeMath: addition overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11199:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11199:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11265:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11277:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11288:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11273:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11273:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11265:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11111:4:1",
														"type": ""
													}
												],
												"src": "10946:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11476:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11493:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11504:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11486:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11486:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11527:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11538:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11523:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11543:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11516:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11516:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11566:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11577:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11562:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11562:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11582:32:1",
																		"type": "",
																		"value": "Sells stopped by Diamond Floor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11555:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11555:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11555:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11624:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11636:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11647:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11632:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11624:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11453:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11467:4:1",
														"type": ""
													}
												],
												"src": "11302:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11835:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11852:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11863:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11845:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11845:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11886:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11897:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11882:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11902:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11875:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11875:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11925:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11936:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11921:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11921:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11941:34:1",
																		"type": "",
																		"value": "Sum of sell fees must be less th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11914:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11914:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11914:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12007:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11992:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11992:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12012:20:1",
																		"type": "",
																		"value": "an or equal to 25%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11985:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11985:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11985:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12042:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12054:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12065:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12050:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12050:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12042:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11812:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11826:4:1",
														"type": ""
													}
												],
												"src": "11661:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12254:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12271:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12282:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12305:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12316:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12301:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12321:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12294:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12294:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12355:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12340:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12360:34:1",
																		"type": "",
																		"value": "Amount must be greater than 0.1%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12333:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12333:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12426:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12411:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12431:12:1",
																		"type": "",
																		"value": " of supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12404:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12404:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12404:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12453:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12465:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12476:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12461:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12461:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12453:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12231:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12245:4:1",
														"type": ""
													}
												],
												"src": "12080:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12665:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12682:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12693:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12675:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12675:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12675:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12716:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12727:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12712:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12732:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12705:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12705:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12705:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12755:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12766:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12751:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12771:34:1",
																		"type": "",
																		"value": "SafeMath: multiplication overflo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12744:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12744:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12837:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12822:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12842:3:1",
																		"type": "",
																		"value": "w"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12815:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12815:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12855:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12878:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12863:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12855:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12642:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12656:4:1",
														"type": ""
													}
												],
												"src": "12491:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13067:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13084:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13095:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13077:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13077:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13077:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13118:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13129:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13114:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13134:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13107:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13107:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13157:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13168:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13153:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13153:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13173:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13146:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13146:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13217:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13229:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13240:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13225:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13217:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13044:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13058:4:1",
														"type": ""
													}
												],
												"src": "12893:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13428:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13445:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13456:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13438:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13438:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13438:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13479:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13490:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13475:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13495:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13468:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13518:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13529:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13514:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13534:34:1",
																		"type": "",
																		"value": "Transfer amount must be greater "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13507:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13507:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13507:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13589:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13600:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13585:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13605:11:1",
																		"type": "",
																		"value": "than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13578:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13578:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13626:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13638:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13649:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13634:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13634:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13626:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13405:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13419:4:1",
														"type": ""
													}
												],
												"src": "13254:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:238:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13855:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13866:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13848:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13848:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13889:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13900:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13885:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13885:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13905:2:1",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13878:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13928:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13939:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13924:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13944:34:1",
																		"type": "",
																		"value": "Amount must be less than or equa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13917:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13917:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13917:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13999:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14010:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13995:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13995:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14015:18:1",
																		"type": "",
																		"value": "l to totalSupply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13988:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13988:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14043:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14055:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14066:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14051:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14051:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14043:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13815:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13829:4:1",
														"type": ""
													}
												],
												"src": "13664:412:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14255:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14272:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14283:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14265:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14265:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14306:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14317:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14302:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14322:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14295:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14295:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14345:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14356:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14341:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14341:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14361:34:1",
																		"type": "",
																		"value": "this contract cannot blacklist a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14334:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14334:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14334:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14416:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14427:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14412:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14432:10:1",
																		"type": "",
																		"value": "ddresses"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14405:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14405:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14452:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14475:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14460:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14460:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14452:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14232:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14246:4:1",
														"type": ""
													}
												],
												"src": "14081:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14664:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14674:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14715:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14726:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14711:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14731:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14704:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14704:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14704:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14765:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14750:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14770:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14743:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14743:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14825:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14836:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14821:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14841:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14814:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14814:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14814:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14858:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14870:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14881:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14866:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14866:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14858:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14641:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14655:4:1",
														"type": ""
													}
												],
												"src": "14490:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15070:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15087:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15098:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15080:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15080:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15121:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15132:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15117:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15117:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15137:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15110:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15110:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15110:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15171:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15156:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15176:26:1",
																		"type": "",
																		"value": "This function is diabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15149:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15149:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15149:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15212:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15224:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15235:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15220:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15220:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15212:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15047:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15061:4:1",
														"type": ""
													}
												],
												"src": "14896:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15423:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15440:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15451:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15433:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15433:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15485:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15470:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15490:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15463:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15463:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15513:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15524:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15509:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15509:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15529:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15502:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15502:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15502:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15584:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15595:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15580:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15600:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15573:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15573:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15616:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15628:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15639:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15624:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15616:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15400:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15414:4:1",
														"type": ""
													}
												],
												"src": "15249:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15828:296:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15845:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15856:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15838:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15838:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15879:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15890:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15875:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15875:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15895:2:1",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15868:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15868:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15868:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15918:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15929:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15914:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15914:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15934:34:1",
																		"type": "",
																		"value": ".wallet balance after transfer m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15907:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15907:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15907:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15989:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16000:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15985:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16005:34:1",
																		"type": "",
																		"value": "ust be less than max wallet amou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15978:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15978:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15978:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16060:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16071:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16056:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16056:19:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16077:4:1",
																		"type": "",
																		"value": "nt"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16049:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16049:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16091:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16103:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16114:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16099:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16099:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16091:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15805:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15819:4:1",
														"type": ""
													}
												],
												"src": "15654:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16230:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16240:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16252:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16263:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16248:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16248:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16240:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16282:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16293:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16275:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16275:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16275:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16199:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16210:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16221:4:1",
														"type": ""
													}
												],
												"src": "16129:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16582:758:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16592:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16610:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16621:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16606:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16606:19:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "16596:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16641:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16652:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16634:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16634:25:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16668:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16678:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16672:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16700:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16711:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16696:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16696:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16716:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16689:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16689:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16689:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16743:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16754:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16739:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16739:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16759:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16732:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16732:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16732:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16772:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "16783:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "16776:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16798:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16818:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16812:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16812:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16802:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "16841:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16849:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16834:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16834:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16865:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16876:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16887:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16872:19:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16865:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16900:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16918:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "16926:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16914:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16914:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "16904:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16938:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "16947:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16942:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17009:169:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "17030:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "17045:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "17039:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17039:13:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17054:42:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "17035:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17035:62:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17023:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17023:75:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17023:75:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17111:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "17122:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "17127:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17118:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17118:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17111:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "17143:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "17157:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "17165:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17153:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17153:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17143:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16971:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16974:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16968:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16968:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16982:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16984:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16993:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16996:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16989:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16989:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16984:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16964:3:1",
																"statements": []
															},
															"src": "16960:218:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17187:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17195:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17187:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17218:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17229:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17214:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "17238:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17246:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17234:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17207:83:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17207:83:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17310:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17321:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17306:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "17327:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17299:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17299:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16519:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16530:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16538:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16546:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16554:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16562:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16573:4:1",
														"type": ""
													}
												],
												"src": "16311:1029:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17530:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17540:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17552:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17563:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17548:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17540:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17583:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17594:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17576:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17576:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17621:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17632:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17617:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17617:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17637:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17610:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17610:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17675:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17660:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17680:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17653:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17653:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17707:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17718:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17703:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17723:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17696:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17696:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17475:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17486:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17494:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17502:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17510:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17521:4:1",
														"type": ""
													}
												],
												"src": "17345:391:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17838:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17848:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17860:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17871:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17856:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17856:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17848:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17890:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17905:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17913:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17901:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17883:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17883:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17883:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17807:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17818:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17829:4:1",
														"type": ""
													}
												],
												"src": "17741:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17978:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18005:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18007:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18007:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18007:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17994:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18001:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17997:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17991:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17991:13:1"
															},
															"nodeType": "YulIf",
															"src": "17988:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18036:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18047:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18050:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18043:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18043:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18036:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17961:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17964:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "17970:3:1",
														"type": ""
													}
												],
												"src": "17930:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18109:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18132:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18134:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18134:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18134:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18129:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18122:9:1"
															},
															"nodeType": "YulIf",
															"src": "18119:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18163:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18172:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18175:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18168:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18168:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18163:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18094:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18097:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18103:1:1",
														"type": ""
													}
												],
												"src": "18063:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18240:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18359:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18361:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18361:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18361:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18271:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18264:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18264:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18257:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18257:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18279:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18286:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18354:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "18282:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18282:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18276:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18276:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18253:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18253:105:1"
															},
															"nodeType": "YulIf",
															"src": "18250:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18390:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18405:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18408:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18401:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18390:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18219:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18222:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18228:7:1",
														"type": ""
													}
												],
												"src": "18188:228:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18472:211:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18482:20:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18492:10:1",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18486:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18511:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18526:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "18529:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18522:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18522:10:1"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "18515:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18541:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18556:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "18559:2:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18552:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18552:10:1"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "18545:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18622:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18624:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18624:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18624:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "18592:3:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18585:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18585:11:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18578:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18578:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "18602:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "18611:2:1"
																					},
																					{
																						"name": "x_1",
																						"nodeType": "YulIdentifier",
																						"src": "18615:3:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "18607:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18607:12:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18599:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18599:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18574:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18574:47:1"
															},
															"nodeType": "YulIf",
															"src": "18571:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18653:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "18668:3:1"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "18673:3:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18664:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18664:13:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18653:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18451:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18454:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18460:7:1",
														"type": ""
													}
												],
												"src": "18421:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18737:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18759:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18761:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18761:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18761:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18753:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18756:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18750:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18750:8:1"
															},
															"nodeType": "YulIf",
															"src": "18747:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18790:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18802:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18805:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18798:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18798:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "18790:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18719:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18722:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18728:4:1",
														"type": ""
													}
												],
												"src": "18688:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18856:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18879:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18881:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18881:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18881:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18876:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18869:9:1"
															},
															"nodeType": "YulIf",
															"src": "18866:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18910:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18919:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18922:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "18915:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18915:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18910:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18841:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18844:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18850:1:1",
														"type": ""
													}
												],
												"src": "18818:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18978:150:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19069:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19071:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19071:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19071:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18994:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19001:66:1",
																		"type": "",
																		"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18991:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18991:77:1"
															},
															"nodeType": "YulIf",
															"src": "18988:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19100:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ret",
																		"nodeType": "YulIdentifier",
																		"src": "19111:3:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19116:5:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19107:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19107:15:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19100:3:1"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18960:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18970:3:1",
														"type": ""
													}
												],
												"src": "18935:193:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19165:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19182:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19185:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19175:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19175:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19279:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19282:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19272:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19272:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19303:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19306:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19296:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19296:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19133:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19354:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19371:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19374:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19364:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19364:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19468:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19471:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19461:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19461:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19492:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19495:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19485:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19485:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "19322:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19556:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19643:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19652:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19655:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19645:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19645:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19645:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19579:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19590:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19597:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "19586:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19586:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19576:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19576:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19569:73:1"
															},
															"nodeType": "YulIf",
															"src": "19566:2:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19545:5:1",
														"type": ""
													}
												],
												"src": "19511:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19712:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19766:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19775:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19778:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19768:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19768:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19768:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19735:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "19756:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "19749:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19749:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "19742:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19742:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19732:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19732:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19725:40:1"
															},
															"nodeType": "YulIf",
															"src": "19722:2:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19701:5:1",
														"type": ""
													}
												],
												"src": "19670:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19837:77:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19892:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19901:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19904:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19894:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19894:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19894:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19860:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19871:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19878:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "19867:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19867:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19857:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19857:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19850:41:1"
															},
															"nodeType": "YulIf",
															"src": "19847:2:1"
														}
													]
												},
												"name": "validator_revert_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19826:5:1",
														"type": ""
													}
												],
												"src": "19793:121:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffff))) { revert(value1, value1) }\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_boolt_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint32(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        validator_revert_uint32(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_rational_0_by_1_t_rational_0_by_1_t_address_payable_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_uint16_t_uint256_t_bool_t_uint256__to_t_bool_t_uint16_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bool_t_uint32__to_t_bool_t_uint32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), and(value1, 0xffffffff))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"this contract cannot be paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Sum of buy fees must be less tha\")\n        mstore(add(headStart, 96), \"n or equal to 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Trading is not active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Strong Hands Protocol active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2b395aa8b334883aaf144e056e173c4c011f3bbc0306d65251aa06fa2fbde663__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Trigger percentage must be < 100\")\n        mstore(add(headStart, 96), \"0 (100%)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Sells stopped by Diamond Floor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Sum of sell fees must be less th\")\n        mstore(add(headStart, 96), \"an or equal to 25%\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be greater than 0.1%\")\n        mstore(add(headStart, 96), \" of supply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Amount must be less than or equa\")\n        mstore(add(headStart, 96), \"l to totalSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"this contract cannot blacklist a\")\n        mstore(add(headStart, 96), \"ddresses\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"This function is diabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \".wallet balance after transfer m\")\n        mstore(add(headStart, 96), \"ust be less than max wallet amou\")\n        mstore(add(headStart, 128), \"nt\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_mul_t_uint32(x, y) -> product\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if and(iszero(iszero(x_1)), gt(y_1, div(_1, x_1))) { panic_error_0x11() }\n        product := mul(x_1, y_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, 0x8000000000000000000000000000000000000000000000000000000000000000) { panic_error_0x11() }\n        ret := sub(ret, value)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function validator_revert_uint32(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106103855760003560e01c806388790a68116101d1578063cab0347111610102578063e315a6da116100a0578063f480fec21161006f578063f480fec214610adb578063fe0bb98214610afb578063ffb54a9914610b1b578063ffecf51614610b3557600080fd5b8063e315a6da14610a5b578063e4bf1bed14610a7b578063ea2f0b3714610a9b578063f2fde38b14610abb57600080fd5b8063d55cb78a116100dc578063d55cb78a146109ca578063db0045ec146109df578063dc44b6a0146109ff578063dd62ed3e14610a1557600080fd5b8063cab0347114610974578063cdb3858f1461098a578063d1633649146109aa57600080fd5b8063a850673d1161016f578063c469b6dd11610149578063c469b6dd146108cd578063c5d24189146108e3578063c8607952146108f9578063c95457ff1461090f57600080fd5b8063a850673d14610878578063a9059cbb14610898578063c3c8cd80146108b857600080fd5b80639491f94d116101ab5780639491f94d146107c857806395d89b41146107dd57806399a7b9bc146108235780639d82190f1461083857600080fd5b806388790a681461077f5780638da5cb5b146107955780638e360253146107b357600080fd5b806339a53c4e116102b65780636c0a24eb11610254578063729cb3f211610223578063729cb3f2146106f157806372b2aecc14610711578063787a08a61461072757806380670f3c1461076a57600080fd5b80636c0a24eb1461067b5780636fc3eaec1461069157806370a08231146106a6578063715018a6146106dc57600080fd5b8063437823ec11610290578063437823ec146105ee57806349bd5a5e1461060e5780635fecd926146106465780636aabff3f1461066657600080fd5b806339a53c4e1461057f5780633bbac579146105a15780633e0f966d146105d957600080fd5b8063248dd2321161032357806329409395116102fd5780632940939514610502578063301ad55814610522578063313ce56714610543578063323be1c51461055f57600080fd5b8063248dd232146104b657806327a14fc2146104cc5780632843631d146104ec57600080fd5b806314eb76ac1161035f57806314eb76ac1461043957806318160ddd1461045b5780632369bf831461047657806323b872dd1461049657600080fd5b806301a6c43b1461039157806306fdde03146103ba578063095ea7b31461040957600080fd5b3661038c57005b600080fd5b34801561039d57600080fd5b506103a760085481565b6040519081526020015b60405180910390f35b3480156103c657600080fd5b5060408051808201909152600981527f4761696e5a696c6c61000000000000000000000000000000000000000000000060208201525b6040516103b191906139c1565b34801561041557600080fd5b50610429610424366004613846565b610b55565b60405190151581526020016103b1565b34801561044557600080fd5b50610459610454366004613796565b610b6c565b005b34801561046757600080fd5b50670de0b6b3a76400006103a7565b34801561048257600080fd5b50610459610491366004613796565b610c05565b3480156104a257600080fd5b506104296104b1366004613806565b610c99565b3480156104c257600080fd5b506103a760135481565b3480156104d857600080fd5b506104596104e7366004613933565b610d02565b3480156104f857600080fd5b506103a7600b5481565b34801561050e57600080fd5b5061045961051d366004613796565b610e68565b34801561052e57600080fd5b50602854610429906301000000900460ff1681565b34801561054f57600080fd5b50604051600981526020016103b1565b34801561056b57600080fd5b506028546104299062010000900460ff1681565b34801561058b57600080fd5b5060285461042990640100000000900460ff1681565b3480156105ad57600080fd5b506104296105bc366004613796565b6001600160a01b0316600090815260208052604090205460ff1690565b3480156105e557600080fd5b50610459611015565b3480156105fa57600080fd5b50610459610609366004613796565b6110d3565b34801561061a57600080fd5b5060265461062e906001600160a01b031681565b6040516001600160a01b0390911681526020016103b1565b34801561065257600080fd5b50610459610661366004613796565b611151565b34801561067257600080fd5b506104596111cb565b34801561068757600080fd5b506103a760075481565b34801561069d57600080fd5b5061045961124f565b3480156106b257600080fd5b506103a76106c1366004613796565b6001600160a01b031660009081526002602052604090205490565b3480156106e857600080fd5b506104596112ee565b3480156106fd57600080fd5b5061045961070c3660046138c0565b6113aa565b34801561071d57600080fd5b506103a760195481565b34801561073357600080fd5b50601a5461074e9060ff811690610100900463ffffffff1682565b60408051921515835263ffffffff9091166020830152016103b1565b34801561077657600080fd5b506103a761145c565b34801561078b57600080fd5b506103a760115481565b3480156107a157600080fd5b506000546001600160a01b031661062e565b3480156107bf57600080fd5b506104596114d0565b3480156107d457600080fd5b506103a7611539565b3480156107e957600080fd5b5060408051808201909152600481527f524157520000000000000000000000000000000000000000000000000000000060208201526103fc565b34801561082f57600080fd5b50610459611707565b34801561084457600080fd5b50610858610853366004613796565b61178b565b6040805194855260208501939093529183015260608201526080016103b1565b34801561088457600080fd5b50610459610893366004613933565b61183a565b3480156108a457600080fd5b506104296108b3366004613846565b611899565b3480156108c457600080fd5b506104596118a6565b3480156108d957600080fd5b506103a7600f5481565b3480156108ef57600080fd5b506103a7600d5481565b34801561090557600080fd5b506103a760155481565b34801561091b57600080fd5b50601c54601d54601e54601f546109459360ff8082169461010090920461ffff1693919291169085565b60408051951515865261ffff90941660208601529284019190915215156060830152608082015260a0016103b1565b34801561098057600080fd5b506103a760175481565b34801561099657600080fd5b506104596109a5366004613796565b61191f565b3480156109b657600080fd5b506104596109c5366004613933565b6119b3565b3480156109d657600080fd5b50610459611a23565b3480156109eb57600080fd5b506104596109fa366004613796565b611aa7565b348015610a0b57600080fd5b506103a760095481565b348015610a2157600080fd5b506103a7610a303660046137ce565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205490565b348015610a6757600080fd5b50610459610a76366004613933565b611b3b565b348015610a8757600080fd5b50610459610a96366004613990565b611b9a565b348015610aa757600080fd5b50610459610ab6366004613796565b611d57565b348015610ac757600080fd5b50610459610ad6366004613796565b611dd2565b348015610ae757600080fd5b50610459610af6366004613990565b611eb1565b348015610b0757600080fd5b50610459610b1636600461388d565b61205d565b348015610b2757600080fd5b506028546104299060ff1681565b348015610b4157600080fd5b50610459610b50366004613796565b6121b9565b6000610b623384846122b5565b5060015b92915050565b6000546001600160a01b03163314610bcb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b602280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c5f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b602180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000610ca684848461240d565b610cf88433610cf385604051806060016040528060288152602001613c2c602891396001600160a01b038a1660009081526003602090815260408083203384529091529020549190612b42565b6122b5565b5060019392505050565b6000546001600160a01b03163314610d5c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b610d70670de0b6b3a76400006103e8612b7c565b811015610de55760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d7573742062652067726561746572207468616e20302e312560448201527f206f6620737570706c79000000000000000000000000000000000000000000006064820152608401610bc2565b670de0b6b3a7640000811115610e635760405162461bcd60e51b815260206004820152603060248201527f416d6f756e74206d757374206265206c657373207468616e206f72206571756160448201527f6c20746f20746f74616c537570706c79000000000000000000000000000000006064820152608401610bc2565b600755565b6000546001600160a01b03163314610ec25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b158015610f1d57600080fd5b505afa158015610f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f55919061394b565b9050816001600160a01b031663a9059cbb610f786000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b158015610fd857600080fd5b505af1158015610fec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110109190613871565b505050565b6000546001600160a01b0316331461106f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b60285462010000900460ff166110c75760405162461bcd60e51b815260206004820152601e60248201527f7468697320636f6e74726163742063616e6e6f742062652070617573656400006044820152606401610bc2565b6028805460ff19169055565b6000546001600160a01b0316331461112d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6000546001600160a01b031633146111ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6001600160a01b031660009081526020805260409020805460ff19169055565b6000546001600160a01b031633146112255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffff169055565b6000546001600160a01b031633146112a95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b4780156112eb57600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156112e9573d6000803e3d6000fd5b505b50565b6000546001600160a01b031633146113485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b6000546001600160a01b031633146114045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b601a805460ff191683151517905561141d81603c613b0b565b601a805463ffffffff92909216610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff9092169190911790555050565b601d5460009061146c5750600090565b6000611476611539565b601d5490915081116114b357601d546114a59061149f6103e86114998386612bc5565b90612c07565b90612b7c565b6114ae90613b62565b6114ca565b601d546114ca9061149f6103e86114998584612bc5565b91505090565b6000546001600160a01b0316331461152a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6028805460ff19166001179055565b6000806000602660009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561158c57600080fd5b505afa1580156115a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c491906138ed565b5091509150816dffffffffffffffffffffffffffff16600014806115f657506dffffffffffffffffffffffffffff8116155b156116045760009250505090565b602654604080517f0dfe1681000000000000000000000000000000000000000000000000000000008152905130926001600160a01b031691630dfe1681916004808301926020929190829003018186803b15801561166157600080fd5b505afa158015611675573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061169991906137b2565b6001600160a01b0316146116d6576116d16dffffffffffffffffffffffffffff8083169061149f908516670de0b6b3a7640000612c07565b611700565b6117006dffffffffffffffffffffffffffff8084169061149f908416670de0b6b3a7640000612c07565b9250505090565b6000546001600160a01b031633146117615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffff169055565b6001600160a01b0381166000908152601b6020526040812054819081908190819042106117b95760006117dc565b6001600160a01b0386166000908152601b60205260409020546117dc9042612bc5565b90506117eb8162015180612b7c565b94506117fa6201518082613b4e565b905061180881610e10612b7c565b9350611816610e1082613b4e565b905061182381603c612b7c565b9250611830603c82613b4e565b9150509193509193565b6000546001600160a01b031633146118945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b601955565b6000610b6233848461240d565b6000546001600160a01b031633146119005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b3060009081526002602052604090205480156112eb576112eb81612ca2565b6000546001600160a01b031633146119795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b602480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611a0d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b426005556006556028805460ff19166001179055565b6000546001600160a01b03163314611a7d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffff169055565b6000546001600160a01b03163314611b015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b602380547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6000546001600160a01b03163314611b955760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b600855565b6000546001600160a01b03163314611bf45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6000611c0c82611c0685818989612edf565b90612edf565b905060fa811115611c855760405162461bcd60e51b815260206004820152603160248201527f53756d206f66206275792066656573206d757374206265206c6573732074686160448201527f6e206f7220657175616c20746f203235250000000000000000000000000000006064820152608401610bc2565b602854640100000000900460ff16611cdf5760405162461bcd60e51b815260206004820152601860248201527f546869732066756e6374696f6e20697320646961626c656400000000000000006044820152606401610bc2565b600d8590556009849055600f839055600b829055600e859055600a8490556010839055600c8290556040805186815260208101869052908101849052606081018390527f892b2caa2d791bf7b8d9a49c4db7a4513ff1ae2e0e068ed217f9d5ab4c1a28f0906080015b60405180910390a15050505050565b6000546001600160a01b03163314611db15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6001600160a01b03166000908152600460205260409020805460ff19169055565b6000546001600160a01b03163314611e2c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6001600160a01b038116611ea85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610bc2565b6112eb81612f3e565b6000546001600160a01b03163314611f0b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6000611f1d82611c0685818989612edf565b905060fa811115611f965760405162461bcd60e51b815260206004820152603260248201527f53756d206f662073656c6c2066656573206d757374206265206c65737320746860448201527f616e206f7220657175616c20746f2032352500000000000000000000000000006064820152608401610bc2565b602854640100000000900460ff16611ff05760405162461bcd60e51b815260206004820152601860248201527f546869732066756e6374696f6e20697320646961626c656400000000000000006044820152606401610bc2565b601585905560118490556017839055601382905560168590556012849055601883905560148290556040805186815260208101869052908101849052606081018390527f439932620c72dddea29980c098bca1a482729646d1216b226d723c6d278a30d190608001611d48565b6000546001600160a01b031633146120b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6103e88161ffff16106121325760405162461bcd60e51b815260206004820152602860248201527f547269676765722070657263656e74616765206d757374206265203c2031303060448201527f30202831303025290000000000000000000000000000000000000000000000006064820152608401610bc2565b601c80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000016831580157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000ff169190911761010061ffff85160217909155829061219b5750601d54155b156112e95760006121aa611539565b9050801561101057601d555050565b6000546001600160a01b031633146122135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610bc2565b6028546301000000900460ff166122925760405162461bcd60e51b815260206004820152602860248201527f7468697320636f6e74726163742063616e6e6f7420626c61636b6c697374206160448201527f64647265737365730000000000000000000000000000000000000000000000006064820152608401610bc2565b6001600160a01b031660009081526020805260409020805460ff19166001179055565b6001600160a01b0383166123305760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610bc2565b6001600160a01b0382166123ac5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610bc2565b6001600160a01b0383811660008181526003602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166124895760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610bc2565b6001600160a01b0382166125055760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610bc2565b6000811161257b5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d75737420626520677265617465722060448201527f7468616e207a65726f00000000000000000000000000000000000000000000006064820152608401610bc2565b600161258f6000546001600160a01b031690565b6001600160a01b0316846001600160a01b0316141580156125be57506000546001600160a01b03848116911614155b80156125d357506001600160a01b0384163014155b80156125e857506001600160a01b0383163014155b15612ae85760285460ff1661263f5760405162461bcd60e51b815260206004820152601560248201527f54726164696e67206973206e6f742061637469766500000000000000000000006044820152606401610bc2565b6026546001600160a01b03858116911614801561266a57506025546001600160a01b03848116911614155b156127875760065460055461267e91612edf565b42116126a7576001600160a01b03831660009081526020805260409020805460ff191660011790555b6001600160a01b03831660009081526004602052604090205460ff16612787576007546126ed83611c06866001600160a01b031660009081526002602052604090205490565b11156127875760405162461bcd60e51b815260206004820152604260248201527f2e77616c6c65742062616c616e6365206166746572207472616e73666572206d60448201527f757374206265206c657373207468616e206d61782077616c6c657420616d6f7560648201527f6e74000000000000000000000000000000000000000000000000000000000000608482015260a401610bc2565b602854610100900460ff161580156127ad57506026546001600160a01b03858116911614155b80156127c657506026546001600160a01b038481169116145b156129d7576001600160a01b038416600090815260208052604090205460ff1615801561280b57506001600160a01b038316600090815260208052604090205460ff16155b61281457600080fd5b601a5460ff16156128b9576001600160a01b0384166000908152601b60205260409020544210156128875760405162461bcd60e51b815260206004820152601c60248201527f5374726f6e672048616e64732050726f746f636f6c20616374697665000000006044820152606401610bc2565b601a5461289f90610100900463ffffffff1642613aa2565b6001600160a01b0385166000908152601b60205260409020555b601c5460ff161561291f57601e5460ff16156129175760405162461bcd60e51b815260206004820152601e60248201527f53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f7200006044820152606401610bc2565b61291f612fa6565b3060009081526002602052604090205460085481106129d55780156129c3576000612963601154611c06601354611c06601754601554612edf90919063ffffffff16565b11156129c357600061299e612991601154611c06601354611c06601754601554612edf90919063ffffffff16565b60115461149f9085612c07565b905060008183106129b6576129b38383612bc5565b90505b6129c08282613055565b50505b4780156129d3576129d3476130e5565b505b505b6026546001600160a01b03858116911614801590612a0357506026546001600160a01b03848116911614155b15612ae8576001600160a01b03831660009081526004602052604090205460ff16612ae857600754612a4e83611c06866001600160a01b031660009081526002602052604090205490565b1115612ae85760405162461bcd60e51b815260206004820152604260248201527f2e77616c6c65742062616c616e6365206166746572207472616e73666572206d60448201527f757374206265206c657373207468616e206d61782077616c6c657420616d6f7560648201527f6e74000000000000000000000000000000000000000000000000000000000000608482015260a401610bc2565b6001600160a01b03841660009081526004602052604090205460ff1680612b2757506001600160a01b03831660009081526004602052604090205460ff165b15612b30575060005b612b3c84848484613225565b50505050565b60008184841115612b665760405162461bcd60e51b8152600401610bc291906139c1565b506000612b738486613b37565b95945050505050565b6000612bbe83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506132c3565b9392505050565b6000612bbe83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612b42565b600082612c1657506000610b66565b6000612c228385613ace565b905082612c2f8583613aba565b14612bbe5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610bc2565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790556040805160028082526060820183526000926020830190803683370190505090503081600081518110612d2a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6001600160a01b03928316602091820292909201810191909152602554604080517fad5c46480000000000000000000000000000000000000000000000000000000081529051919093169263ad5c4648926004808301939192829003018186803b158015612d9757600080fd5b505afa158015612dab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dcf91906137b2565b81600181518110612e09577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6001600160a01b039283166020918202929092010152602554612e2f91309116846122b5565b6025546040517f791ac9470000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063791ac94790612e81908590600090869030904290600401613a32565b600060405180830381600087803b158015612e9b57600080fd5b505af1158015612eaf573d6000803e3d6000fd5b5050602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905550505050565b600080612eec8385613aa2565b905083811015612bbe5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610bc2565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000612fb0611539565b905080612fba5750565b601d54811115612fd357601d55601e805460ff19169055565b601c54601d54600091613003916103e89161149f9161010090910461ffff1690612ffd9084612c07565b90612bc5565b90508082101561302157601e805460ff19166001179055601d54601f555b601e5460ff1680156130405750601f5461303c906002612c07565b8210155b156112e95750601e805460ff19169055601d55565b602880547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055600061308e836002612b7c565b9050600061309c8483612bc5565b9050476130b16130ac8585612edf565b612ca2565b60006130bd4783612bc5565b90508215612eaf57612eaf836130e06130d68888612edf565b61149f8589612c07565b6132f1565b6000613104601754611c06601354601554612edf90919063ffffffff16565b905080156112e95760006131278261149f60155486612c0790919063ffffffff16565b905060006131448361149f60175487612c0790919063ffffffff16565b9050600061315682612ffd8786612bc5565b9050821561319a576021546040516001600160a01b039091169084156108fc029085906000818181858888f19350505050158015613198573d6000803e3d6000fd5b505b81156131dc576022546040516001600160a01b039091169083156108fc029084906000818181858888f193505050501580156131da573d6000803e3d6000fd5b505b801561321e576023546040516001600160a01b039091169082156108fc029083906000818181858888f1935050505015801561321c573d6000803e3d6000fd5b505b5050505050565b8061328357613283600d8054600e5560098054600a55600f8054601055600b8054600c556000938490559183905582905581905560158054601655601180546012556017805460185560138054601455928490559083905582905555565b61328e8484846133c7565b612b3c600e54600d55600a54600955601054600f55600c54600b55601654601555601254601155601854601755601454601355565b600081836132e45760405162461bcd60e51b8152600401610bc291906139c1565b506000612b738486613aba565b6025546133099030906001600160a01b0316846122b5565b602554602480546040517ff305d71900000000000000000000000000000000000000000000000000000000815230600482015291820185905260006044830181905260648301526001600160a01b0390811660848301524260a48301529091169063f305d71990839060c4016060604051808303818588803b15801561338e57600080fd5b505af11580156133a2573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061321e9190613963565b6133f96040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b6026546001600160a01b03858116911614801561342457506025546001600160a01b03848116911614155b15613498576134446103e861149f600d5485612c0790919063ffffffff16565b602082015260095461345f906103e89061149f908590612c07565b8152600f54613477906103e89061149f908590612c07565b6040820152600b54613492906103e89061149f908590612c07565b60608201525b6026546001600160a01b038581169116148015906134c357506026546001600160a01b038481169116145b15613537576134e36103e861149f60155485612c0790919063ffffffff16565b60208201526011546134fe906103e89061149f908590612c07565b8152601754613516906103e89061149f908590612c07565b6040820152601354613531906103e89061149f908590612c07565b60608201525b6026546001600160a01b0385811691161480159061356357506026546001600160a01b03848116911614155b156136175761358e606461149f6019546114996103e861149f60155489612c0790919063ffffffff16565b8160200181815250506135bd606461149f6019546114996103e861149f60115489612c0790919063ffffffff16565b81526019546017546135e29160649161149f9190611499906103e89084908990612c07565b816040018181525050613611606461149f6019546114996103e861149f60135489612c0790919063ffffffff16565b60608201525b6136468160600151612ffd8360400151612ffd8560000151612ffd876020015189612bc590919063ffffffff16565b60808201526001600160a01b03841660009081526002602052604090205461366e9083612bc5565b6001600160a01b03808616600090815260026020526040808220939093556080840151918616815291909120546136a491612edf565b60026000856001600160a01b03166001600160a01b03168152602001908152602001600020819055506137116136fb8260600151611c068460400151611c0686600001518760200151612edf90919063ffffffff16565b3060009081526002602052604090205490612edf565b3060009081526002602090815260409182902092909255608083015190519081526001600160a01b0385811692908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050565b80516dffffffffffffffffffffffffffff8116811461379157600080fd5b919050565b6000602082840312156137a7578081fd5b8135612bbe81613bf6565b6000602082840312156137c3578081fd5b8151612bbe81613bf6565b600080604083850312156137e0578081fd5b82356137eb81613bf6565b915060208301356137fb81613bf6565b809150509250929050565b60008060006060848603121561381a578081fd5b833561382581613bf6565b9250602084013561383581613bf6565b929592945050506040919091013590565b60008060408385031215613858578182fd5b823561386381613bf6565b946020939093013593505050565b600060208284031215613882578081fd5b8151612bbe81613c0b565b6000806040838503121561389f578182fd5b82356138aa81613c0b565b9150602083013561ffff811681146137fb578182fd5b600080604083850312156138d2578182fd5b82356138dd81613c0b565b915060208301356137fb81613c19565b600080600060608486031215613901578283fd5b61390a84613773565b925061391860208501613773565b9150604084015161392881613c19565b809150509250925092565b600060208284031215613944578081fd5b5035919050565b60006020828403121561395c578081fd5b5051919050565b600080600060608486031215613977578283fd5b8351925060208401519150604084015190509250925092565b600080600080608085870312156139a5578182fd5b5050823594602084013594506040840135936060013592509050565b6000602080835283518082850152825b818110156139ed578581018301518582016040015282016139d1565b818111156139fe5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600060a082018783526020878185015260a0604085015281875180845260c0860191508289019350845b81811015613a815784516001600160a01b031683529383019391830191600101613a5c565b50506001600160a01b03969096166060850152505050608001529392505050565b60008219821115613ab557613ab5613b98565b500190565b600082613ac957613ac9613bc7565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613b0657613b06613b98565b500290565b600063ffffffff80831681851681830481118215151615613b2e57613b2e613b98565b02949350505050565b600082821015613b4957613b49613b98565b500390565b600082613b5d57613b5d613bc7565b500690565b60007f8000000000000000000000000000000000000000000000000000000000000000821415613b9457613b94613b98565b0390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6001600160a01b03811681146112eb57600080fd5b80151581146112eb57600080fd5b63ffffffff811681146112eb57600080fdfe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220d445ba2fdba51cb8d3ee4bed2cedb6e9cd1b69c0317a471ad158af8fc12f109b64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x385 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88790A68 GT PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xCAB03471 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xE315A6DA GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF480FEC2 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF480FEC2 EQ PUSH2 0xADB JUMPI DUP1 PUSH4 0xFE0BB982 EQ PUSH2 0xAFB JUMPI DUP1 PUSH4 0xFFB54A99 EQ PUSH2 0xB1B JUMPI DUP1 PUSH4 0xFFECF516 EQ PUSH2 0xB35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xE315A6DA EQ PUSH2 0xA5B JUMPI DUP1 PUSH4 0xE4BF1BED EQ PUSH2 0xA7B JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD55CB78A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xD55CB78A EQ PUSH2 0x9CA JUMPI DUP1 PUSH4 0xDB0045EC EQ PUSH2 0x9DF JUMPI DUP1 PUSH4 0xDC44B6A0 EQ PUSH2 0x9FF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCAB03471 EQ PUSH2 0x974 JUMPI DUP1 PUSH4 0xCDB3858F EQ PUSH2 0x98A JUMPI DUP1 PUSH4 0xD1633649 EQ PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xC469B6DD GT PUSH2 0x149 JUMPI DUP1 PUSH4 0xC469B6DD EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xC5D24189 EQ PUSH2 0x8E3 JUMPI DUP1 PUSH4 0xC8607952 EQ PUSH2 0x8F9 JUMPI DUP1 PUSH4 0xC95457FF EQ PUSH2 0x90F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA850673D EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x898 JUMPI DUP1 PUSH4 0xC3C8CD80 EQ PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9491F94D GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x9491F94D EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0x99A7B9BC EQ PUSH2 0x823 JUMPI DUP1 PUSH4 0x9D82190F EQ PUSH2 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88790A68 EQ PUSH2 0x77F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x795 JUMPI DUP1 PUSH4 0x8E360253 EQ PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E GT PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x6C0A24EB GT PUSH2 0x254 JUMPI DUP1 PUSH4 0x729CB3F2 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x729CB3F2 EQ PUSH2 0x6F1 JUMPI DUP1 PUSH4 0x72B2AECC EQ PUSH2 0x711 JUMPI DUP1 PUSH4 0x787A08A6 EQ PUSH2 0x727 JUMPI DUP1 PUSH4 0x80670F3C EQ PUSH2 0x76A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6C0A24EB EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x6FC3EAEC EQ PUSH2 0x691 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x437823EC GT PUSH2 0x290 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0x5FECD926 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x6AABFF3F EQ PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39A53C4E EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x3E0F966D EQ PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 GT PUSH2 0x323 JUMPI DUP1 PUSH4 0x29409395 GT PUSH2 0x2FD JUMPI DUP1 PUSH4 0x29409395 EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0x301AD558 EQ PUSH2 0x522 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0x323BE1C5 EQ PUSH2 0x55F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248DD232 EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0x27A14FC2 EQ PUSH2 0x4CC JUMPI DUP1 PUSH4 0x2843631D EQ PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x14EB76AC GT PUSH2 0x35F JUMPI DUP1 PUSH4 0x14EB76AC EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x2369BF83 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A6C43B EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x38C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH32 0x4761696E5A696C6C610000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x39C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x424 CALLDATASIZE PUSH1 0x4 PUSH2 0x3846 JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0xB6C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x3A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0xC05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3806 JUMP JUMPDEST PUSH2 0xC99 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0xD02 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0xE68 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1015 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x609 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x10D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x26 SLOAD PUSH2 0x62E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x661 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1151 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x11CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x124F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x6C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x12EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x70C CALLDATASIZE PUSH1 0x4 PUSH2 0x38C0 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1A SLOAD PUSH2 0x74E SWAP1 PUSH1 0xFF DUP2 AND SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x145C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x14D0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0x1539 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH32 0x5241575200000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x3FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x82F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1707 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x858 PUSH2 0x853 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x893 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x183A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x429 PUSH2 0x8B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3846 JUMP JUMPDEST PUSH2 0x1899 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x18A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x1E SLOAD PUSH1 0x1F SLOAD PUSH2 0x945 SWAP4 PUSH1 0xFF DUP1 DUP3 AND SWAP5 PUSH2 0x100 SWAP1 SWAP3 DIV PUSH2 0xFFFF AND SWAP4 SWAP2 SWAP3 SWAP2 AND SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 ISZERO ISZERO DUP7 MSTORE PUSH2 0xFFFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x17 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x996 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x191F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x19B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x1A23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0x9FA CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH2 0xA30 CALLDATASIZE PUSH1 0x4 PUSH2 0x37CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA76 CALLDATASIZE PUSH1 0x4 PUSH2 0x3933 JUMP JUMPDEST PUSH2 0x1B3B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xA96 CALLDATASIZE PUSH1 0x4 PUSH2 0x3990 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAB6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1D57 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x1DD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xAF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3990 JUMP JUMPDEST PUSH2 0x1EB1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xB16 CALLDATASIZE PUSH1 0x4 PUSH2 0x388D JUMP JUMPDEST PUSH2 0x205D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x28 SLOAD PUSH2 0x429 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x459 PUSH2 0xB50 CALLDATASIZE PUSH1 0x4 PUSH2 0x3796 JUMP JUMPDEST PUSH2 0x21B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 CALLER DUP5 DUP5 PUSH2 0x22B5 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x22 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x21 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCA6 DUP5 DUP5 DUP5 PUSH2 0x240D JUMP JUMPDEST PUSH2 0xCF8 DUP5 CALLER PUSH2 0xCF3 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3C2C PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2B42 JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0xD70 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3E8 PUSH2 0x2B7C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E20302E3125 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206F6620737570706C7900000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 GT ISZERO PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E206F722065717561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C20746F20746F74616C537570706C7900000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF55 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0xF78 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFEC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x3871 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x106F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F74206265207061757365640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x112D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x141D DUP2 PUSH1 0x3C PUSH2 0x3B0B JUMP JUMPDEST PUSH1 0x1A DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP3 SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH1 0x0 SWAP1 PUSH2 0x146C JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1476 PUSH2 0x1539 JUMP JUMPDEST PUSH1 0x1D SLOAD SWAP1 SWAP2 POP DUP2 GT PUSH2 0x14B3 JUMPI PUSH1 0x1D SLOAD PUSH2 0x14A5 SWAP1 PUSH2 0x149F PUSH2 0x3E8 PUSH2 0x1499 DUP4 DUP7 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 PUSH2 0x2C07 JUMP JUMPDEST SWAP1 PUSH2 0x2B7C JUMP JUMPDEST PUSH2 0x14AE SWAP1 PUSH2 0x3B62 JUMP JUMPDEST PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x1D SLOAD PUSH2 0x14CA SWAP1 PUSH2 0x149F PUSH2 0x3E8 PUSH2 0x1499 DUP6 DUP5 PUSH2 0x2BC5 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x152A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x26 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x158C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15C4 SWAP2 SWAP1 PUSH2 0x38ED JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 EQ DUP1 PUSH2 0x15F6 JUMPI POP PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO JUMPDEST ISZERO PUSH2 0x1604 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDFE168100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD ADDRESS SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDFE1681 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1675 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1699 SWAP2 SWAP1 PUSH2 0x37B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16D6 JUMPI PUSH2 0x16D1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH2 0x149F SWAP1 DUP6 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C07 JUMP JUMPDEST PUSH2 0x1700 JUMP JUMPDEST PUSH2 0x1700 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH2 0x149F SWAP1 DUP5 AND PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C07 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP LT PUSH2 0x17B9 JUMPI PUSH1 0x0 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x17DC SWAP1 TIMESTAMP PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP PUSH2 0x17EB DUP2 PUSH3 0x15180 PUSH2 0x2B7C JUMP JUMPDEST SWAP5 POP PUSH2 0x17FA PUSH3 0x15180 DUP3 PUSH2 0x3B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x1808 DUP2 PUSH2 0xE10 PUSH2 0x2B7C JUMP JUMPDEST SWAP4 POP PUSH2 0x1816 PUSH2 0xE10 DUP3 PUSH2 0x3B4E JUMP JUMPDEST SWAP1 POP PUSH2 0x1823 DUP2 PUSH1 0x3C PUSH2 0x2B7C JUMP JUMPDEST SWAP3 POP PUSH2 0x1830 PUSH1 0x3C DUP3 PUSH2 0x3B4E JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 CALLER DUP5 DUP5 PUSH2 0x240D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1900 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x12EB JUMPI PUSH2 0x12EB DUP2 PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST TIMESTAMP PUSH1 0x5 SSTORE PUSH1 0x6 SSTORE PUSH1 0x28 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B01 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x23 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0C DUP3 PUSH2 0x1C06 DUP6 DUP2 DUP10 DUP10 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F66206275792066656573206D757374206265206C65737320746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7220657175616C20746F20323525000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1CDF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP5 SWAP1 SSTORE PUSH1 0xF DUP4 SWAP1 SSTORE PUSH1 0xB DUP3 SWAP1 SSTORE PUSH1 0xE DUP6 SWAP1 SSTORE PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x10 DUP4 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0 SWAP1 PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1EA8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x12EB DUP2 PUSH2 0x2F3E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1D DUP3 PUSH2 0x1C06 DUP6 DUP2 DUP10 DUP10 PUSH2 0x2EDF JUMP JUMPDEST SWAP1 POP PUSH1 0xFA DUP2 GT ISZERO PUSH2 0x1F96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53756D206F662073656C6C2066656573206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616E206F7220657175616C20746F203235250000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1FF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546869732066756E6374696F6E20697320646961626C65640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x15 DUP6 SWAP1 SSTORE PUSH1 0x11 DUP5 SWAP1 SSTORE PUSH1 0x17 DUP4 SWAP1 SSTORE PUSH1 0x13 DUP3 SWAP1 SSTORE PUSH1 0x16 DUP6 SWAP1 SSTORE PUSH1 0x12 DUP5 SWAP1 SSTORE PUSH1 0x18 DUP4 SWAP1 SSTORE PUSH1 0x14 DUP3 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1 SWAP1 PUSH1 0x80 ADD PUSH2 0x1D48 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 PUSH2 0xFFFF AND LT PUSH2 0x2132 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547269676765722070657263656E74616765206D757374206265203C20313030 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x3020283130302529000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1C DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 AND DUP4 ISZERO DUP1 ISZERO PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FF AND SWAP2 SWAP1 SWAP2 OR PUSH2 0x100 PUSH2 0xFFFF DUP6 AND MUL OR SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0x219B JUMPI POP PUSH1 0x1D SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 PUSH2 0x21AA PUSH2 0x1539 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1010 JUMPI PUSH1 0x1D SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2213 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2292 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573736573000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2330 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x23AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x2489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2505 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x257B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E207A65726F0000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x258F PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x25BE JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x25D3 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADDRESS EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x25E8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADDRESS EQ ISZERO JUMPDEST ISZERO PUSH2 0x2AE8 JUMPI PUSH1 0x28 SLOAD PUSH1 0xFF AND PUSH2 0x263F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726164696E67206973206E6F74206163746976650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x266A JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2787 JUMPI PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x267E SWAP2 PUSH2 0x2EDF JUMP JUMPDEST TIMESTAMP GT PUSH2 0x26A7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2787 JUMPI PUSH1 0x7 SLOAD PUSH2 0x26ED DUP4 PUSH2 0x1C06 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2787 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x27AD JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x27C6 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x29D7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x280B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1A SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x28B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP LT ISZERO PUSH2 0x2887 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374726F6E672048616E64732050726F746F636F6C2061637469766500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1A SLOAD PUSH2 0x289F SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH2 0x3AA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST PUSH1 0x1C SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x291F JUMPI PUSH1 0x1E SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x291F PUSH2 0x2FA6 JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x8 SLOAD DUP2 LT PUSH2 0x29D5 JUMPI DUP1 ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x0 PUSH2 0x2963 PUSH1 0x11 SLOAD PUSH2 0x1C06 PUSH1 0x13 SLOAD PUSH2 0x1C06 PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x29C3 JUMPI PUSH1 0x0 PUSH2 0x299E PUSH2 0x2991 PUSH1 0x11 SLOAD PUSH2 0x1C06 PUSH1 0x13 SLOAD PUSH2 0x1C06 PUSH1 0x17 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x149F SWAP1 DUP6 PUSH2 0x2C07 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x29B6 JUMPI PUSH2 0x29B3 DUP4 DUP4 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x29C0 DUP3 DUP3 PUSH2 0x3055 JUMP JUMPDEST POP POP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x29D3 JUMPI PUSH2 0x29D3 SELFBALANCE PUSH2 0x30E5 JUMP JUMPDEST POP JUMPDEST POP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x2A03 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2AE8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2AE8 JUMPI PUSH1 0x7 SLOAD PUSH2 0x2A4E DUP4 PUSH2 0x1C06 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST GT ISZERO PUSH2 0x2AE8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x2E77616C6C65742062616C616E6365206166746572207472616E73666572206D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x757374206265206C657373207468616E206D61782077616C6C657420616D6F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x6E74000000000000000000000000000000000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x2B27 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x2B30 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0x2B3C DUP5 DUP5 DUP5 DUP5 PUSH2 0x3225 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2B66 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0x39C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2B73 DUP5 DUP7 PUSH2 0x3B37 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBE DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x32C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BBE DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2B42 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C16 JUMPI POP PUSH1 0x0 PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP4 DUP6 PUSH2 0x3ACE JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x2C2F DUP6 DUP4 PUSH2 0x3ABA JUMP JUMPDEST EQ PUSH2 0x2BBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7700000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2D2A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x25 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAD5C464800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xAD5C4648 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DCF SWAP2 SWAP1 PUSH2 0x37B2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2E09 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x25 SLOAD PUSH2 0x2E2F SWAP2 ADDRESS SWAP2 AND DUP5 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x40 MLOAD PUSH32 0x791AC94700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x2E81 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x3A32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2EEC DUP4 DUP6 PUSH2 0x3AA2 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2BBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB0 PUSH2 0x1539 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2FBA JUMPI POP JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 GT ISZERO PUSH2 0x2FD3 JUMPI PUSH1 0x1D SSTORE PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1C SLOAD PUSH1 0x1D SLOAD PUSH1 0x0 SWAP2 PUSH2 0x3003 SWAP2 PUSH2 0x3E8 SWAP2 PUSH2 0x149F SWAP2 PUSH2 0x100 SWAP1 SWAP2 DIV PUSH2 0xFFFF AND SWAP1 PUSH2 0x2FFD SWAP1 DUP5 PUSH2 0x2C07 JUMP JUMPDEST SWAP1 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x3021 JUMPI PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1D SLOAD PUSH1 0x1F SSTORE JUMPDEST PUSH1 0x1E SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x3040 JUMPI POP PUSH1 0x1F SLOAD PUSH2 0x303C SWAP1 PUSH1 0x2 PUSH2 0x2C07 JUMP JUMPDEST DUP3 LT ISZERO JUMPDEST ISZERO PUSH2 0x12E9 JUMPI POP PUSH1 0x1E DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1D SSTORE JUMP JUMPDEST PUSH1 0x28 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x308E DUP4 PUSH1 0x2 PUSH2 0x2B7C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x309C DUP5 DUP4 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP SELFBALANCE PUSH2 0x30B1 PUSH2 0x30AC DUP6 DUP6 PUSH2 0x2EDF JUMP JUMPDEST PUSH2 0x2CA2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30BD SELFBALANCE DUP4 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x2EAF JUMPI PUSH2 0x2EAF DUP4 PUSH2 0x30E0 PUSH2 0x30D6 DUP9 DUP9 PUSH2 0x2EDF JUMP JUMPDEST PUSH2 0x149F DUP6 DUP10 PUSH2 0x2C07 JUMP JUMPDEST PUSH2 0x32F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3104 PUSH1 0x17 SLOAD PUSH2 0x1C06 PUSH1 0x13 SLOAD PUSH1 0x15 SLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x12E9 JUMPI PUSH1 0x0 PUSH2 0x3127 DUP3 PUSH2 0x149F PUSH1 0x15 SLOAD DUP7 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3144 DUP4 PUSH2 0x149F PUSH1 0x17 SLOAD DUP8 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3156 DUP3 PUSH2 0x2FFD DUP8 DUP7 PUSH2 0x2BC5 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x319A JUMPI PUSH1 0x21 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3198 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP2 ISZERO PUSH2 0x31DC JUMPI PUSH1 0x22 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x31DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST DUP1 ISZERO PUSH2 0x321E JUMPI PUSH1 0x23 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x321C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x3283 JUMPI PUSH2 0x3283 PUSH1 0xD DUP1 SLOAD PUSH1 0xE SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0xA SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x10 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0xC SSTORE PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE SWAP2 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE DUP2 SWAP1 SSTORE PUSH1 0x15 DUP1 SLOAD PUSH1 0x16 SSTORE PUSH1 0x11 DUP1 SLOAD PUSH1 0x12 SSTORE PUSH1 0x17 DUP1 SLOAD PUSH1 0x18 SSTORE PUSH1 0x13 DUP1 SLOAD PUSH1 0x14 SSTORE SWAP3 DUP5 SWAP1 SSTORE SWAP1 DUP4 SWAP1 SSTORE DUP3 SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH2 0x328E DUP5 DUP5 DUP5 PUSH2 0x33C7 JUMP JUMPDEST PUSH2 0x2B3C PUSH1 0xE SLOAD PUSH1 0xD SSTORE PUSH1 0xA SLOAD PUSH1 0x9 SSTORE PUSH1 0x10 SLOAD PUSH1 0xF SSTORE PUSH1 0xC SLOAD PUSH1 0xB SSTORE PUSH1 0x16 SLOAD PUSH1 0x15 SSTORE PUSH1 0x12 SLOAD PUSH1 0x11 SSTORE PUSH1 0x18 SLOAD PUSH1 0x17 SSTORE PUSH1 0x14 SLOAD PUSH1 0x13 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x32E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC2 SWAP2 SWAP1 PUSH2 0x39C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2B73 DUP5 DUP7 PUSH2 0x3ABA JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH2 0x3309 SWAP1 ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x25 SLOAD PUSH1 0x24 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xF305D71900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x84 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xF305D719 SWAP1 DUP4 SWAP1 PUSH1 0xC4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x338E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x321E SWAP2 SWAP1 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x33F9 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO PUSH2 0x3424 JUMPI POP PUSH1 0x25 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3498 JUMPI PUSH2 0x3444 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0xD SLOAD DUP6 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD PUSH2 0x345F SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xF SLOAD PUSH2 0x3477 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xB SLOAD PUSH2 0x3492 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x34C3 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST ISZERO PUSH2 0x3537 JUMPI PUSH2 0x34E3 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x15 SLOAD DUP6 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x11 SLOAD PUSH2 0x34FE SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x17 SLOAD PUSH2 0x3516 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x13 SLOAD PUSH2 0x3531 SWAP1 PUSH2 0x3E8 SWAP1 PUSH2 0x149F SWAP1 DUP6 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 AND EQ DUP1 ISZERO SWAP1 PUSH2 0x3563 JUMPI POP PUSH1 0x26 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x3617 JUMPI PUSH2 0x358E PUSH1 0x64 PUSH2 0x149F PUSH1 0x19 SLOAD PUSH2 0x1499 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x15 SLOAD DUP10 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x35BD PUSH1 0x64 PUSH2 0x149F PUSH1 0x19 SLOAD PUSH2 0x1499 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x11 SLOAD DUP10 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 MSTORE PUSH1 0x19 SLOAD PUSH1 0x17 SLOAD PUSH2 0x35E2 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x149F SWAP2 SWAP1 PUSH2 0x1499 SWAP1 PUSH2 0x3E8 SWAP1 DUP5 SWAP1 DUP10 SWAP1 PUSH2 0x2C07 JUMP JUMPDEST DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x3611 PUSH1 0x64 PUSH2 0x149F PUSH1 0x19 SLOAD PUSH2 0x1499 PUSH2 0x3E8 PUSH2 0x149F PUSH1 0x13 SLOAD DUP10 PUSH2 0x2C07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE JUMPDEST PUSH2 0x3646 DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x2FFD DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2FFD DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2FFD DUP8 PUSH1 0x20 ADD MLOAD DUP10 PUSH2 0x2BC5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x366E SWAP1 DUP4 PUSH2 0x2BC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x80 DUP5 ADD MLOAD SWAP2 DUP7 AND DUP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x36A4 SWAP2 PUSH2 0x2EDF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x3711 PUSH2 0x36FB DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x1C06 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1C06 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD PUSH2 0x2EDF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2EDF JUMP JUMPDEST ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 DUP4 ADD MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP3 SWAP1 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37A7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2BBE DUP2 PUSH2 0x3BF6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37C3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2BBE DUP2 PUSH2 0x3BF6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37E0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x37EB DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x37FB DUP2 PUSH2 0x3BF6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x381A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3825 DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3835 DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3858 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3863 DUP2 PUSH2 0x3BF6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3882 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2BBE DUP2 PUSH2 0x3C0B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x389F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x38AA DUP2 PUSH2 0x3C0B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x37FB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x38D2 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x38DD DUP2 PUSH2 0x3C0B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x37FB DUP2 PUSH2 0x3C19 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3901 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x390A DUP5 PUSH2 0x3773 JUMP JUMPDEST SWAP3 POP PUSH2 0x3918 PUSH1 0x20 DUP6 ADD PUSH2 0x3773 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x3928 DUP2 PUSH2 0x3C19 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3944 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x395C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3977 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x39A5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39ED JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x39D1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x39FE JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A81 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3A5C JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3AB5 JUMPI PUSH2 0x3AB5 PUSH2 0x3B98 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3AC9 JUMPI PUSH2 0x3AC9 PUSH2 0x3BC7 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3B06 JUMPI PUSH2 0x3B06 PUSH2 0x3B98 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3B2E JUMPI PUSH2 0x3B2E PUSH2 0x3B98 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3B49 JUMPI PUSH2 0x3B49 PUSH2 0x3B98 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3B5D JUMPI PUSH2 0x3B5D PUSH2 0x3BC7 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x3B94 JUMPI PUSH2 0x3B94 PUSH2 0x3B98 JUMP JUMPDEST SUB SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365A2646970667358221220 0xD4 GASLIMIT 0xBA 0x2F 0xDB 0xA5 SHR 0xB8 0xD3 0xEE 0x4B 0xED 0x2C 0xED 0xB6 0xE9 0xCD SHL PUSH10 0xC0317A471AD158AF8FC1 0x2F LT SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "8181:22370:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8801:48;;;;;;;;;;;;;;;;;;;7136:25:1;;;7124:2;7109:18;8801:48:0;;;;;;;;12253:92;;;;;;;;;;-1:-1:-1;12333:5:0;;;;;;;;;;;;;;;;;12253:92;;;;;;;:::i;13202:160::-;;;;;;;;;;-1:-1:-1;13202:160:0;;;;;:::i;:::-;;:::i;:::-;;;6188:14:1;;6181:22;6163:41;;6151:2;6136:18;13202:160:0;6118:92:1;28204:120:0;;;;;;;;;;-1:-1:-1;28204:120:0;;;;;:::i;:::-;;:::i;:::-;;12551:95;;;;;;;;;;-1:-1:-1;8636:18:0;12551:95;;28054:140;;;;;;;;;;-1:-1:-1;28054:140:0;;;;;:::i;:::-;;:::i;13368:308::-;;;;;;;;;;-1:-1:-1;13368:308:0;;;;;:::i;:::-;;:::i;9542:36::-;;;;;;;;;;;;;;;;25810:323;;;;;;;;;;-1:-1:-1;25810:323:0;;;;;:::i;:::-;;:::i;9036:35::-;;;;;;;;;;;;;;;;22717:182;;;;;;;;;;-1:-1:-1;22717:182:0;;;;;:::i;:::-;;:::i;11041:31::-;;;;;;;;;;-1:-1:-1;11041:31:0;;;;;;;;;;;12453:92;;;;;;;;;;-1:-1:-1;12453:92:0;;8412:1;17883:36:1;;17871:2;17856:18;12453:92:0;17838:87:1;11008:27:0;;;;;;;;;;-1:-1:-1;11008:27:0;;;;;;;;;;;11078:31;;;;;;;;;;-1:-1:-1;11078:31:0;;;;;;;;;;;12775:96;;;;;;;;;;-1:-1:-1;12775:96:0;;;;;:::i;:::-;-1:-1:-1;;;;;12851:13:0;12828:4;12851:13;;;:4;:13;;;;;;;;;12775:96;22038:142;;;;;;;;;;;;;:::i;25053:111::-;;;;;;;;;;-1:-1:-1;25053:111:0;;;;;:::i;:::-;;:::i;10869:28::-;;;;;;;;;;-1:-1:-1;10869:28:0;;;;-1:-1:-1;;;;;10869:28:0;;;;;;-1:-1:-1;;;;;5011:55:1;;;4993:74;;4981:2;4966:18;10869:28:0;4948:125:1;25292:95:0;;;;;;;;;;-1:-1:-1;25292:95:0;;;;;:::i;:::-;;:::i;22186:85::-;;;;;;;;;;;;;:::i;8745:50::-;;;;;;;;;;;;;;;;22485:226;;;;;;;;;;;;;:::i;12652:117::-;;;;;;;;;;-1:-1:-1;12652:117:0;;;;;:::i;:::-;-1:-1:-1;;;;;12744:18:0;12718:7;12744:18;;;:9;:18;;;;;;;12652:117;3851:147;;;;;;;;;;;;;:::i;28578:173::-;;;;;;;;;;-1:-1:-1;28578:173:0;;;;;:::i;:::-;;:::i;9911:44::-;;;;;;;;;;;;;;;;10277:33;;;;;;;;;;-1:-1:-1;10277:33:0;;;;;;;;;;;;;;;;;;;6905:14:1;;6898:22;6880:41;;6969:10;6957:23;;;6952:2;6937:18;;6930:51;6853:18;10277:33:0;6835:152:1;29861:688:0;;;;;;;;;;;;;:::i;9414:36::-;;;;;;;;;;;;;;;;2954:77;;;;;;;;;;-1:-1:-1;2992:7:0;3018:6;-1:-1:-1;;;;;3018:6:0;2954:77;;21953:79;;;;;;;;;;;;;:::i;19632:416::-;;;;;;;;;;;;;:::i;12351:96::-;;;;;;;;;;-1:-1:-1;12433:7:0;;;;;;;;;;;;;;;;;12351:96;;27812:86;;;;;;;;;;;;;:::i;28757:538::-;;;;;;;;;;-1:-1:-1;28757:538:0;;;;;:::i;:::-;;:::i;:::-;;;;17576:25:1;;;17632:2;17617:18;;17610:34;;;;17660:18;;;17653:34;17718:2;17703:18;;17696:34;17563:3;17548:19;28757:538:0;17530:206:1;25664:140:0;;;;;;;;;;-1:-1:-1;25664:140:0;;;;;:::i;:::-;;:::i;12881:166::-;;;;;;;;;;-1:-1:-1;12881:166:0;;;;;:::i;:::-;;:::i;22277:202::-;;;;;;;;;;;;;:::i;9286:30::-;;;;;;;;;;;;;;;;9161:35;;;;;;;;;;;;;;;;9670:36;;;;;;;;;;;;;;;;10485:32;;;;;;;;;;-1:-1:-1;10485:32:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6485:14:1;;6478:22;6460:41;;6549:6;6537:19;;;6532:2;6517:18;;6510:47;6573:18;;;6566:34;;;;6643:14;6636:22;6631:2;6616:18;;6609:50;6690:3;6675:19;;6668:35;6447:3;6432:19;10485:32:0;6414:295:1;9798:31:0;;;;;;;;;;;;;;;;28331:120;;;;;;;;;;-1:-1:-1;28331:120:0;;;;;:::i;:::-;;:::i;21780:167::-;;;;;;;;;;-1:-1:-1;21780:167:0;;;;;:::i;:::-;;:::i;25565:89::-;;;;;;;;;;;;;:::i;27904:140::-;;;;;;;;;;-1:-1:-1;27904:140:0;;;;;:::i;:::-;;:::i;8911:35::-;;;;;;;;;;;;;;;;13053:143;;;;;;;;;;-1:-1:-1;13053:143:0;;;;;:::i;:::-;-1:-1:-1;;;;;13162:18:0;;;13136:7;13162:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;13053:143;28457:115;;;;;;;;;;-1:-1:-1;28457:115:0;;;;;:::i;:::-;;:::i;26139:823::-;;;;;;;;;;-1:-1:-1;26139:823:0;;;;;:::i;:::-;;:::i;25170:112::-;;;;;;;;;;-1:-1:-1;25170:112:0;;;;;:::i;:::-;;:::i;3302:198::-;;;;;;;;;;-1:-1:-1;3302:198:0;;;;;:::i;:::-;;:::i;26968:838::-;;;;;;;;;;-1:-1:-1;26968:838:0;;;;;:::i;:::-;;:::i;29301:554::-;;;;;;;;;;-1:-1:-1;29301:554:0;;;;;:::i;:::-;;:::i;10938:31::-;;;;;;;;;;-1:-1:-1;10938:31:0;;;;;;;;25393:166;;;;;;;;;;-1:-1:-1;25393:166:0;;;;;:::i;:::-;;:::i;13202:160::-;13279:4;13295:39;818:10;13318:7;13327:6;13295:8;:39::i;:::-;-1:-1:-1;13351:4:0;13202:160;;;;;:::o;28204:120::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;;;;;;;;;28291:12:::1;:26:::0;;;::::1;-1:-1:-1::0;;;;;28291:26:0;;;::::1;::::0;;;::::1;::::0;;28204:120::o;28054:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;28151:17:::1;:36:::0;;;::::1;-1:-1:-1::0;;;;;28151:36:0;;;::::1;::::0;;;::::1;::::0;;28054:140::o;13368:308::-;13468:4;13484:36;13494:6;13502:9;13513:6;13484:9;:36::i;:::-;13530:118;13539:6;818:10;13559:88;13597:6;13559:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13559:19:0;;;;;;:11;:19;;;;;;;;818:10;13559:33;;;;;;;;;;:37;:88::i;:::-;13530:8;:118::i;:::-;-1:-1:-1;13665:4:0;13368:308;;;;;:::o;25810:323::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;25921:17:::1;8636:18;25933:4;25921:11;:17::i;:::-;25902:15;:36;;25894:91;;;::::0;-1:-1:-1;;;25894:91:0;;12282:2:1;25894:91:0::1;::::0;::::1;12264:21:1::0;12321:2;12301:18;;;12294:30;12360:34;12340:18;;;12333:62;12431:12;12411:18;;;12404:40;12461:19;;25894:91:0::1;12254:232:1::0;25894:91:0::1;8636:18;26003:15;:26;;25995:87;;;::::0;-1:-1:-1;;;25995:87:0;;13866:2:1;25995:87:0::1;::::0;::::1;13848:21:1::0;13905:2;13885:18;;;13878:30;13944:34;13924:18;;;13917:62;14015:18;13995;;;13988:46;14051:19;;25995:87:0::1;13838:238:1::0;25995:87:0::1;26092:16;:34:::0;25810:323::o;22717:182::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;22805:38:::1;::::0;;;;22837:4:::1;22805:38;::::0;::::1;4993:74:1::0;22788:14:0::1;::::0;-1:-1:-1;;;;;22805:23:0;::::1;::::0;::::1;::::0;4966:18:1;;22805:38:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22788:55;;22860:5;-1:-1:-1::0;;;;;22853:22:0::1;;22876:7;2992::::0;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77;22876:7:::1;22853:39;::::0;;::::1;::::0;;;;;;-1:-1:-1;;;;;5270:55:1;;;22853:39:0::1;::::0;::::1;5252:74:1::0;5342:18;;;5335:34;;;5225:18;;22853:39:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3145:1;22717:182:::0;:::o;22038:142::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;22101:8:::1;::::0;;;::::1;;;22093:51;;;::::0;-1:-1:-1;;;22093:51:0;;8041:2:1;22093:51:0::1;::::0;::::1;8023:21:1::0;8080:2;8060:18;;;8053:30;8119:32;8099:18;;;8092:60;8169:18;;22093:51:0::1;8013:180:1::0;22093:51:0::1;22154:11;:19:::0;;-1:-1:-1;;22154:19:0::1;::::0;;22038:142::o;25053:111::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;-1:-1:-1;;;;;25123:27:0::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;25123:34:0::1;25153:4;25123:34;::::0;;25053:111::o;25292:95::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;-1:-1:-1;;;;;25359:13:0::1;25375:5;25359:13:::0;;;:4:::1;:13:::0;;;;;:21;;-1:-1:-1;;25359:21:0::1;::::0;;25292:95::o;22186:85::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;22248:8:::1;:16:::0;;;::::1;::::0;;22186:85::o;22485:226::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;22567:21:::1;22602:22:::0;;22598:107:::1;;2992:7:::0;3018:6;;22640:54:::1;::::0;-1:-1:-1;;;;;3018:6:0;;;;22640:54;::::1;;;::::0;22675:18;;22640:54;2992:7;22640:54;22675:18;3018:6;22640:54;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;22598:107;3145:1;22485:226::o:0;3851:147::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;3959:1:::1;3943:6:::0;;3922:40:::1;::::0;-1:-1:-1;;;;;3943:6:0;;::::1;::::0;3922:40:::1;::::0;3959:1;;3922:40:::1;3989:1;3972:19:::0;;;::::1;::::0;;3851:147::o;28578:173::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;28668:8:::1;:26:::0;;-1:-1:-1;;28668:26:0::1;::::0;::::1;;;::::0;;28724:20:::1;:8:::0;28735:9:::1;28724:20;:::i;:::-;28704:8;:40:::0;;::::1;::::0;;;::::1;;;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;28578:173:0:o;29861:688::-;29923:21;;29905:6;;29919:40;;-1:-1:-1;29958:1:0;;29861:688::o;29919:40::-;29965:20;29988:11;:9;:11::i;:::-;30032:21;;29965:34;;-1:-1:-1;30017:36:0;;:525;;30510:21;;30371:161;;:63;30428:5;30371:39;30510:21;30397:12;30371:25;:39::i;:::-;:56;;:63::i;:::-;:138;;:161::i;:::-;30350:192;;;:::i;:::-;30017:525;;;30265:21;;30126:161;;:63;30183:5;30126:39;:12;30265:21;30126:16;:39::i;:161::-;30010:532;;;29861:688;:::o;21953:79::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;22007:11:::1;:18:::0;;-1:-1:-1;;22007:18:0::1;22021:4;22007:18;::::0;;21953:79::o;19632:416::-;19674:7;19694:16;19712;19748:13;;;;;;;;;-1:-1:-1;;;;;19748:13:0;-1:-1:-1;;;;;19733:41:0;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19693:83;;;;;19790:8;:13;;19802:1;19790:13;:30;;;-1:-1:-1;19807:13:0;;;;19790:30;19786:44;;;19829:1;19822:8;;;;19632:416;:::o;19786:44::-;19871:13;;19856:38;;;;;;;;19906:4;;-1:-1:-1;;;;;19871:13:0;;19856:36;;:38;;;;;;;;;;;;;;19871:13;19856:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19856:55:0;;:185;;19991:50;20023:17;;;;;19991:27;;:17;;20013:4;19991:21;:27::i;:50::-;19856:185;;;19926:50;19958:17;;;;;19926:27;;:17;;19948:4;19926:21;:27::i;:50::-;19849:192;;;;19632:416;:::o;27812:86::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;27871:12:::1;:20:::0;;;::::1;::::0;;27812:86::o;28757:538::-;-1:-1:-1;;;;;28960:28:0;;28831:13;28960:28;;;:19;:28;;;;;;28831:13;;;;;;;;28991:15;-1:-1:-1;28960:115:0;;29074:1;28960:115;;;-1:-1:-1;;;;;29022:28:0;;;;;;:19;:28;;;;;;:49;;29055:15;29022:32;:49::i;:::-;28940:135;-1:-1:-1;29102:20:0;28940:135;29116:5;29102:13;:20::i;:::-;29094:28;-1:-1:-1;29132:18:0;29145:5;29132:18;;:::i;:::-;;-1:-1:-1;29169:19:0;29132:18;29183:4;29169:13;:19::i;:::-;29160:28;-1:-1:-1;29198:17:0;29211:4;29198:17;;:::i;:::-;;-1:-1:-1;29236:17:0;29198;29250:2;29236:13;:17::i;:::-;29225:28;-1:-1:-1;29274:14:0;29286:2;29274:9;:14;:::i;:::-;29263:25;;28757:538;;;;;;:::o;25664:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;25758:25:::1;:39:::0;25664:140::o;12881:166::-;12961:4;12977:42;818:10;13001:9;13012:6;12977:9;:42::i;22277:202::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;22374:4:::1;22330:23;12744:18:::0;;;:9;:18;;;;;;22394:19;;22390:83:::1;;22429:33;22446:15;22429:16;:33::i;28331:120::-:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;28418:12:::1;:26:::0;;;::::1;-1:-1:-1::0;;;;;28418:26:0;;;::::1;::::0;;;::::1;::::0;;28331:120::o;21780:167::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;21865:15:::1;21851:11;:29:::0;21890:10:::1;:22:::0;21922:11:::1;:18:::0;;-1:-1:-1;;21922:18:0::1;21936:4;21922:18;::::0;;21780:167::o;25565:89::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;25627:12:::1;:20:::0;;;::::1;::::0;;25565:89::o;27904:140::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;28001:17:::1;:36:::0;;;::::1;-1:-1:-1::0;;;;;28001:36:0;;;::::1;::::0;;;::::1;::::0;;27904:140::o;28457:115::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;28538:15:::1;:27:::0;28457:115::o;26139:823::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;26274:16:::1;26293:61;26341:12:::0;26293:43:::1;26328:7:::0;26293:43;:12;26310;26293:16:::1;:30::i;:::-;:34:::0;::::1;:43::i;:61::-;26274:80;;26384:3;26372:8;:15;;26364:77;;;::::0;-1:-1:-1;;;26364:77:0;;8804:2:1;26364:77:0::1;::::0;::::1;8786:21:1::0;8843:2;8823:18;;;8816:30;8882:34;8862:18;;;8855:62;8953:19;8933:18;;;8926:47;8990:19;;26364:77:0::1;8776:239:1::0;26364:77:0::1;26459:12;::::0;;;::::1;;;26451:49;;;::::0;-1:-1:-1;;;26451:49:0;;15098:2:1;26451:49:0::1;::::0;::::1;15080:21:1::0;15137:2;15117:18;;;15110:30;15176:26;15156:18;;;15149:54;15220:18;;26451:49:0::1;15070:174:1::0;26451:49:0::1;26511:16;:31:::0;;;26552:16:::1;:31:::0;;;26593:11:::1;:21:::0;;;26624:16:::1;:31:::0;;;26674:24:::1;:43:::0;;;26727:24:::1;:43:::0;;;26780:19:::1;:33:::0;;;26823:24:::1;:43:::0;;;26890:65:::1;::::0;;17576:25:1;;;17632:2;17617:18;;17610:34;;;17660:18;;;17653:34;;;17718:2;17703:18;;17696:34;;;26890:65:0::1;::::0;17563:3:1;17548:19;26890:65:0::1;;;;;;;;3145:1;26139:823:::0;;;;:::o;25170:112::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;-1:-1:-1;;;;;25240:27:0::1;25270:5;25240:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;25240:35:0::1;::::0;;25170:112::o;3302:198::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;-1:-1:-1;;;;;3390:22:0;::::1;3382:73;;;::::0;-1:-1:-1;;;3382:73:0;;9572:2:1;3382:73:0::1;::::0;::::1;9554:21:1::0;9611:2;9591:18;;;9584:30;9650:34;9630:18;;;9623:62;9721:8;9701:18;;;9694:36;9747:19;;3382:73:0::1;9544:228:1::0;3382:73:0::1;3465:28;3484:8;3465:18;:28::i;26968:838::-:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;27104:16:::1;27123:61;27171:12:::0;27123:43:::1;27158:7:::0;27123:43;:12;27140;27123:16:::1;:30::i;:61::-;27104:80;;27214:3;27202:8;:15;;27194:78;;;::::0;-1:-1:-1;;;27194:78:0;;11863:2:1;27194:78:0::1;::::0;::::1;11845:21:1::0;11902:2;11882:18;;;11875:30;11941:34;11921:18;;;11914:62;12012:20;11992:18;;;11985:48;12050:19;;27194:78:0::1;11835:240:1::0;27194:78:0::1;27290:12;::::0;;;::::1;;;27282:49;;;::::0;-1:-1:-1;;;27282:49:0;;15098:2:1;27282:49:0::1;::::0;::::1;15080:21:1::0;15137:2;15117:18;;;15110:30;15176:26;15156:18;;;15149:54;15220:18;;27282:49:0::1;15070:174:1::0;27282:49:0::1;27342:17;:32:::0;;;27384:17:::1;:32:::0;;;27426:12:::1;:22:::0;;;27458:17:::1;:32:::0;;;27509:25:::1;:45:::0;;;27564:25:::1;:45:::0;;;27619:20:::1;:35:::0;;;27664:25:::1;:45:::0;;;27733:66:::1;::::0;;17576:25:1;;;17632:2;17617:18;;17610:34;;;17660:18;;;17653:34;;;17718:2;17703:18;;17696:34;;;27733:66:0::1;::::0;17563:3:1;17548:19;27733:66:0::1;17530:206:1::0;29301:554:0;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;29429:4:::1;29409:17;:24;;;29401:77;;;::::0;-1:-1:-1;;;29401:77:0;;10739:2:1;29401:77:0::1;::::0;::::1;10721:21:1::0;10778:2;10758:18;;;10751:30;10817:34;10797:18;;;10790:62;10888:10;10868:18;;;10861:38;10916:19;;29401:77:0::1;10711:230:1::0;29401:77:0::1;29488:12;:30:::0;;29528:50;;29488:30;::::1;::::0;::::1;29528:50:::0;;;;;;29488:30:::1;29528:50;::::0;::::1;;;::::0;;;29488:30;;29647:37:::1;;-1:-1:-1::0;29658:21:0;;:26;29647:37:::1;29643:206;;;29700:20;29723:11;:9;:11::i;:::-;29700:34:::0;-1:-1:-1;29752:16:0;;29748:91:::1;;29788:21:::0;:36;-1:-1:-1;;29301:554:0:o;25393:166::-;3076:6;;-1:-1:-1;;;;;3076:6:0;818:10;3076:22;3068:67;;;;-1:-1:-1;;;3068:67:0;;13095:2:1;3068:67:0;;;13077:21:1;;;13114:18;;;13107:30;13173:34;13153:18;;;13146:62;13225:18;;3068:67:0;13067:182:1;3068:67:0;25465:12:::1;::::0;;;::::1;;;25457:65;;;::::0;-1:-1:-1;;;25457:65:0;;14283:2:1;25457:65:0::1;::::0;::::1;14265:21:1::0;14322:2;14302:18;;;14295:30;14361:34;14341:18;;;14334:62;14432:10;14412:18;;;14405:38;14460:19;;25457:65:0::1;14255:230:1::0;25457:65:0::1;-1:-1:-1::0;;;;;25532:13:0::1;;::::0;;;:4:::1;:13:::0;;;;;:20;;-1:-1:-1;;25532:20:0::1;25548:4;25532:20;::::0;;25393:166::o;14855:330::-;-1:-1:-1;;;;;14947:19:0;;14939:68;;;;-1:-1:-1;;;14939:68:0;;15451:2:1;14939:68:0;;;15433:21:1;15490:2;15470:18;;;15463:30;15529:34;15509:18;;;15502:62;15600:6;15580:18;;;15573:34;15624:19;;14939:68:0;15423:226:1;14939:68:0;-1:-1:-1;;;;;15025:21:0;;15017:68;;;;-1:-1:-1;;;15017:68:0;;9979:2:1;15017:68:0;;;9961:21:1;10018:2;9998:18;;;9991:30;10057:34;10037:18;;;10030:62;10128:4;10108:18;;;10101:32;10150:19;;15017:68:0;9951:224:1;15017:68:0;-1:-1:-1;;;;;15095:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;15146:32;;7136:25:1;;;15146:32:0;;7109:18:1;15146:32:0;;;;;;;14855:330;;;:::o;15195:3207::-;-1:-1:-1;;;;;15282:18:0;;15274:68;;;;-1:-1:-1;;;15274:68:0;;14692:2:1;15274:68:0;;;14674:21:1;14731:2;14711:18;;;14704:30;14770:34;14750:18;;;14743:62;14841:7;14821:18;;;14814:35;14866:19;;15274:68:0;14664:227:1;15274:68:0;-1:-1:-1;;;;;15360:16:0;;15352:64;;;;-1:-1:-1;;;15352:64:0;;8400:2:1;15352:64:0;;;8382:21:1;8439:2;8419:18;;;8412:30;8478:34;8458:18;;;8451:62;8549:5;8529:18;;;8522:33;8572:19;;15352:64:0;8372:225:1;15352:64:0;15443:1;15434:6;:10;15426:64;;;;-1:-1:-1;;;15426:64:0;;13456:2:1;15426:64:0;;;13438:21:1;13495:2;13475:18;;;13468:30;13534:34;13514:18;;;13507:62;13605:11;13585:18;;;13578:39;13634:19;;15426:64:0;13428:231:1;15426:64:0;15516:4;15543:7;2992;3018:6;-1:-1:-1;;;;;3018:6:0;;2954:77;15543:7;-1:-1:-1;;;;;15535:15:0;:4;-1:-1:-1;;;;;15535:15:0;;;:32;;;;-1:-1:-1;2992:7:0;3018:6;-1:-1:-1;;;;;15554:13:0;;;3018:6;;15554:13;;15535:32;:57;;;;-1:-1:-1;;;;;;15571:21:0;;15587:4;15571:21;;15535:57;:80;;;;-1:-1:-1;;;;;;15596:19:0;;15610:4;15596:19;;15535:80;15531:2699;;;15639:11;;;;15631:45;;;;-1:-1:-1;;;15631:45:0;;9222:2:1;15631:45:0;;;9204:21:1;9261:2;9241:18;;;9234:30;9300:23;9280:18;;;9273:51;9341:18;;15631:45:0;9194:171:1;15631:45:0;15702:13;;-1:-1:-1;;;;;15694:21:0;;;15702:13;;15694:21;:55;;;;-1:-1:-1;15733:15:0;;-1:-1:-1;;;;;15719:30:0;;;15733:15;;15719:30;;15694:55;15690:420;;;15815:10;;15799:11;;:27;;:15;:27::i;:::-;15780:15;:46;15776:108;;-1:-1:-1;;;;;15850:8:0;;;;;;:4;:8;;;;;:15;;-1:-1:-1;;15850:15:0;15861:4;15850:15;;;15776:108;-1:-1:-1;;;;;15907:22:0;;;;;;:18;:22;;;;;;;;15902:194;;15990:16;;15961:25;15979:6;15961:13;15971:2;-1:-1:-1;;;;;12744:18:0;12718:7;12744:18;;;:9;:18;;;;;;;12652:117;15961:25;:45;;15953:124;;;;-1:-1:-1;;;15953:124:0;;15856:2:1;15953:124:0;;;15838:21:1;15895:2;15875:18;;;15868:30;15934:34;15914:18;;;15907:62;16005:34;15985:18;;;15978:62;16077:4;16056:19;;;16049:33;16099:19;;15953:124:0;15828:296:1;15953:124:0;16141:6;;;;;;;16140:7;:32;;;;-1:-1:-1;16159:13:0;;-1:-1:-1;;;;;16151:21:0;;;16159:13;;16151:21;;16140:32;:55;;;;-1:-1:-1;16182:13:0;;-1:-1:-1;;;;;16176:19:0;;;16182:13;;16176:19;16140:55;16136:1766;;;-1:-1:-1;;;;;16232:10:0;;;;;;:4;:10;;;;;;;;16231:11;:24;;;;-1:-1:-1;;;;;;16247:8:0;;;;;;:4;:8;;;;;;;;16246:9;16231:24;16223:33;;;;;;16324:8;:16;;;16320:233;;;-1:-1:-1;;;;;16391:25:0;;;;;;:19;:25;;;;;;16372:15;:44;;16364:85;;;;-1:-1:-1;;;16364:85:0;;10382:2:1;16364:85:0;;;10364:21:1;10421:2;10401:18;;;10394:30;10460;10440:18;;;10433:58;10508:18;;16364:85:0;10354:178:1;16364:85:0;16517:8;:17;16499:35;;16517:17;;;;;16499:15;:35;:::i;:::-;-1:-1:-1;;;;;16471:25:0;;;;;;:19;:25;;;;;:63;16320:233;16614:12;:20;;;16610:180;;;16667:24;;;;16666:25;16658:68;;;;-1:-1:-1;;;16658:68:0;;11504:2:1;16658:68:0;;;11486:21:1;11543:2;11523:18;;;11516:30;11582:32;11562:18;;;11555:60;11632:18;;16658:68:0;11476:180:1;16658:68:0;16748:23;:21;:23::i;:::-;16873:4;16824:28;12744:18;;;:9;:18;;;;;;16926:15;;16902:39;;16898:969;;16969:24;;16965:679;;17109:1;17025:81;17088:17;;17025:58;17065:17;;17025:35;17047:12;;17025:17;;:21;;:35;;;;:::i;:81::-;:85;17021:601;;;17142:20;17165:130;17213:81;17276:17;;17213:58;17253:17;;17213:35;17235:12;;17213:17;;:21;;:35;;;;:::i;:81::-;17165:17;;:43;;17187:20;17165:21;:43::i;:130::-;17142:153;;17325:15;17402:12;17378:20;:36;17374:155;;17460:38;:20;17485:12;17460:24;:38::i;:::-;17450:48;;17374:155;17558:37;17573:12;17587:7;17558:14;:37::i;:::-;17021:601;;;17694:21;17741:22;;17737:112;;17791:35;17804:21;17791:12;:35::i;:::-;16898:969;;16136:1766;;17927:13;;-1:-1:-1;;;;;17919:21:0;;;17927:13;;17919:21;;;;:44;;-1:-1:-1;17950:13:0;;-1:-1:-1;;;;;17944:19:0;;;17950:13;;17944:19;;17919:44;17916:304;;;-1:-1:-1;;;;;18017:22:0;;;;;;:18;:22;;;;;;;;18012:194;;18100:16;;18071:25;18089:6;18071:13;18081:2;-1:-1:-1;;;;;12744:18:0;12718:7;12744:18;;;:9;:18;;;;;;;12652:117;18071:25;:45;;18063:124;;;;-1:-1:-1;;;18063:124:0;;15856:2:1;18063:124:0;;;15838:21:1;15895:2;15875:18;;;15868:30;15934:34;15914:18;;;15907:62;16005:34;15985:18;;;15978:62;16077:4;16056:19;;;16049:33;16099:19;;18063:124:0;15828:296:1;18063:124:0;-1:-1:-1;;;;;18244:24:0;;;;;;:18;:24;;;;;;;;;:50;;-1:-1:-1;;;;;;18272:22:0;;;;;;:18;:22;;;;;;;;18244:50;18240:96;;;-1:-1:-1;18320:5:0;18240:96;18354:41;18369:4;18375:2;18379:6;18387:7;18354:14;:41::i;:::-;15195:3207;;;;:::o;1849:186::-;1935:7;1970:12;1962:6;;;;1954:29;;;;-1:-1:-1;;;1954:29:0;;;;;;;;:::i;:::-;-1:-1:-1;1993:9:0;2005:5;2009:1;2005;:5;:::i;:::-;1993:17;1849:186;-1:-1:-1;;;;;1849:186:0:o;2286:130::-;2344:7;2370:39;2374:1;2377;2370:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;2363:46;2286:130;-1:-1:-1;;;2286:130:0:o;1709:134::-;1767:7;1793:43;1797:1;1800;1793:43;;;;;;;;;;;;;;;;;:3;:43::i;2041:239::-;2099:7;2122:6;2118:45;;-1:-1:-1;2151:1:0;2144:8;;2118:45;2172:9;2184:5;2188:1;2184;:5;:::i;:::-;2172:17;-1:-1:-1;2216:1:0;2207:5;2211:1;2172:17;2207:5;:::i;:::-;:10;2199:56;;;;-1:-1:-1;;;2199:56:0;;12693:2:1;2199:56:0;;;12675:21:1;12732:2;12712:18;;;12705:30;12771:34;12751:18;;;12744:62;12842:3;12822:18;;;12815:31;12863:19;;2199:56:0;12665:223:1;18411:401:0;11455:6;:13;;;;;;;;18512:16:::1;::::0;;18526:1:::1;18512:16:::0;;;;;::::1;::::0;;-1:-1:-1;;18512:16:0::1;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;18512:16:0::1;18488:40;;18556:4;18538;18543:1;18538:7;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;18538:23:0;;::::1;:7;::::0;;::::1;::::0;;;;;;:23;;;;18581:15:::1;::::0;:22:::1;::::0;;;;;;;:15;;;::::1;::::0;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;18538:7;;18581:22;;;;;:15;:22;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18571:4;18576:1;18571:7;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;18571:32:0;;::::1;:7;::::0;;::::1;::::0;;;;;:32;18645:15:::1;::::0;18613:62:::1;::::0;18630:4:::1;::::0;18645:15:::1;18663:11:::0;18613:8:::1;:62::i;:::-;18685:15;::::0;:120:::1;::::0;;;;-1:-1:-1;;;;;18685:15:0;;::::1;::::0;:66:::1;::::0;:120:::1;::::0;18752:11;;18685:15:::1;::::0;18768:4;;18782::::1;::::0;18789:15:::1;::::0;18685:120:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;11489:6:0;:14;;;;;;-1:-1:-1;;;;18411:401:0:o;1528:175::-;1586:7;;1617:5;1621:1;1617;:5;:::i;:::-;1605:17;;1645:1;1640;:6;;1632:46;;;;-1:-1:-1;;;1632:46:0;;11148:2:1;1632:46:0;;;11130:21:1;11187:2;11167:18;;;11160:30;11226:29;11206:18;;;11199:57;11273:18;;1632:46:0;11120:177:1;3654:187:0;3727:16;3746:6;;-1:-1:-1;;;;;3762:17:0;;;;;;;;;;3794:40;;3746:6;;;;;;;3794:40;;3727:16;3794:40;3654:187;;:::o;18818:808::-;18869:20;18892:11;:9;:11::i;:::-;18869:34;-1:-1:-1;18917:17:0;18913:30;;18936:7;18818:808::o;18913:30::-;18972:21;;18957:36;;18953:169;;;19009:21;:36;19059:24;:32;;-1:-1:-1;;19059:32:0;;;18818:808::o;18953:169::-;19206:12;:30;19157:21;;19132:22;;19157:103;;19255:4;;19157:80;;19206:30;;;;;;;19157:44;;19255:4;19157:38;:44::i;:::-;:48;;:80::i;:103::-;19132:128;;19290:14;19275:12;:29;19271:152;;;19320:24;:31;;-1:-1:-1;;19320:31:0;19347:4;19320:31;;;19391:21;;19365:23;:47;19271:152;19437:24;;;;:74;;;;-1:-1:-1;19481:23:0;;:30;;19509:1;19481:27;:30::i;:::-;19465:12;:46;;19437:74;19433:187;;;-1:-1:-1;19527:24:0;:32;;-1:-1:-1;;19527:32:0;;;19573:21;:36;18818:808::o;20519:507::-;11455:6;:13;;;;;;;;;20636:15:::1;:8:::0;20649:1:::1;20636:12;:15::i;:::-;20621:30:::0;-1:-1:-1;20661:17:0::1;20681:18;:8:::0;20621:30;20681:12:::1;:18::i;:::-;20661:38:::0;-1:-1:-1;20734:21:0::1;20765:48;20782:30;:20:::0;20807:4;20782:24:::1;:30::i;:::-;20765:16;:48::i;:::-;20823:18;20844:41;:21;20870:14:::0;20844:25:::1;:41::i;:::-;20823:62:::0;-1:-1:-1;20899:13:0;;20895:125:::1;;20928:81;20941:9:::0;20952:56:::1;20977:30;:20:::0;21002:4;20977:24:::1;:30::i;:::-;20952:20;:10:::0;20967:4;20952:14:::1;:20::i;:56::-;20928:12;:81::i;21032:742::-:0;21088:17;21108:58;21153:12;;21108:40;21130:17;;21108;;:21;;:40;;;;:::i;:58::-;21088:78;-1:-1:-1;21180:14:0;;21176:592;;21210:24;21237:44;21271:9;21237:29;21248:17;;21237:6;:10;;:29;;;;:::i;:44::-;21210:71;;21295:19;21317:39;21346:9;21317:24;21328:12;;21317:6;:10;;:24;;;;:::i;:39::-;21295:61;-1:-1:-1;21370:18:0;21391:45;21295:61;21391:28;:6;21402:16;21391:10;:28::i;:45::-;21370:66;-1:-1:-1;21454:20:0;;21450:103;;21494:17;;:44;;-1:-1:-1;;;;;21494:17:0;;;;:44;;;;;21521:16;;21494:17;:44;:17;:44;21521:16;21494:17;:44;;;;;;;;;;;;;;;;;;;;;21450:103;21570:15;;21566:88;;21605:12;;:34;;-1:-1:-1;;;;;21605:12:0;;;;:34;;;;;21627:11;;21605:12;:34;:12;:34;21627:11;21605:12;:34;;;;;;;;;;;;;;;;;;;;;21566:88;21671:14;;21667:91;;21705:17;;:38;;-1:-1:-1;;;;;21705:17:0;;;;:38;;;;;21732:10;;21705:17;:38;:17;:38;21732:10;21705:17;:38;;;;;;;;;;;;;;;;;;;;;21667:91;21176:592;;;21032:742;;:::o;22905:250::-;23017:7;23012:58;;23045:14;13751:16;;;13724:24;:43;13804:16;;;13777:24;:43;13852:11;;;13830:19;:33;13900:16;;;13873:24;:43;-1:-1:-1;13935:20:0;;;;13965;;;;13995:15;;;14020:20;;;14079:17;;;14051:25;:45;14134:17;;;14106:25;:45;14184:12;;;14161:20;:35;14234:17;;;14206:25;:45;14270:21;;;;14301;;;;14332:16;;;14358:21;13682:704;23045:14;23079:44;23097:6;23105:9;23116:6;23079:17;:44::i;:::-;23133:15;14458:24;;14439:16;:43;14511:24;;14492:16;:43;14559:19;;14545:11;:33;14607:24;;14588:16;:43;14662:25;;14642:17;:45;14717:25;;14697:17;:45;14767:20;;14752:12;:35;14817:25;;14797:17;:45;14396:453;2422:185;2508:7;2542:12;2535:5;2527:28;;;;-1:-1:-1;;;2527:28:0;;;;;;;;:::i;:::-;-1:-1:-1;2565:9:0;2577:5;2581:1;2577;:5;:::i;20058:453::-;20170:15;;20138:62;;20155:4;;-1:-1:-1;;;;;20170:15:0;20188:11;20138:8;:62::i;:::-;20240:15;;20449:12;;;20240:264;;;;;20313:4;20240:264;;;5752:34:1;5802:18;;;5795:34;;;20240:15:0;5845:18:1;;;5838:34;;;5888:18;;;5881:34;-1:-1:-1;;;;;20449:12:0;;;5931:19:1;;;5924:44;20477:15:0;5984:19:1;;;5977:35;20240:15:0;;;;:31;;20279:9;;5663:19:1;;20240:264:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;23161:1847::-;23257:24;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23257:24:0;23305:13;;-1:-1:-1;;;;;23295:23:0;;;23305:13;;23295:23;:64;;;;-1:-1:-1;23343:15:0;;-1:-1:-1;;;;;23322:37:0;;;23343:15;;23322:37;;23295:64;23291:357;;;23399:38;23432:4;23399:28;23410:16;;23399:6;:10;;:28;;;;:::i;:38::-;23381:15;;;:56;23480:16;;23469:38;;23502:4;;23469:28;;:6;;:10;:28::i;:38::-;23451:56;;23545:11;;23534:33;;23562:4;;23534:23;;:6;;:10;:23::i;:33::-;23521:10;;;:46;23610:16;;23599:38;;23632:4;;23599:28;;:6;;:10;:28::i;:38::-;23581:15;;;:56;23291:357;23671:13;;-1:-1:-1;;;;;23661:23:0;;;23671:13;;23661:23;;;;:53;;-1:-1:-1;23701:13:0;;-1:-1:-1;;;;;23688:26:0;;;23701:13;;23688:26;23661:53;23657:351;;;23755:39;23789:4;23755:29;23766:17;;23755:6;:10;;:29;;;;:::i;:39::-;23737:15;;;:57;23837:17;;23826:39;;23860:4;;23826:29;;:6;;:10;:29::i;:39::-;23808:57;;23903:12;;23892:34;;23921:4;;23892:24;;:6;;:10;:24::i;:34::-;23879:10;;;:47;23969:17;;23958:39;;23992:4;;23958:29;;:6;;:10;:29::i;:39::-;23940:15;;;:57;23657:351;24031:13;;-1:-1:-1;;;;;24021:23:0;;;24031:13;;24021:23;;;;:53;;-1:-1:-1;24061:13:0;;-1:-1:-1;;;;;24048:26:0;;;24061:13;;24048:26;;24021:53;24017:522;;;24118:81;24195:3;24118:72;24164:25;;24119:39;24153:4;24119:29;24130:17;;24119:6;:10;;:29;;;;:::i;24118:81::-;24100:4;:15;;:99;;;;;24231:81;24308:3;24231:72;24277:25;;24232:39;24266:4;24232:29;24243:17;;24232:6;:10;;:29;;;;:::i;24231:81::-;24213:99;;24380:25;;24351:12;;24339:76;;24411:3;;24339:67;;24380:25;24340:34;;24369:4;;24339:67;;24340:6;;:10;:24::i;24339:76::-;24326:4;:10;;:89;;;;;24447:81;24524:3;24447:72;24493:25;;24448:39;24482:4;24448:29;24459:17;;24448:6;:10;;:29;;;;:::i;24447:81::-;24429:15;;;:99;24017:522;24572:85;24641:4;:15;;;24572:64;24625:4;:10;;;24572:48;24604:4;:15;;;24572:27;24583:4;:15;;;24572:6;:10;;:27;;;;:::i;:85::-;24557:12;;;:100;-1:-1:-1;;;;;24696:17:0;;;;;;:9;:17;;;;;;:29;;24718:6;24696:21;:29::i;:::-;-1:-1:-1;;;;;24676:17:0;;;;;;;:9;:17;;;;;;:49;;;;24783:12;;;;24758:20;;;;;;;;;;:38;;:24;:38::i;:::-;24735:9;:20;24745:9;-1:-1:-1;;;;;24735:20:0;-1:-1:-1;;;;;24735:20:0;;;;;;;;;;;;:61;;;;24833:103;24862:73;24919:4;:15;;;24862:52;24903:4;:10;;;24862:36;24882:4;:15;;;24862:4;:15;;;:19;;:36;;;;:::i;:73::-;24851:4;24833:24;;;;:9;:24;;;;;;;:28;:103::i;:::-;24824:4;24806:24;;;;:9;:24;;;;;;;;;:130;;;;24988:12;;;;24960:41;;7136:25:1;;;-1:-1:-1;;;;;24960:41:0;;;;;;;;;;7109:18:1;24960:41:0;;;;;;;23161:1847;;;;:::o;14:188:1:-;93:13;;146:30;135:42;;125:53;;115:2;;192:1;189;182:12;115:2;74:128;;;:::o;207:257::-;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;384:9;371:23;403:31;428:5;403:31;:::i;469:261::-;539:6;592:2;580:9;571:7;567:23;563:32;560:2;;;613:6;605;598:22;560:2;650:9;644:16;669:31;694:5;669:31;:::i;1005:398::-;1073:6;1081;1134:2;1122:9;1113:7;1109:23;1105:32;1102:2;;;1155:6;1147;1140:22;1102:2;1199:9;1186:23;1218:31;1243:5;1218:31;:::i;:::-;1268:5;-1:-1:-1;1325:2:1;1310:18;;1297:32;1338:33;1297:32;1338:33;:::i;:::-;1390:7;1380:17;;;1092:311;;;;;:::o;1408:466::-;1485:6;1493;1501;1554:2;1542:9;1533:7;1529:23;1525:32;1522:2;;;1575:6;1567;1560:22;1522:2;1619:9;1606:23;1638:31;1663:5;1638:31;:::i;:::-;1688:5;-1:-1:-1;1745:2:1;1730:18;;1717:32;1758:33;1717:32;1758:33;:::i;:::-;1512:362;;1810:7;;-1:-1:-1;;;1864:2:1;1849:18;;;;1836:32;;1512:362::o;1879:325::-;1947:6;1955;2008:2;1996:9;1987:7;1983:23;1979:32;1976:2;;;2029:6;2021;2014:22;1976:2;2073:9;2060:23;2092:31;2117:5;2092:31;:::i;:::-;2142:5;2194:2;2179:18;;;;2166:32;;-1:-1:-1;;;1966:238:1:o;2209:255::-;2276:6;2329:2;2317:9;2308:7;2304:23;2300:32;2297:2;;;2350:6;2342;2335:22;2297:2;2387:9;2381:16;2406:28;2428:5;2406:28;:::i;2469:429::-;2533:6;2541;2594:2;2582:9;2573:7;2569:23;2565:32;2562:2;;;2615:6;2607;2600:22;2562:2;2659:9;2646:23;2678:28;2700:5;2678:28;:::i;:::-;2725:5;-1:-1:-1;2782:2:1;2767:18;;2754:32;2830:6;2817:20;;2805:33;;2795:2;;2857:6;2849;2842:22;2903:390;2967:6;2975;3028:2;3016:9;3007:7;3003:23;2999:32;2996:2;;;3049:6;3041;3034:22;2996:2;3093:9;3080:23;3112:28;3134:5;3112:28;:::i;:::-;3159:5;-1:-1:-1;3216:2:1;3201:18;;3188:32;3229;3188;3229;:::i;3298:429::-;3385:6;3393;3401;3454:2;3442:9;3433:7;3429:23;3425:32;3422:2;;;3475:6;3467;3460:22;3422:2;3503:40;3533:9;3503:40;:::i;:::-;3493:50;;3562:49;3607:2;3596:9;3592:18;3562:49;:::i;:::-;3552:59;;3654:2;3643:9;3639:18;3633:25;3667:30;3691:5;3667:30;:::i;:::-;3716:5;3706:15;;;3412:315;;;;;:::o;3732:190::-;3791:6;3844:2;3832:9;3823:7;3819:23;3815:32;3812:2;;;3865:6;3857;3850:22;3812:2;-1:-1:-1;3893:23:1;;3802:120;-1:-1:-1;3802:120:1:o;3927:194::-;3997:6;4050:2;4038:9;4029:7;4025:23;4021:32;4018:2;;;4071:6;4063;4056:22;4018:2;-1:-1:-1;4099:16:1;;4008:113;-1:-1:-1;4008:113:1:o;4126:316::-;4214:6;4222;4230;4283:2;4271:9;4262:7;4258:23;4254:32;4251:2;;;4304:6;4296;4289:22;4251:2;4338:9;4332:16;4322:26;;4388:2;4377:9;4373:18;4367:25;4357:35;;4432:2;4421:9;4417:18;4411:25;4401:35;;4241:201;;;;;:::o;4447:395::-;4533:6;4541;4549;4557;4610:3;4598:9;4589:7;4585:23;4581:33;4578:2;;;4632:6;4624;4617:22;4578:2;-1:-1:-1;;4660:23:1;;;4730:2;4715:18;;4702:32;;-1:-1:-1;4781:2:1;4766:18;;4753:32;;4832:2;4817:18;4804:32;;-1:-1:-1;4568:274:1;-1:-1:-1;4568:274:1:o;7172:662::-;7284:4;7313:2;7342;7331:9;7324:21;7374:6;7368:13;7417:6;7412:2;7401:9;7397:18;7390:34;7442:4;7455:140;7469:6;7466:1;7463:13;7455:140;;;7564:14;;;7560:23;;7554:30;7530:17;;;7549:2;7526:26;7519:66;7484:10;;7455:140;;;7613:6;7610:1;7607:13;7604:2;;;7683:4;7678:2;7669:6;7658:9;7654:22;7650:31;7643:45;7604:2;-1:-1:-1;7750:2:1;7738:15;7755:66;7734:88;7719:104;;;;7825:2;7715:113;;7293:541;-1:-1:-1;;;7293:541:1:o;16311:1029::-;16573:4;16621:3;16610:9;16606:19;16652:6;16641:9;16634:25;16678:2;16716:6;16711:2;16700:9;16696:18;16689:34;16759:3;16754:2;16743:9;16739:18;16732:31;16783:6;16818;16812:13;16849:6;16841;16834:22;16887:3;16876:9;16872:19;16865:26;;16926:2;16918:6;16914:15;16900:29;;16947:4;16960:218;16974:6;16971:1;16968:13;16960:218;;;17039:13;;-1:-1:-1;;;;;17035:62:1;17023:75;;17153:15;;;;17118:12;;;;16996:1;16989:9;16960:218;;;-1:-1:-1;;;;;;;17234:55:1;;;;17229:2;17214:18;;17207:83;-1:-1:-1;;;17321:3:1;17306:19;17299:35;17195:3;16582:758;-1:-1:-1;;;16582:758:1:o;17930:128::-;17970:3;18001:1;17997:6;17994:1;17991:13;17988:2;;;18007:18;;:::i;:::-;-1:-1:-1;18043:9:1;;17978:80::o;18063:120::-;18103:1;18129;18119:2;;18134:18;;:::i;:::-;-1:-1:-1;18168:9:1;;18109:74::o;18188:228::-;18228:7;18354:1;18286:66;18282:74;18279:1;18276:81;18271:1;18264:9;18257:17;18253:105;18250:2;;;18361:18;;:::i;:::-;-1:-1:-1;18401:9:1;;18240:176::o;18421:262::-;18460:7;18492:10;18529:2;18526:1;18522:10;18559:2;18556:1;18552:10;18615:3;18611:2;18607:12;18602:3;18599:21;18592:3;18585:11;18578:19;18574:47;18571:2;;;18624:18;;:::i;:::-;18664:13;;18472:211;-1:-1:-1;;;;18472:211:1:o;18688:125::-;18728:4;18756:1;18753;18750:8;18747:2;;;18761:18;;:::i;:::-;-1:-1:-1;18798:9:1;;18737:76::o;18818:112::-;18850:1;18876;18866:2;;18881:18;;:::i;:::-;-1:-1:-1;18915:9:1;;18856:74::o;18935:193::-;18970:3;19001:66;18994:5;18991:77;18988:2;;;19071:18;;:::i;:::-;19107:15;;18978:150::o;19133:184::-;19185:77;19182:1;19175:88;19282:4;19279:1;19272:15;19306:4;19303:1;19296:15;19322:184;19374:77;19371:1;19364:88;19471:4;19468:1;19461:15;19495:4;19492:1;19485:15;19511:154;-1:-1:-1;;;;;19590:5:1;19586:54;19579:5;19576:65;19566:2;;19655:1;19652;19645:12;19670:118;19756:5;19749:13;19742:21;19735:5;19732:32;19722:2;;19778:1;19775;19768:12;19793:121;19878:10;19871:5;19867:22;19860:5;19857:33;19847:2;;19904:1;19901;19894:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "3099400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ATHvariance()": "infinite",
								"_buyEcosystemFee()": "1097",
								"_buyLiquidityFee()": "1095",
								"_buyMarketingFee()": "1073",
								"_buyTeamFee()": "1051",
								"_maxWalletAmount()": "1052",
								"_sellEcosystemFee()": "1053",
								"_sellLiquidityFee()": "1053",
								"_sellMarketingFee()": "1095",
								"_sellTeamFee()": "1052",
								"addBot(address)": "23010",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22605",
								"balanceOf(address)": "1332",
								"canBlackList()": "1111",
								"canChangeTax()": "1090",
								"canPause()": "1155",
								"configureDiamondFloor(bool,uint16)": "infinite",
								"configureStrongHands(bool,uint32)": "infinite",
								"cooldown()": "1171",
								"cooldownRemaining(address)": "infinite",
								"decimals()": "289",
								"diamondFloor()": "3689",
								"disableBlackListing()": "21866",
								"disablePauseAbility()": "21933",
								"disableTaxChange()": "21911",
								"disableToken()": "22749",
								"enableToken()": "21921",
								"excludeFromFee(address)": "22112",
								"includeInFee(address)": "22149",
								"isBot(address)": "1334",
								"manualSendToken(address)": "infinite",
								"manualsend()": "infinite",
								"manualswap()": "infinite",
								"name()": "infinite",
								"numTokensToSwap()": "1054",
								"openTrading(uint256)": "62005",
								"owner()": "1122",
								"pairPrice()": "infinite",
								"removeBot(address)": "22150",
								"renounceOwnership()": "24284",
								"setBuyTaxes(uint256,uint256,uint256,uint256)": "infinite",
								"setMaxWalletAmount(uint256)": "21442",
								"setSellTaxes(uint256,uint256,uint256,uint256)": "infinite",
								"setTransferTransactionMultiplier(uint256)": "21132",
								"symbol()": "infinite",
								"totalSupply()": "272",
								"tradingOpen()": "1120",
								"transfer(address,uint256)": "infinite",
								"transferFeeIncreaseFactor()": "1073",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapV2Pair()": "1127",
								"updateEcosystemAddress(address)": "22079",
								"updateLpRecipient(address)": "22080",
								"updateMarketingAddress(address)": "22103",
								"updateNumTokensToSwap(uint256)": "21131",
								"updateTeamAddress(address)": "22059"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_checkPriceConditions()": "infinite",
								"_tokenTransfer(address,address,uint256,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_transferStandard(address,address,uint256)": "infinite",
								"addLiquidity(uint256,uint256)": "infinite",
								"removeAllFee()": "infinite",
								"restoreAllFee()": "infinite",
								"sendETHToFee(uint256)": "infinite",
								"swapAndLiquify(uint256,uint256)": "infinite",
								"swapTokensForEth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8181,
									"end": 30551,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8779,
									"end": 8795,
									"name": "PUSH",
									"source": 0,
									"value": "2386F2AB5BCA00"
								},
								{
									"begin": 8745,
									"end": 8795,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 8745,
									"end": 8795,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8834,
									"end": 8849,
									"name": "PUSH",
									"source": 0,
									"value": "38D7EA4C68000"
								},
								{
									"begin": 8801,
									"end": 8849,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8801,
									"end": 8849,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8945,
									"end": 8946,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8911,
									"end": 8946,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 8911,
									"end": 8946,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9014,
									"end": 9030,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 9014,
									"end": 9030,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 8971,
									"end": 9030,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 8971,
									"end": 9030,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9070,
									"end": 9071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9036,
									"end": 9071,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9036,
									"end": 9071,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9139,
									"end": 9155,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9139,
									"end": 9155,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9096,
									"end": 9155,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 9096,
									"end": 9155,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9195,
									"end": 9196,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9161,
									"end": 9196,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 9161,
									"end": 9196,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9264,
									"end": 9280,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 9264,
									"end": 9280,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9221,
									"end": 9280,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 9221,
									"end": 9280,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9315,
									"end": 9316,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9286,
									"end": 9316,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 9286,
									"end": 9316,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9379,
									"end": 9390,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 9379,
									"end": 9390,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9341,
									"end": 9390,
									"name": "PUSH",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 9341,
									"end": 9390,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9449,
									"end": 9450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9414,
									"end": 9450,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9414,
									"end": 9450,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9519,
									"end": 9536,
									"name": "PUSH",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9519,
									"end": 9536,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9475,
									"end": 9536,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 9475,
									"end": 9536,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9577,
									"end": 9578,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9542,
									"end": 9578,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9542,
									"end": 9578,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9647,
									"end": 9664,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 9647,
									"end": 9664,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9603,
									"end": 9664,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 9603,
									"end": 9664,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9705,
									"end": 9706,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9670,
									"end": 9706,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9670,
									"end": 9706,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9775,
									"end": 9792,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9775,
									"end": 9792,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9731,
									"end": 9792,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 9731,
									"end": 9792,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9828,
									"end": 9829,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9798,
									"end": 9829,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9798,
									"end": 9829,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9893,
									"end": 9905,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 9893,
									"end": 9905,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9854,
									"end": 9905,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 9854,
									"end": 9905,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 9954,
									"end": 9955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9911,
									"end": 9955,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9911,
									"end": 9955,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10619,
									"end": 10626,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10619,
									"end": 10624,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 10619,
									"end": 10624,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10619,
									"end": 10624,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 10619,
									"end": 10626,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 10619,
									"end": 10626,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 10619,
									"end": 10626,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 10619,
									"end": 10626,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10619,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "PUSH",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10567,
									"end": 10627,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "PUSH",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10633,
									"end": 10688,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "PUSH",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10694,
									"end": 10754,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10760,
									"end": 10815,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10938,
									"end": 10969,
									"name": "PUSH",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 10938,
									"end": 10969,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10938,
									"end": 10969,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11078,
									"end": 11109,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11078,
									"end": 11109,
									"name": "PUSH",
									"source": 0,
									"value": "101010000"
								},
								{
									"begin": 11078,
									"end": 11109,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11078,
									"end": 11109,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11078,
									"end": 11109,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2865,
									"end": 2883,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2823,
									"end": 2840,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2898,
									"end": 2941,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 11649,
									"end": 11664,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11596,
									"end": 11638,
									"name": "PUSH",
									"source": 0,
									"value": "10ED43C718714EB63D5AA57B78B54704E256024E"
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11649,
									"end": 11683,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11693,
									"end": 11751,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11710,
									"end": 11714,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11596,
									"end": 11638,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8636,
									"end": 8654,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 11693,
									"end": 11701,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 11693,
									"end": 11751,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11693,
									"end": 11751,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 11693,
									"end": 11751,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11795,
									"end": 11819,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11819,
									"name": "PUSH",
									"source": 0,
									"value": "C45A0155"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 11795,
									"end": 11821,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11777,
									"end": 11833,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11833,
									"name": "PUSH",
									"source": 0,
									"value": "C9C65396"
								},
								{
									"begin": 11842,
									"end": 11846,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11865,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11870,
									"name": "PUSH",
									"source": 0,
									"value": "AD5C4648"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 11849,
									"end": 11872,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 861,
									"end": 876,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 843,
									"end": 877,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 913,
									"end": 928,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 913,
									"end": 928,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 893,
									"end": 911,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 893,
									"end": 911,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 893,
									"end": 911,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 886,
									"end": 929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 778,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 778,
									"end": 796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 11777,
									"end": 11873,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11774,
									"name": "PUSH",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11921,
									"end": 11936,
									"name": "PUSH",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 11921,
									"end": 11936,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "95EA7B3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11921,
									"end": 11936,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 11921,
									"end": 11936,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1114,
									"end": 1165,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1181,
									"end": 1199,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1174,
									"end": 1208,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11761,
									"end": 11873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11912,
									"name": "PUSH",
									"source": 0,
									"value": "95EA7B3"
								},
								{
									"begin": 11883,
									"end": 11912,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1087,
									"end": 1105,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 11883,
									"end": 11956,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8636,
									"end": 8654,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 11967,
									"end": 11979,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 11967,
									"end": 11989,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11967,
									"end": 11989,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11967,
									"end": 11989,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12064,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12088,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12088,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12125,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12125,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12116,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12098,
									"end": 12125,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12125,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12125,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12125,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12125,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12128,
									"end": 12132,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12098,
									"end": 12132,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12169,
									"end": 12173,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12175,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12175,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12175,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12175,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12175,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12142,
									"end": 12182,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 818,
									"end": 828,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12055,
									"end": 12078,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2146,
									"end": 2164,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12197,
									"end": 12240,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 11515,
									"end": 12247,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 3031,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2954,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2992,
									"end": 2999,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3018,
									"end": 3024,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 3031,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14855,
									"end": 15185,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 14855,
									"end": 15185,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14947,
									"end": 14966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 14947,
									"end": 14966,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1824,
									"end": 1826,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1827,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1863,
									"end": 1865,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1843,
									"end": 1861,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1836,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1902,
									"end": 1936,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1900,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1875,
									"end": 1937,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "72657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1953,
									"end": 1971,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1980,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1997,
									"end": 2016,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1997,
									"end": 2016,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 14939,
									"end": 15007,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15025,
									"end": 15046,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15025,
									"end": 15046,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1421,
									"end": 1423,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 1424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1460,
									"end": 1462,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1440,
									"end": 1458,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1499,
									"end": 1533,
									"name": "PUSH",
									"source": 1,
									"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1479,
									"end": 1497,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1543,
									"end": 1575,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1611,
									"name": "PUSH",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 1592,
									"end": 1611,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 1393,
									"end": 1617,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 15017,
									"end": 15085,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15106,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15113,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15122,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15131,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15131,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15095,
									"end": 15131,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2198,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "PUSH",
									"source": 0,
									"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2146,
									"end": 2164,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15146,
									"end": 15178,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 14855,
									"end": 15185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14855,
									"end": 15185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14855,
									"end": 15185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14855,
									"end": 15185,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 324,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 158,
									"end": 164,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 150,
									"end": 156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 143,
									"end": 165,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 107,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 105,
									"end": 107,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 205,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 234,
									"end": 265,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 266,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 285,
									"end": 291,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 270,
									"end": 292,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 214,
									"end": 216,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 214,
									"end": 216,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 313,
									"end": 318,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 95,
									"end": 324,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 329,
									"end": 626,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 329,
									"end": 626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 451,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 437,
									"end": 446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 428,
									"end": 435,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 424,
									"end": 447,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 420,
									"end": 452,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 417,
									"end": 419,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 470,
									"end": 476,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 462,
									"end": 468,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 477,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 417,
									"end": 419,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 417,
									"end": 419,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 507,
									"end": 516,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 501,
									"end": 517,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 560,
									"end": 565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 553,
									"end": 566,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 546,
									"end": 567,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 539,
									"end": 544,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 536,
									"end": 568,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 526,
									"end": 528,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 526,
									"end": 528,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 587,
									"end": 593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 579,
									"end": 585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 572,
									"end": 594,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2128,
									"end": 2204,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2128,
									"end": 2204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8181,
									"end": 30551,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d445ba2fdba51cb8d3ee4bed2cedb6e9cd1b69c0317a471ad158af8fc12f109b64736f6c63430008040033",
									".code": [
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "88790A68"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "CAB03471"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "E315A6DA"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "F480FEC2"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "F480FEC2"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "FE0BB982"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "FFB54A99"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "FFECF516"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "E315A6DA"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "E4BF1BED"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "EA2F0B37"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "D55CB78A"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "D55CB78A"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "DB0045EC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "DC44B6A0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "CAB03471"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "CDB3858F"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "D1633649"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "A850673D"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "C469B6DD"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "C469B6DD"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "C5D24189"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "C8607952"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "C95457FF"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "A850673D"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "C3C8CD80"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "9491F94D"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "9491F94D"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "99A7B9BC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "9D82190F"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "88790A68"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "8E360253"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "39A53C4E"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "6C0A24EB"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "729CB3F2"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "729CB3F2"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "72B2AECC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "787A08A6"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "80670F3C"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "6C0A24EB"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "6FC3EAEC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "437823EC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "49BD5A5E"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "5FECD926"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "6AABFF3F"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "39A53C4E"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "3BBAC579"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "3E0F966D"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "248DD232"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "29409395"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "29409395"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "301AD558"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "323BE1C5"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "248DD232"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "27A14FC2"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "2843631D"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "14EB76AC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "14EB76AC"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "2369BF83"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "1A6C43B"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8181,
											"end": 30551,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7126,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8801,
											"end": 8849,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "PUSH",
											"source": 0,
											"value": "4761696E5A696C6C610000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12338,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12253,
											"end": 12345,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6188,
											"end": 6202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6181,
											"end": 6203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6118,
											"end": 6210,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12551,
											"end": 12646,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9542,
											"end": 9578,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9036,
											"end": 9071,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11041,
											"end": 11072,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8413,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17883,
											"end": 17919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17883,
											"end": 17919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17871,
											"end": 17873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17856,
											"end": 17874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12453,
											"end": 12545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 17838,
											"end": 17925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11008,
											"end": 11035,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11109,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12851,
											"end": 12864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12871,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5066,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4948,
											"end": 5073,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8745,
											"end": 8795,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9911,
											"end": 9955,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6905,
											"end": 6919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6969,
											"end": 6979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6957,
											"end": 6980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6952,
											"end": 6954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6835,
											"end": 6987,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9414,
											"end": 9450,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "PUSH",
											"source": 0,
											"value": "5241575200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 12351,
											"end": 12447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17632,
											"end": 17634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17617,
											"end": 17635,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17617,
											"end": 17635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17653,
											"end": 17687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17718,
											"end": 17720,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17703,
											"end": 17721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17703,
											"end": 17721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17696,
											"end": 17730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17563,
											"end": 17566,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17548,
											"end": 17567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 17530,
											"end": 17736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9286,
											"end": 9316,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9196,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9706,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6485,
											"end": 6499,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6500,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6460,
											"end": 6501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6460,
											"end": 6501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6555,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 6537,
											"end": 6556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6537,
											"end": 6556,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6537,
											"end": 6556,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6517,
											"end": 6535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6510,
											"end": 6557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6566,
											"end": 6600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6566,
											"end": 6600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6566,
											"end": 6600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6566,
											"end": 6600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6657,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6636,
											"end": 6658,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6616,
											"end": 6634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6609,
											"end": 6659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6675,
											"end": 6694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6447,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6432,
											"end": 6451,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6414,
											"end": 6709,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8911,
											"end": 8946,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13136,
											"end": 13143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13173,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13180,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13162,
											"end": 13189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13053,
											"end": 13196,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10938,
											"end": 10969,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13295,
											"end": 13334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13318,
											"end": 13325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13327,
											"end": 13333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13295,
											"end": 13303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 13295,
											"end": 13334,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13295,
											"end": 13334,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 13295,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13351,
											"end": 13355,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13202,
											"end": 13362,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28303,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28291,
											"end": 28317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28324,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28168,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28187,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28054,
											"end": 28194,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13468,
											"end": 13472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13484,
											"end": 13520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 13494,
											"end": 13500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13502,
											"end": 13511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13513,
											"end": 13519,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13484,
											"end": 13493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 13484,
											"end": 13520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13484,
											"end": 13520,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 13484,
											"end": 13520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 13539,
											"end": 13545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 13597,
											"end": 13603,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13570,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13578,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13559,
											"end": 13596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 13559,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 13530,
											"end": 13648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13530,
											"end": 13648,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 13530,
											"end": 13648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13665,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13368,
											"end": 13676,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25921,
											"end": 25938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 25933,
											"end": 25937,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 25921,
											"end": 25932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 25921,
											"end": 25938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25921,
											"end": 25938,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 25921,
											"end": 25938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25902,
											"end": 25917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25902,
											"end": 25938,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25902,
											"end": 25938,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12282,
											"end": 12284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12264,
											"end": 12285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12321,
											"end": 12323,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 12301,
											"end": 12319,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12301,
											"end": 12319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12294,
											"end": 12324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12394,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E20302E3125"
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12340,
											"end": 12358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12333,
											"end": 12395,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12431,
											"end": 12443,
											"name": "PUSH",
											"source": 1,
											"value": "206F6620737570706C7900000000000000000000000000000000000000000000"
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12411,
											"end": 12429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12404,
											"end": 12444,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12480,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12461,
											"end": 12480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 12254,
											"end": 12486,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 25894,
											"end": 25985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 26003,
											"end": 26018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26003,
											"end": 26029,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26003,
											"end": 26029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13866,
											"end": 13868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13848,
											"end": 13869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13905,
											"end": 13907,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13885,
											"end": 13903,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13885,
											"end": 13903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13885,
											"end": 13903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13878,
											"end": 13908,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13978,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E74206D757374206265206C657373207468616E206F722065717561"
										},
										{
											"begin": 13924,
											"end": 13942,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13924,
											"end": 13942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13924,
											"end": 13942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13917,
											"end": 13979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14015,
											"end": 14033,
											"name": "PUSH",
											"source": 1,
											"value": "6C20746F20746F74616C537570706C7900000000000000000000000000000000"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13988,
											"end": 14034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14051,
											"end": 14070,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14051,
											"end": 14070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13838,
											"end": 14076,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 25995,
											"end": 26082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 26108,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26092,
											"end": 26126,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25810,
											"end": 26133,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22837,
											"end": 22841,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4993,
											"end": 5067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22788,
											"end": 22802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22788,
											"end": 22802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22805,
											"end": 22828,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22828,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22805,
											"end": 22828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4966,
											"end": 4984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 22805,
											"end": 22843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22788,
											"end": 22843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22788,
											"end": 22843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22860,
											"end": 22865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22853,
											"end": 22875,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22875,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22876,
											"end": 22883,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22876,
											"end": 22883,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 22876,
											"end": 22883,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5270,
											"end": 5325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5325,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5325,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5252,
											"end": 5326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5225,
											"end": 5243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22853,
											"end": 22892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22717,
											"end": 22899,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22109,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22101,
											"end": 22109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22109,
											"name": "PUSH",
											"source": 0,
											"value": "10000"
										},
										{
											"begin": 22101,
											"end": 22109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22109,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22101,
											"end": 22109,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22101,
											"end": 22109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8043,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8080,
											"end": 8082,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8053,
											"end": 8083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8151,
											"name": "PUSH",
											"source": 1,
											"value": "7468697320636F6E74726163742063616E6E6F74206265207061757365640000"
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 8013,
											"end": 8193,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 22093,
											"end": 22144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22165,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22154,
											"end": 22173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22154,
											"end": 22173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22154,
											"end": 22173,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25150,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25123,
											"end": 25157,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25153,
											"end": 25157,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25123,
											"end": 25157,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25123,
											"end": 25157,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25053,
											"end": 25164,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25375,
											"end": 25380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25359,
											"end": 25380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25359,
											"end": 25380,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25292,
											"end": 25387,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22248,
											"end": 22256,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22248,
											"end": 22264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22248,
											"end": 22264,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22248,
											"end": 22264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFF"
										},
										{
											"begin": 22248,
											"end": 22264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22248,
											"end": 22264,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22248,
											"end": 22264,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22271,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22567,
											"end": 22588,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 22602,
											"end": 22624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22602,
											"end": 22624,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22598,
											"end": 22705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 22598,
											"end": 22705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22675,
											"end": 22693,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22675,
											"end": 22693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22675,
											"end": 22693,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22640,
											"end": 22694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22598,
											"end": 22705,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 22598,
											"end": 22705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22485,
											"end": 22711,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3922,
											"end": 3962,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3998,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28676,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28694,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28724,
											"end": 28744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 28724,
											"end": 28732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28735,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 28724,
											"end": 28744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 28724,
											"end": 28744,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28724,
											"end": 28744,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 28724,
											"end": 28744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28712,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF"
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28704,
											"end": 28744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28578,
											"end": 28751,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29923,
											"end": 29944,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 29923,
											"end": 29944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29905,
											"end": 29911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29905,
											"end": 29911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29919,
											"end": 29959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 29919,
											"end": 29959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29958,
											"end": 29959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29958,
											"end": 29959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29919,
											"end": 29959,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 29919,
											"end": 29959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29965,
											"end": 29985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29988,
											"end": 29999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 29988,
											"end": 29997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 29988,
											"end": 29999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29988,
											"end": 29999,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 29988,
											"end": 29999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30032,
											"end": 30053,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 30032,
											"end": 30053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29965,
											"end": 29999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29965,
											"end": 29999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30017,
											"end": 30053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30017,
											"end": 30053,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30017,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 30017,
											"end": 30542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30510,
											"end": 30531,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 30510,
											"end": 30531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30371,
											"end": 30532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 30371,
											"end": 30532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30371,
											"end": 30434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 30428,
											"end": 30433,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 30371,
											"end": 30410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 30510,
											"end": 30531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30397,
											"end": 30409,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30371,
											"end": 30396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 30371,
											"end": 30410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30371,
											"end": 30410,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 30371,
											"end": 30410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30371,
											"end": 30427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30371,
											"end": 30427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 30371,
											"end": 30434,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30371,
											"end": 30434,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 30371,
											"end": 30434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30371,
											"end": 30509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30371,
											"end": 30509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 30371,
											"end": 30532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30371,
											"end": 30532,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 30371,
											"end": 30532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 30350,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 30350,
											"end": 30542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30350,
											"end": 30542,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 30350,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30017,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 30017,
											"end": 30542,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30017,
											"end": 30542,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 30017,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30265,
											"end": 30286,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 30265,
											"end": 30286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 30126,
											"end": 30287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 30183,
											"end": 30188,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 30126,
											"end": 30138,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30265,
											"end": 30286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30126,
											"end": 30142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 30126,
											"end": 30165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30126,
											"end": 30287,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 30126,
											"end": 30287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30010,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29861,
											"end": 30549,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 22018,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22021,
											"end": 22025,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22007,
											"end": 22025,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21953,
											"end": 22032,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19674,
											"end": 19681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19694,
											"end": 19710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19712,
											"end": 19728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19748,
											"end": 19761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19733,
											"end": 19774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19774,
											"name": "PUSH",
											"source": 0,
											"value": "902F1AC"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 19733,
											"end": 19776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19693,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19693,
											"end": 19776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19693,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19693,
											"end": 19776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19693,
											"end": 19776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19790,
											"end": 19798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19790,
											"end": 19803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19790,
											"end": 19803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19802,
											"end": 19803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19803,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19790,
											"end": 19820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19790,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 19790,
											"end": 19820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19807,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19807,
											"end": 19820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19820,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19790,
											"end": 19820,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 19790,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19786,
											"end": 19830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 19786,
											"end": 19830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19829,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19822,
											"end": 19830,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19822,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19822,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19822,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19786,
											"end": 19830,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 19786,
											"end": 19830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19871,
											"end": 19884,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 19871,
											"end": 19884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "DFE168100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19906,
											"end": 19910,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19906,
											"end": 19910,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19871,
											"end": 19884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19871,
											"end": 19884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19892,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 19856,
											"end": 19892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19871,
											"end": 19884,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 19856,
											"end": 19894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19856,
											"end": 19911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 19911,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 19856,
											"end": 20041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 20023,
											"end": 20040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20023,
											"end": 20040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20023,
											"end": 20040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20023,
											"end": 20040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20023,
											"end": 20040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 20018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 19991,
											"end": 20018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 20008,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 20008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20013,
											"end": 20017,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 19991,
											"end": 20012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 19991,
											"end": 20018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19991,
											"end": 20041,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 19991,
											"end": 20041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 20041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 19856,
											"end": 20041,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19856,
											"end": 20041,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 19856,
											"end": 20041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 19958,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19958,
											"end": 19975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19958,
											"end": 19975,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19958,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19958,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 19926,
											"end": 19953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19943,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19948,
											"end": 19952,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 19926,
											"end": 19947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 19926,
											"end": 19953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19926,
											"end": 19976,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 19926,
											"end": 19976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 20041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 20041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 20041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19849,
											"end": 20041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 20048,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27871,
											"end": 27883,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27871,
											"end": 27891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27871,
											"end": 27891,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27871,
											"end": 27891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF"
										},
										{
											"begin": 27871,
											"end": 27891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27871,
											"end": 27891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27871,
											"end": 27891,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27812,
											"end": 27898,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 28979,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 28988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28991,
											"end": 29006,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 28960,
											"end": 29075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 28960,
											"end": 29075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29074,
											"end": 29075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28960,
											"end": 29075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 28960,
											"end": 29075,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28960,
											"end": 29075,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 28960,
											"end": 29075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29041,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29050,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 29022,
											"end": 29071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29055,
											"end": 29070,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29022,
											"end": 29054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 29022,
											"end": 29071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29022,
											"end": 29071,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 29022,
											"end": 29071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29102,
											"end": 29122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 28940,
											"end": 29075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29116,
											"end": 29121,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 29102,
											"end": 29115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 29102,
											"end": 29122,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29102,
											"end": 29122,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 29102,
											"end": 29122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29094,
											"end": 29122,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 29145,
											"end": 29150,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29169,
											"end": 29188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 29132,
											"end": 29150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29183,
											"end": 29187,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 29169,
											"end": 29182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 29169,
											"end": 29188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29169,
											"end": 29188,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 29169,
											"end": 29188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29160,
											"end": 29188,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 29211,
											"end": 29215,
											"name": "PUSH",
											"source": 0,
											"value": "E10"
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29236,
											"end": 29253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 29198,
											"end": 29215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29250,
											"end": 29252,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 29236,
											"end": 29249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 29236,
											"end": 29253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29236,
											"end": 29253,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 29236,
											"end": 29253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29225,
											"end": 29253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29274,
											"end": 29288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 29286,
											"end": 29288,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 29274,
											"end": 29283,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29274,
											"end": 29288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 29274,
											"end": 29288,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29274,
											"end": 29288,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 29274,
											"end": 29288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28757,
											"end": 29295,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25758,
											"end": 25783,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25758,
											"end": 25797,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25664,
											"end": 25804,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 12881,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12961,
											"end": 12965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12977,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13001,
											"end": 13010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13012,
											"end": 13018,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12977,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 12977,
											"end": 13019,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 22277,
											"end": 22479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22374,
											"end": 22378,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22330,
											"end": 22353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22394,
											"end": 22413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22394,
											"end": 22413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22390,
											"end": 22473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 22390,
											"end": 22473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22429,
											"end": 22462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 22446,
											"end": 22461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22429,
											"end": 22445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 22429,
											"end": 22462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28430,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28444,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28331,
											"end": 28451,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21865,
											"end": 21880,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 21851,
											"end": 21862,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21851,
											"end": 21880,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21890,
											"end": 21900,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21890,
											"end": 21912,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21922,
											"end": 21933,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21936,
											"end": 21940,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21922,
											"end": 21940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21780,
											"end": 21947,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25627,
											"end": 25639,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25627,
											"end": 25647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25627,
											"end": 25647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25627,
											"end": 25647,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFF"
										},
										{
											"begin": 25627,
											"end": 25647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25627,
											"end": 25647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25627,
											"end": 25647,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25565,
											"end": 25654,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28018,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28001,
											"end": 28037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27904,
											"end": 28044,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28538,
											"end": 28553,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28538,
											"end": 28565,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28457,
											"end": 28572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26274,
											"end": 26290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26293,
											"end": 26354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 26341,
											"end": 26353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26293,
											"end": 26336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 26328,
											"end": 26335,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26293,
											"end": 26336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26293,
											"end": 26305,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26310,
											"end": 26322,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 26293,
											"end": 26309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 26293,
											"end": 26323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26293,
											"end": 26323,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 26293,
											"end": 26323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26293,
											"end": 26327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26293,
											"end": 26327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 26293,
											"end": 26336,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26293,
											"end": 26354,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 26293,
											"end": 26354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26274,
											"end": 26354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26274,
											"end": 26354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26384,
											"end": 26387,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 26372,
											"end": 26380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26387,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26372,
											"end": 26387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8804,
											"end": 8806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8786,
											"end": 8807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 8845,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8882,
											"end": 8916,
											"name": "PUSH",
											"source": 1,
											"value": "53756D206F66206275792066656573206D757374206265206C65737320746861"
										},
										{
											"begin": 8862,
											"end": 8880,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8862,
											"end": 8880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8855,
											"end": 8917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 8972,
											"name": "PUSH",
											"source": 1,
											"value": "6E206F7220657175616C20746F20323525000000000000000000000000000000"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8933,
											"end": 8951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 8973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9009,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8990,
											"end": 9009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 8776,
											"end": 9015,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 26364,
											"end": 26441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26459,
											"end": 26471,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26459,
											"end": 26471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26459,
											"end": 26471,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 26459,
											"end": 26471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26459,
											"end": 26471,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26459,
											"end": 26471,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26459,
											"end": 26471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15137,
											"end": 15139,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 15117,
											"end": 15135,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15117,
											"end": 15135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15117,
											"end": 15135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15110,
											"end": 15140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15176,
											"end": 15202,
											"name": "PUSH",
											"source": 1,
											"value": "546869732066756E6374696F6E20697320646961626C65640000000000000000"
										},
										{
											"begin": 15156,
											"end": 15174,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15156,
											"end": 15174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15156,
											"end": 15174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15149,
											"end": 15203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 15070,
											"end": 15244,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 26451,
											"end": 26500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26527,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 26511,
											"end": 26542,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26511,
											"end": 26542,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26552,
											"end": 26568,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26552,
											"end": 26583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26552,
											"end": 26583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26552,
											"end": 26583,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26593,
											"end": 26604,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 26593,
											"end": 26614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26593,
											"end": 26614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26593,
											"end": 26614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26640,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 26624,
											"end": 26655,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26624,
											"end": 26655,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 26674,
											"end": 26717,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26717,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26717,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26727,
											"end": 26751,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 26727,
											"end": 26770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26727,
											"end": 26770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26727,
											"end": 26770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26799,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 26780,
											"end": 26813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26780,
											"end": 26813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26823,
											"end": 26847,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 26823,
											"end": 26866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26823,
											"end": 26866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26823,
											"end": 26866,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17632,
											"end": 17634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17617,
											"end": 17635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17617,
											"end": 17635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17653,
											"end": 17687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17653,
											"end": 17687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17653,
											"end": 17687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17718,
											"end": 17720,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17703,
											"end": 17721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17703,
											"end": 17721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17696,
											"end": 17730,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17696,
											"end": 17730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17696,
											"end": 17730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "PUSH",
											"source": 0,
											"value": "892B2CAA2D791BF7B8D9A49C4DB7A4513FF1AE2E0E068ED217F9D5AB4C1A28F0"
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17566,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17548,
											"end": 17567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26890,
											"end": 26955,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26139,
											"end": 26962,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25270,
											"end": 25275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25267,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25275,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25275,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25240,
											"end": 25275,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25240,
											"end": 25275,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25170,
											"end": 25282,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 3302,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "555"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9572,
											"end": 9574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9591,
											"end": 9609,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9591,
											"end": 9609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9591,
											"end": 9609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9584,
											"end": 9614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9650,
											"end": 9684,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9630,
											"end": 9648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9623,
											"end": 9685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9721,
											"end": 9729,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9701,
											"end": 9719,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9701,
											"end": 9719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 9719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9694,
											"end": 9730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9766,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9747,
											"end": 9766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 9544,
											"end": 9772,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3484,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 3465,
											"end": 3493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 26968,
											"end": 27806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "565"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27104,
											"end": 27120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27123,
											"end": 27184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 27171,
											"end": 27183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27123,
											"end": 27166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 27158,
											"end": 27165,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27123,
											"end": 27166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27123,
											"end": 27135,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27140,
											"end": 27152,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 27123,
											"end": 27139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 27123,
											"end": 27153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27123,
											"end": 27184,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 27123,
											"end": 27184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27104,
											"end": 27184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27104,
											"end": 27184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27214,
											"end": 27217,
											"name": "PUSH",
											"source": 0,
											"value": "FA"
										},
										{
											"begin": 27202,
											"end": 27210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27202,
											"end": 27217,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27202,
											"end": 27217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11863,
											"end": 11865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11845,
											"end": 11866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11902,
											"end": 11904,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11875,
											"end": 11905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11941,
											"end": 11975,
											"name": "PUSH",
											"source": 1,
											"value": "53756D206F662073656C6C2066656573206D757374206265206C657373207468"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11914,
											"end": 11976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12032,
											"name": "PUSH",
											"source": 1,
											"value": "616E206F7220657175616C20746F203235250000000000000000000000000000"
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11992,
											"end": 12010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11985,
											"end": 12033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 11835,
											"end": 12075,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "tag",
											"source": 0,
											"value": "571"
										},
										{
											"begin": 27194,
											"end": 27272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27302,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27290,
											"end": 27302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27302,
											"name": "PUSH",
											"source": 0,
											"value": "100000000"
										},
										{
											"begin": 27290,
											"end": 27302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27302,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27302,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27290,
											"end": 27302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15098,
											"end": 15100,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15080,
											"end": 15101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15137,
											"end": 15139,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 15117,
											"end": 15135,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15117,
											"end": 15135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15117,
											"end": 15135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15110,
											"end": 15140,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15176,
											"end": 15202,
											"name": "PUSH",
											"source": 1,
											"value": "546869732066756E6374696F6E20697320646961626C65640000000000000000"
										},
										{
											"begin": 15156,
											"end": 15174,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15156,
											"end": 15174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15156,
											"end": 15174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15149,
											"end": 15203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15220,
											"end": 15238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 15070,
											"end": 15244,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 27282,
											"end": 27331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27342,
											"end": 27359,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27342,
											"end": 27374,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27342,
											"end": 27374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27342,
											"end": 27374,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27384,
											"end": 27401,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27384,
											"end": 27416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27384,
											"end": 27416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27384,
											"end": 27416,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27426,
											"end": 27438,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 27426,
											"end": 27448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27426,
											"end": 27448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27426,
											"end": 27448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27458,
											"end": 27475,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 27458,
											"end": 27490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27458,
											"end": 27490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27458,
											"end": 27490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27509,
											"end": 27534,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27509,
											"end": 27554,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27509,
											"end": 27554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27509,
											"end": 27554,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27589,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27564,
											"end": 27609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27609,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27619,
											"end": 27639,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27619,
											"end": 27654,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27619,
											"end": 27654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27619,
											"end": 27654,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27664,
											"end": 27689,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 27664,
											"end": 27709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27664,
											"end": 27709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27664,
											"end": 27709,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27733,
											"end": 27799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17601,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17632,
											"end": 17634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17617,
											"end": 17635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17617,
											"end": 17635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17653,
											"end": 17687,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17653,
											"end": 17687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17653,
											"end": 17687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17718,
											"end": 17720,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17703,
											"end": 17721,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17703,
											"end": 17721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17696,
											"end": 17730,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17696,
											"end": 17730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17696,
											"end": 17730,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27733,
											"end": 27799,
											"name": "PUSH",
											"source": 0,
											"value": "439932620C72DDDEA29980C098BCA1A482729646D1216B226D723C6D278A30D1"
										},
										{
											"begin": 27733,
											"end": 27799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17563,
											"end": 17566,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17548,
											"end": 17567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27733,
											"end": 27799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 17530,
											"end": 17736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29429,
											"end": 29433,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 29409,
											"end": 29426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29409,
											"end": 29433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 29409,
											"end": 29433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29409,
											"end": 29433,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10721,
											"end": 10742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10778,
											"end": 10780,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10751,
											"end": 10781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "PUSH",
											"source": 1,
											"value": "547269676765722070657263656E74616765206D757374206265203C20313030"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10790,
											"end": 10852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10888,
											"end": 10898,
											"name": "PUSH",
											"source": 1,
											"value": "3020283130302529000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10868,
											"end": 10886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10861,
											"end": 10899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10916,
											"end": 10935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10711,
											"end": 10941,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 29401,
											"end": 29478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29500,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000"
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FF"
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29528,
											"end": 29578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29488,
											"end": 29518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29647,
											"end": 29684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 29647,
											"end": 29684,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29658,
											"end": 29679,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 29658,
											"end": 29679,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29658,
											"end": 29684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29647,
											"end": 29684,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 29647,
											"end": 29684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29849,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29643,
											"end": 29849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 29643,
											"end": 29849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29700,
											"end": 29720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29723,
											"end": 29734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 29723,
											"end": 29732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 29723,
											"end": 29734,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29723,
											"end": 29734,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 29723,
											"end": 29734,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29700,
											"end": 29734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29752,
											"end": 29768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29752,
											"end": 29768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29748,
											"end": 29839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 29748,
											"end": 29839,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29788,
											"end": 29809,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 29788,
											"end": 29824,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29301,
											"end": 29855,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 818,
											"end": 828,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13095,
											"end": 13097,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13077,
											"end": 13098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13107,
											"end": 13137,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13173,
											"end": 13207,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13153,
											"end": 13171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13225,
											"end": 13243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13067,
											"end": 13249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 3068,
											"end": 3135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25465,
											"end": 25477,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25465,
											"end": 25477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25465,
											"end": 25477,
											"name": "PUSH",
											"source": 0,
											"value": "1000000"
										},
										{
											"begin": 25465,
											"end": 25477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25465,
											"end": 25477,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25465,
											"end": 25477,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25465,
											"end": 25477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14283,
											"end": 14285,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14265,
											"end": 14286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14322,
											"end": 14324,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14302,
											"end": 14320,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14302,
											"end": 14320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14302,
											"end": 14320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14295,
											"end": 14325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14361,
											"end": 14395,
											"name": "PUSH",
											"source": 1,
											"value": "7468697320636F6E74726163742063616E6E6F7420626C61636B6C6973742061"
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14334,
											"end": 14396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14432,
											"end": 14442,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573736573000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14412,
											"end": 14430,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14412,
											"end": 14430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14405,
											"end": 14443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14460,
											"end": 14479,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14460,
											"end": 14479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 14255,
											"end": 14485,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "tag",
											"source": 0,
											"value": "594"
										},
										{
											"begin": 25457,
											"end": 25522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25545,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25532,
											"end": 25552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25548,
											"end": 25552,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25532,
											"end": 25552,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25532,
											"end": 25552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25393,
											"end": 25559,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14855,
											"end": 15185,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 14855,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14947,
											"end": 14966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14947,
											"end": 14966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15451,
											"end": 15453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15433,
											"end": 15454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15490,
											"end": 15492,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15470,
											"end": 15488,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15463,
											"end": 15493,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15529,
											"end": 15563,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 15509,
											"end": 15527,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15509,
											"end": 15527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15509,
											"end": 15527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 15564,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15600,
											"end": 15606,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15580,
											"end": 15598,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15580,
											"end": 15598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15580,
											"end": 15598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15573,
											"end": 15607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15624,
											"end": 15643,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 15624,
											"end": 15643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 15423,
											"end": 15649,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 14939,
											"end": 15007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15025,
											"end": 15046,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9979,
											"end": 9981,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9961,
											"end": 9982,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10091,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10030,
											"end": 10092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10128,
											"end": 10132,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10108,
											"end": 10126,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10108,
											"end": 10126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10108,
											"end": 10126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10150,
											"end": 10169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 9951,
											"end": 10175,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 15017,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15106,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15122,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15131,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15131,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15146,
											"end": 15178,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14855,
											"end": 15185,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15195,
											"end": 18402,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 15195,
											"end": 18402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15282,
											"end": 15300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14692,
											"end": 14694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14674,
											"end": 14695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14731,
											"end": 14733,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 14711,
											"end": 14729,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14711,
											"end": 14729,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14711,
											"end": 14729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14704,
											"end": 14734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14770,
											"end": 14804,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14750,
											"end": 14768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14743,
											"end": 14805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14848,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14821,
											"end": 14839,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14821,
											"end": 14839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14821,
											"end": 14839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14814,
											"end": 14849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14866,
											"end": 14885,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14866,
											"end": 14885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 14664,
											"end": 14891,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "tag",
											"source": 0,
											"value": "607"
										},
										{
											"begin": 15274,
											"end": 15342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15360,
											"end": 15376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15360,
											"end": 15376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8400,
											"end": 8402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8382,
											"end": 8403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8512,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8458,
											"end": 8476,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8458,
											"end": 8476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8451,
											"end": 8513,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8549,
											"end": 8554,
											"name": "PUSH",
											"source": 1,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8555,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8591,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8572,
											"end": 8591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 8372,
											"end": 8597,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 15352,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15443,
											"end": 15444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15434,
											"end": 15440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15434,
											"end": 15444,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13456,
											"end": 13458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13438,
											"end": 13459,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13495,
											"end": 13497,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 13475,
											"end": 13493,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13475,
											"end": 13493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13468,
											"end": 13498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13534,
											"end": 13568,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657220616D6F756E74206D757374206265206772656174657220"
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13507,
											"end": 13569,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13605,
											"end": 13616,
											"name": "PUSH",
											"source": 1,
											"value": "7468616E207A65726F0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13585,
											"end": 13603,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13585,
											"end": 13603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13585,
											"end": 13603,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13578,
											"end": 13617,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13634,
											"end": 13653,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13634,
											"end": 13653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 13428,
											"end": 13659,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "tag",
											"source": 0,
											"value": "613"
										},
										{
											"begin": 15426,
											"end": 15490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15516,
											"end": 15520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15543,
											"end": 15550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3031,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15543,
											"end": 15550,
											"name": "tag",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 15543,
											"end": 15550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15535,
											"end": 15550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15539,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15535,
											"end": 15550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 15535,
											"end": 15567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 2999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15554,
											"end": 15567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 15567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 15567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3018,
											"end": 3024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 15567,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15554,
											"end": 15567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15567,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 15535,
											"end": 15567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 15535,
											"end": 15592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15571,
											"end": 15592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15571,
											"end": 15592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15587,
											"end": 15591,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15571,
											"end": 15592,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15571,
											"end": 15592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15592,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 15535,
											"end": 15592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 15535,
											"end": 15615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15596,
											"end": 15615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15596,
											"end": 15615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15610,
											"end": 15614,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15596,
											"end": 15615,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15596,
											"end": 15615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15535,
											"end": 15615,
											"name": "tag",
											"source": 0,
											"value": "620"
										},
										{
											"begin": 15535,
											"end": 15615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 18230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 18230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 15531,
											"end": 18230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15639,
											"end": 15650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9222,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9204,
											"end": 9225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9261,
											"end": 9263,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9241,
											"end": 9259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9300,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "54726164696E67206973206E6F74206163746976650000000000000000000000"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9273,
											"end": 9324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9341,
											"end": 9359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 9194,
											"end": 9365,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "tag",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 15631,
											"end": 15676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15715,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15702,
											"end": 15715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15694,
											"end": 15715,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15702,
											"end": 15715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15715,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 15694,
											"end": 15749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15733,
											"end": 15748,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15733,
											"end": 15748,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15719,
											"end": 15749,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15733,
											"end": 15748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15733,
											"end": 15748,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15749,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15694,
											"end": 15749,
											"name": "tag",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 15694,
											"end": 15749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 16110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15690,
											"end": 16110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 15690,
											"end": 16110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15815,
											"end": 15825,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15815,
											"end": 15825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15810,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15799,
											"end": 15810,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 15799,
											"end": 15826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15799,
											"end": 15814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 15799,
											"end": 15826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15799,
											"end": 15826,
											"name": "tag",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 15799,
											"end": 15826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15780,
											"end": 15795,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 15780,
											"end": 15826,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15776,
											"end": 15884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 15776,
											"end": 15884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15850,
											"end": 15865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15861,
											"end": 15865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15850,
											"end": 15865,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15865,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15776,
											"end": 15884,
											"name": "tag",
											"source": 0,
											"value": "628"
										},
										{
											"begin": 15776,
											"end": 15884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15907,
											"end": 15929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 16096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 15902,
											"end": 16096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15990,
											"end": 16006,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15990,
											"end": 16006,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 15986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 15979,
											"end": 15985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 15974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 15971,
											"end": 15973,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 15986,
											"name": "tag",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 15961,
											"end": 15986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 16006,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15961,
											"end": 16006,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15895,
											"end": 15897,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 15968,
											"name": "PUSH",
											"source": 1,
											"value": "2E77616C6C65742062616C616E6365206166746572207472616E73666572206D"
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15907,
											"end": 15969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16005,
											"end": 16039,
											"name": "PUSH",
											"source": 1,
											"value": "757374206265206C657373207468616E206D61782077616C6C657420616D6F75"
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15978,
											"end": 16040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "PUSH",
											"source": 1,
											"value": "6E74000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16099,
											"end": 16118,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 16099,
											"end": 16118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 15828,
											"end": 16124,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 15953,
											"end": 16077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 16140,
											"end": 16172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16159,
											"end": 16172,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16159,
											"end": 16172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16151,
											"end": 16172,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16151,
											"end": 16172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16151,
											"end": 16172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16151,
											"end": 16172,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16151,
											"end": 16172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16172,
											"name": "tag",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 16140,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16195,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 16140,
											"end": 16195,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16182,
											"end": 16195,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16182,
											"end": 16195,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16176,
											"end": 16195,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16176,
											"end": 16195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16176,
											"end": 16195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16182,
											"end": 16195,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16176,
											"end": 16195,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16140,
											"end": 16195,
											"name": "tag",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 16140,
											"end": 16195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16136,
											"end": 17902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16136,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 16136,
											"end": 17902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16242,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "638"
										},
										{
											"begin": 16231,
											"end": 16255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16247,
											"end": 16255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16246,
											"end": 16255,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16231,
											"end": 16255,
											"name": "tag",
											"source": 0,
											"value": "638"
										},
										{
											"begin": 16231,
											"end": 16255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "tag",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 16223,
											"end": 16256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 16332,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 16324,
											"end": 16340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16324,
											"end": 16340,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16324,
											"end": 16340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 16320,
											"end": 16553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16410,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16391,
											"end": 16416,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16387,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16416,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10382,
											"end": 10384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10364,
											"end": 10385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10423,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 10401,
											"end": 10419,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10401,
											"end": 10419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10401,
											"end": 10419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10394,
											"end": 10424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10490,
											"name": "PUSH",
											"source": 1,
											"value": "5374726F6E672048616E64732050726F746F636F6C2061637469766500000000"
										},
										{
											"begin": 10440,
											"end": 10458,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10440,
											"end": 10458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10433,
											"end": 10491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10508,
											"end": 10526,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 10354,
											"end": 10532,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "tag",
											"source": 0,
											"value": "641"
										},
										{
											"begin": 16364,
											"end": 16449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16525,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 16517,
											"end": 16534,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16499,
											"end": 16534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 16499,
											"end": 16534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16534,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16517,
											"end": 16534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16534,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16517,
											"end": 16534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16517,
											"end": 16534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16499,
											"end": 16514,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 16499,
											"end": 16534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 16499,
											"end": 16534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16499,
											"end": 16534,
											"name": "tag",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 16499,
											"end": 16534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16490,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16534,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16320,
											"end": 16553,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 16320,
											"end": 16553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16614,
											"end": 16626,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 16614,
											"end": 16634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16614,
											"end": 16634,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16614,
											"end": 16634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16610,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 16610,
											"end": 16790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16691,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 16667,
											"end": 16691,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16667,
											"end": 16691,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16667,
											"end": 16691,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16666,
											"end": 16691,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11504,
											"end": 11506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11486,
											"end": 11507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11543,
											"end": 11545,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11523,
											"end": 11541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11516,
											"end": 11546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11582,
											"end": 11614,
											"name": "PUSH",
											"source": 1,
											"value": "53656C6C732073746F70706564206279204469616D6F6E6420466C6F6F720000"
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11555,
											"end": 11615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11632,
											"end": 11650,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11632,
											"end": 11650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 11476,
											"end": 11656,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "tag",
											"source": 0,
											"value": "647"
										},
										{
											"begin": 16658,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16748,
											"end": 16771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 16748,
											"end": 16769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 16748,
											"end": 16771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16748,
											"end": 16771,
											"name": "tag",
											"source": 0,
											"value": "650"
										},
										{
											"begin": 16748,
											"end": 16771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16877,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16824,
											"end": 16852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16926,
											"end": 16941,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16926,
											"end": 16941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16902,
											"end": 16941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16902,
											"end": 16941,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 17867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 16898,
											"end": 17867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16969,
											"end": 16993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16969,
											"end": 16993,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16965,
											"end": 17644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 16965,
											"end": 17644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17109,
											"end": 17110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17025,
											"end": 17106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 17088,
											"end": 17105,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17088,
											"end": 17105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 17065,
											"end": 17082,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17065,
											"end": 17082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 17047,
											"end": 17059,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17047,
											"end": 17059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17042,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17025,
											"end": 17042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 17025,
											"end": 17046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17060,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17060,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17060,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17025,
											"end": 17060,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17025,
											"end": 17106,
											"name": "tag",
											"source": 0,
											"value": "655"
										},
										{
											"begin": 17025,
											"end": 17106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17025,
											"end": 17110,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 17021,
											"end": 17622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17165,
											"end": 17295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 17213,
											"end": 17294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 17276,
											"end": 17293,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17276,
											"end": 17293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 17253,
											"end": 17270,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17253,
											"end": 17270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 17235,
											"end": 17247,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 17235,
											"end": 17247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17230,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17213,
											"end": 17230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 17213,
											"end": 17234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17213,
											"end": 17248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17213,
											"end": 17248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17213,
											"end": 17294,
											"name": "tag",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 17213,
											"end": 17294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17165,
											"end": 17182,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17165,
											"end": 17182,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17165,
											"end": 17208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 17165,
											"end": 17208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17187,
											"end": 17207,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17165,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 17165,
											"end": 17208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17165,
											"end": 17295,
											"name": "tag",
											"source": 0,
											"value": "659"
										},
										{
											"begin": 17165,
											"end": 17295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17295,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17142,
											"end": 17295,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17325,
											"end": 17340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17402,
											"end": 17414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17378,
											"end": 17398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17378,
											"end": 17414,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17374,
											"end": 17529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "664"
										},
										{
											"begin": 17374,
											"end": 17529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "665"
										},
										{
											"begin": 17460,
											"end": 17480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17485,
											"end": 17497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17460,
											"end": 17484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 17460,
											"end": 17498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17460,
											"end": 17498,
											"name": "tag",
											"source": 0,
											"value": "665"
										},
										{
											"begin": 17460,
											"end": 17498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17450,
											"end": 17498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17450,
											"end": 17498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17374,
											"end": 17529,
											"name": "tag",
											"source": 0,
											"value": "664"
										},
										{
											"begin": 17374,
											"end": 17529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17558,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 17573,
											"end": 17585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17587,
											"end": 17594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17558,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 17558,
											"end": 17595,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17558,
											"end": 17595,
											"name": "tag",
											"source": 0,
											"value": "666"
										},
										{
											"begin": 17558,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17021,
											"end": 17622,
											"name": "tag",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 17021,
											"end": 17622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17694,
											"end": 17715,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17741,
											"end": 17763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17741,
											"end": 17763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17737,
											"end": 17849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 17737,
											"end": 17849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17791,
											"end": 17826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 17804,
											"end": 17825,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 17791,
											"end": 17803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 17791,
											"end": 17826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17791,
											"end": 17826,
											"name": "tag",
											"source": 0,
											"value": "669"
										},
										{
											"begin": 17791,
											"end": 17826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 17867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16898,
											"end": 17867,
											"name": "tag",
											"source": 0,
											"value": "653"
										},
										{
											"begin": 16898,
											"end": 17867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16136,
											"end": 17902,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16136,
											"end": 17902,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 16136,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17927,
											"end": 17940,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17927,
											"end": 17940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17919,
											"end": 17940,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17927,
											"end": 17940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17927,
											"end": 17940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17940,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 17919,
											"end": 17963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17950,
											"end": 17963,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 17950,
											"end": 17963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17944,
											"end": 17963,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17950,
											"end": 17963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17950,
											"end": 17963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17963,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17919,
											"end": 17963,
											"name": "tag",
											"source": 0,
											"value": "671"
										},
										{
											"begin": 17919,
											"end": 17963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17916,
											"end": 18220,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17916,
											"end": 18220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 17916,
											"end": 18220,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18017,
											"end": 18039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 18012,
											"end": 18206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18100,
											"end": 18116,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18100,
											"end": 18116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18071,
											"end": 18096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "674"
										},
										{
											"begin": 18089,
											"end": 18095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18071,
											"end": 18084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 18081,
											"end": 18083,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12753,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12744,
											"end": 12762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12652,
											"end": 12769,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18071,
											"end": 18096,
											"name": "tag",
											"source": 0,
											"value": "674"
										},
										{
											"begin": 18071,
											"end": 18096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18071,
											"end": 18116,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18071,
											"end": 18116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15856,
											"end": 15858,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15838,
											"end": 15859,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15895,
											"end": 15897,
											"name": "PUSH",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15875,
											"end": 15893,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15868,
											"end": 15898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15934,
											"end": 15968,
											"name": "PUSH",
											"source": 1,
											"value": "2E77616C6C65742062616C616E6365206166746572207472616E73666572206D"
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15914,
											"end": 15932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15907,
											"end": 15969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16005,
											"end": 16039,
											"name": "PUSH",
											"source": 1,
											"value": "757374206265206C657373207468616E206D61782077616C6C657420616D6F75"
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15985,
											"end": 16003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15978,
											"end": 16040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "PUSH",
											"source": 1,
											"value": "6E74000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16056,
											"end": 16075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16099,
											"end": 16118,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 16099,
											"end": 16118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 15828,
											"end": 16124,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "tag",
											"source": 0,
											"value": "676"
										},
										{
											"begin": 18063,
											"end": 18187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 18244,
											"end": 18294,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18290,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18272,
											"end": 18294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18244,
											"end": 18294,
											"name": "tag",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 18244,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18240,
											"end": 18336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18240,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 18240,
											"end": 18336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18320,
											"end": 18325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18240,
											"end": 18336,
											"name": "tag",
											"source": 0,
											"value": "679"
										},
										{
											"begin": 18240,
											"end": 18336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18354,
											"end": 18395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 18369,
											"end": 18373,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18375,
											"end": 18377,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18379,
											"end": 18385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18387,
											"end": 18394,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18354,
											"end": 18368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "681"
										},
										{
											"begin": 18354,
											"end": 18395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18354,
											"end": 18395,
											"name": "tag",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 18354,
											"end": 18395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 18402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 18402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 18402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 18402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15195,
											"end": 18402,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 1942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "683"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "tag",
											"source": 0,
											"value": "683"
										},
										{
											"begin": 1954,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "685"
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "686"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "tag",
											"source": 0,
											"value": "685"
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2010,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1849,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2344,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 2374,
											"end": 2375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "tag",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2363,
											"end": 2409,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2416,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1709,
											"end": 1843,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 1709,
											"end": 1843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 1797,
											"end": 1798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 1793,
											"end": 1836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2041,
											"end": 2280,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 2041,
											"end": 2280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2144,
											"end": 2152,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "tag",
											"source": 0,
											"value": "693"
										},
										{
											"begin": 2118,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2185,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "tag",
											"source": 0,
											"value": "694"
										},
										{
											"begin": 2184,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2172,
											"end": 2189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "697"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "696"
										},
										{
											"begin": 2207,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12693,
											"end": 12695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12675,
											"end": 12696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12732,
											"end": 12734,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12705,
											"end": 12735,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12771,
											"end": 12805,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F"
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12751,
											"end": 12769,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12744,
											"end": 12806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12842,
											"end": 12845,
											"name": "PUSH",
											"source": 1,
											"value": "7700000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12822,
											"end": 12840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12815,
											"end": 12846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12863,
											"end": 12882,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12863,
											"end": 12882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 12665,
											"end": 12888,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18411,
											"end": 18812,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 18411,
											"end": 18812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11461,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18526,
											"end": 18527,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18512,
											"end": 18528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18488,
											"end": 18528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18488,
											"end": 18528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18556,
											"end": 18560,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18543,
											"end": 18544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "705"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "tag",
											"source": 0,
											"value": "705"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18538,
											"end": 18561,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18561,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C464800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18601,
											"name": "PUSH",
											"source": 0,
											"value": "AD5C4648"
										},
										{
											"begin": 18581,
											"end": 18601,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18538,
											"end": 18545,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18596,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "tag",
											"source": 0,
											"value": "706"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "tag",
											"source": 0,
											"value": "708"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "tag",
											"source": 0,
											"value": "709"
										},
										{
											"begin": 18581,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18576,
											"end": 18577,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "710"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "tag",
											"source": 0,
											"value": "710"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18571,
											"end": 18603,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18603,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18571,
											"end": 18603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18660,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18645,
											"end": 18660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 18613,
											"end": 18675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18634,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18630,
											"end": 18634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18645,
											"end": 18660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18663,
											"end": 18674,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18613,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 18613,
											"end": 18675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18613,
											"end": 18675,
											"name": "tag",
											"source": 0,
											"value": "711"
										},
										{
											"begin": 18613,
											"end": 18675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "791AC94700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18751,
											"name": "PUSH",
											"source": 0,
											"value": "791AC947"
										},
										{
											"begin": 18685,
											"end": 18751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18763,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18752,
											"end": 18763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18768,
											"end": 18772,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18768,
											"end": 18772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18782,
											"end": 18786,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18782,
											"end": 18786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18789,
											"end": 18804,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 18789,
											"end": 18804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "713"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "tag",
											"source": 0,
											"value": "712"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "tag",
											"source": 0,
											"value": "714"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "tag",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 18685,
											"end": 18805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11489,
											"end": 11495,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11489,
											"end": 11503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11489,
											"end": 11503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11489,
											"end": 11503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 11489,
											"end": 11503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11489,
											"end": 11503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11489,
											"end": 11503,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18411,
											"end": 18812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1528,
											"end": 1703,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 1528,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "tag",
											"source": 0,
											"value": "718"
										},
										{
											"begin": 1617,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1641,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11148,
											"end": 11150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11130,
											"end": 11151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 11167,
											"end": 11185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11167,
											"end": 11185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11167,
											"end": 11185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11160,
											"end": 11190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11226,
											"end": 11255,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11206,
											"end": 11224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11199,
											"end": 11256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11273,
											"end": 11291,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11273,
											"end": 11291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 11120,
											"end": 11297,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3746,
											"end": 3752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3727,
											"end": 3743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3834,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18818,
											"end": 19626,
											"name": "tag",
											"source": 0,
											"value": "651"
										},
										{
											"begin": 18818,
											"end": 19626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18892,
											"end": 18903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "724"
										},
										{
											"begin": 18892,
											"end": 18901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 18892,
											"end": 18903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18892,
											"end": 18903,
											"name": "tag",
											"source": 0,
											"value": "724"
										},
										{
											"begin": 18892,
											"end": 18903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18869,
											"end": 18903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18917,
											"end": 18934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18913,
											"end": 18943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "725"
										},
										{
											"begin": 18913,
											"end": 18943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18936,
											"end": 18943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18818,
											"end": 19626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18913,
											"end": 18943,
											"name": "tag",
											"source": 0,
											"value": "725"
										},
										{
											"begin": 18913,
											"end": 18943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18972,
											"end": 18993,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 18972,
											"end": 18993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 18993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 18993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 19122,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18953,
											"end": 19122,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 18953,
											"end": 19122,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19009,
											"end": 19030,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19009,
											"end": 19045,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19059,
											"end": 19083,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19059,
											"end": 19091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19059,
											"end": 19091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19059,
											"end": 19091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19059,
											"end": 19091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19059,
											"end": 19091,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18818,
											"end": 19626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18953,
											"end": 19122,
											"name": "tag",
											"source": 0,
											"value": "726"
										},
										{
											"begin": 18953,
											"end": 19122,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19218,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19178,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19157,
											"end": 19178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19132,
											"end": 19154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19132,
											"end": 19154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "727"
										},
										{
											"begin": 19157,
											"end": 19260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19259,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 19255,
											"end": 19259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 19157,
											"end": 19237,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19206,
											"end": 19236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 19157,
											"end": 19201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19255,
											"end": 19259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 19157,
											"end": 19201,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19157,
											"end": 19201,
											"name": "tag",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 19157,
											"end": 19201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19157,
											"end": 19205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 19157,
											"end": 19237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19157,
											"end": 19260,
											"name": "tag",
											"source": 0,
											"value": "727"
										},
										{
											"begin": 19157,
											"end": 19260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19132,
											"end": 19260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19132,
											"end": 19260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19290,
											"end": 19304,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19275,
											"end": 19287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19275,
											"end": 19304,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19271,
											"end": 19423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19271,
											"end": 19423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "730"
										},
										{
											"begin": 19271,
											"end": 19423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19344,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19320,
											"end": 19351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19320,
											"end": 19351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19347,
											"end": 19351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19320,
											"end": 19351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19320,
											"end": 19351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19391,
											"end": 19412,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19391,
											"end": 19412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19365,
											"end": 19388,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19365,
											"end": 19412,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19271,
											"end": 19423,
											"name": "tag",
											"source": 0,
											"value": "730"
										},
										{
											"begin": 19271,
											"end": 19423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19437,
											"end": 19461,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19437,
											"end": 19461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19437,
											"end": 19461,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19437,
											"end": 19461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19437,
											"end": 19511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19437,
											"end": 19511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19437,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "731"
										},
										{
											"begin": 19437,
											"end": 19511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19481,
											"end": 19504,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19481,
											"end": 19504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19481,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "732"
										},
										{
											"begin": 19481,
											"end": 19511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19509,
											"end": 19510,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19481,
											"end": 19508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 19481,
											"end": 19511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19481,
											"end": 19511,
											"name": "tag",
											"source": 0,
											"value": "732"
										},
										{
											"begin": 19481,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19465,
											"end": 19477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19465,
											"end": 19511,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19465,
											"end": 19511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19437,
											"end": 19511,
											"name": "tag",
											"source": 0,
											"value": "731"
										},
										{
											"begin": 19437,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19433,
											"end": 19620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19433,
											"end": 19620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 19433,
											"end": 19620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19527,
											"end": 19551,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19527,
											"end": 19559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19527,
											"end": 19559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19527,
											"end": 19559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19527,
											"end": 19559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19527,
											"end": 19559,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19573,
											"end": 19594,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 19573,
											"end": 19609,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18818,
											"end": 19626,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20519,
											"end": 21026,
											"name": "tag",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 20519,
											"end": 21026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11461,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF"
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20636,
											"end": 20651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "736"
										},
										{
											"begin": 20636,
											"end": 20644,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20649,
											"end": 20650,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20636,
											"end": 20648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 20636,
											"end": 20651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20636,
											"end": 20651,
											"name": "tag",
											"source": 0,
											"value": "736"
										},
										{
											"begin": 20636,
											"end": 20651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20621,
											"end": 20651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20661,
											"end": 20678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "737"
										},
										{
											"begin": 20681,
											"end": 20689,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20621,
											"end": 20651,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20681,
											"end": 20693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "tag",
											"source": 0,
											"value": "737"
										},
										{
											"begin": 20681,
											"end": 20699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20734,
											"end": 20755,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20765,
											"end": 20813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "738"
										},
										{
											"begin": 20782,
											"end": 20812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "739"
										},
										{
											"begin": 20782,
											"end": 20802,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20807,
											"end": 20811,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20782,
											"end": 20806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 20782,
											"end": 20812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20782,
											"end": 20812,
											"name": "tag",
											"source": 0,
											"value": "739"
										},
										{
											"begin": 20782,
											"end": 20812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20765,
											"end": 20781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 20765,
											"end": 20813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20765,
											"end": 20813,
											"name": "tag",
											"source": 0,
											"value": "738"
										},
										{
											"begin": 20765,
											"end": 20813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20841,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20844,
											"end": 20885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "740"
										},
										{
											"begin": 20844,
											"end": 20865,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 20870,
											"end": 20884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20844,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 20844,
											"end": 20885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20844,
											"end": 20885,
											"name": "tag",
											"source": 0,
											"value": "740"
										},
										{
											"begin": 20844,
											"end": 20885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20823,
											"end": 20885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20899,
											"end": 20912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20899,
											"end": 20912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20895,
											"end": 21020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 20895,
											"end": 21020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20928,
											"end": 21009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "716"
										},
										{
											"begin": 20941,
											"end": 20950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "743"
										},
										{
											"begin": 20977,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "744"
										},
										{
											"begin": 20977,
											"end": 20997,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21002,
											"end": 21006,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20977,
											"end": 21001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 20977,
											"end": 21007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20977,
											"end": 21007,
											"name": "tag",
											"source": 0,
											"value": "744"
										},
										{
											"begin": 20977,
											"end": 21007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 20972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 20952,
											"end": 20962,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20967,
											"end": 20971,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 20952,
											"end": 20966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 20952,
											"end": 20972,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20952,
											"end": 21008,
											"name": "tag",
											"source": 0,
											"value": "743"
										},
										{
											"begin": 20952,
											"end": 21008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20928,
											"end": 20940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "746"
										},
										{
											"begin": 20928,
											"end": 21009,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21032,
											"end": 21774,
											"name": "tag",
											"source": 0,
											"value": "670"
										},
										{
											"begin": 21032,
											"end": 21774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21088,
											"end": 21105,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21108,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "748"
										},
										{
											"begin": 21153,
											"end": 21165,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21153,
											"end": 21165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21108,
											"end": 21148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 21130,
											"end": 21147,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 21130,
											"end": 21147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21108,
											"end": 21125,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21108,
											"end": 21125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21108,
											"end": 21129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 21108,
											"end": 21129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21108,
											"end": 21148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21108,
											"end": 21148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21108,
											"end": 21148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21108,
											"end": 21148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21108,
											"end": 21148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21108,
											"end": 21166,
											"name": "tag",
											"source": 0,
											"value": "748"
										},
										{
											"begin": 21108,
											"end": 21166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21088,
											"end": 21166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21180,
											"end": 21194,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21180,
											"end": 21194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21176,
											"end": 21768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 21176,
											"end": 21768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21210,
											"end": 21234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21237,
											"end": 21281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "751"
										},
										{
											"begin": 21271,
											"end": 21280,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 21248,
											"end": 21265,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 21248,
											"end": 21265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21243,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 21237,
											"end": 21247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21237,
											"end": 21266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21237,
											"end": 21266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21237,
											"end": 21281,
											"name": "tag",
											"source": 0,
											"value": "751"
										},
										{
											"begin": 21237,
											"end": 21281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21210,
											"end": 21281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21210,
											"end": 21281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21295,
											"end": 21314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21317,
											"end": 21356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 21346,
											"end": 21355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21317,
											"end": 21341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 21328,
											"end": 21340,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 21328,
											"end": 21340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21317,
											"end": 21323,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21317,
											"end": 21327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 21317,
											"end": 21327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21317,
											"end": 21341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21317,
											"end": 21341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21317,
											"end": 21341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 21317,
											"end": 21341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21317,
											"end": 21341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21317,
											"end": 21356,
											"name": "tag",
											"source": 0,
											"value": "753"
										},
										{
											"begin": 21317,
											"end": 21356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21295,
											"end": 21356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21370,
											"end": 21388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21391,
											"end": 21436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "755"
										},
										{
											"begin": 21295,
											"end": 21356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 21391,
											"end": 21397,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21402,
											"end": 21418,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21391,
											"end": 21401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 21391,
											"end": 21419,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21391,
											"end": 21436,
											"name": "tag",
											"source": 0,
											"value": "755"
										},
										{
											"begin": 21391,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21370,
											"end": 21436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21454,
											"end": 21474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21454,
											"end": 21474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21450,
											"end": 21553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "757"
										},
										{
											"begin": 21450,
											"end": 21553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "PUSH",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21521,
											"end": 21537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21521,
											"end": 21537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21521,
											"end": 21537,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21511,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "759"
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "tag",
											"source": 0,
											"value": "759"
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21494,
											"end": 21538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21450,
											"end": 21553,
											"name": "tag",
											"source": 0,
											"value": "757"
										},
										{
											"begin": 21450,
											"end": 21553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21566,
											"end": 21654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "760"
										},
										{
											"begin": 21566,
											"end": 21654,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21627,
											"end": 21638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21627,
											"end": 21638,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21627,
											"end": 21638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21617,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "762"
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "tag",
											"source": 0,
											"value": "762"
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21605,
											"end": 21639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21566,
											"end": 21654,
											"name": "tag",
											"source": 0,
											"value": "760"
										},
										{
											"begin": 21566,
											"end": 21654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21671,
											"end": 21685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21671,
											"end": 21685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21667,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "763"
										},
										{
											"begin": 21667,
											"end": 21758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21732,
											"end": 21742,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21722,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "765"
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "tag",
											"source": 0,
											"value": "765"
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21705,
											"end": 21743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21667,
											"end": 21758,
											"name": "tag",
											"source": 0,
											"value": "763"
										},
										{
											"begin": 21667,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21176,
											"end": 21768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21176,
											"end": 21768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21176,
											"end": 21768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21032,
											"end": 21774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21032,
											"end": 21774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21032,
											"end": 21774,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22905,
											"end": 23155,
											"name": "tag",
											"source": 0,
											"value": "681"
										},
										{
											"begin": 22905,
											"end": 23155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23017,
											"end": 23024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23012,
											"end": 23070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 23012,
											"end": 23070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23045,
											"end": 23059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 13751,
											"end": 13767,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 13751,
											"end": 13767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13751,
											"end": 13767,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13748,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13724,
											"end": 13767,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13820,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 13804,
											"end": 13820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13804,
											"end": 13820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13777,
											"end": 13801,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 13777,
											"end": 13820,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13863,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 13852,
											"end": 13863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 13863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13849,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 13830,
											"end": 13863,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 13916,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 13900,
											"end": 13916,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13900,
											"end": 13916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13873,
											"end": 13897,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 13873,
											"end": 13916,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13935,
											"end": 13955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13965,
											"end": 13985,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13965,
											"end": 13985,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13965,
											"end": 13985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13965,
											"end": 13985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14010,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14020,
											"end": 14040,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14096,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14079,
											"end": 14096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14079,
											"end": 14096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14051,
											"end": 14076,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14051,
											"end": 14096,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14134,
											"end": 14151,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14134,
											"end": 14151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14134,
											"end": 14151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14106,
											"end": 14131,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14106,
											"end": 14151,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14196,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14184,
											"end": 14196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14184,
											"end": 14196,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14161,
											"end": 14181,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14161,
											"end": 14196,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14234,
											"end": 14251,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14234,
											"end": 14251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14234,
											"end": 14251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14231,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14206,
											"end": 14251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14291,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14291,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14291,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14270,
											"end": 14291,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14301,
											"end": 14322,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14332,
											"end": 14348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14358,
											"end": 14379,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13682,
											"end": 14386,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23045,
											"end": 23059,
											"name": "tag",
											"source": 0,
											"value": "768"
										},
										{
											"begin": 23045,
											"end": 23059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23079,
											"end": 23123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "770"
										},
										{
											"begin": 23097,
											"end": 23103,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23105,
											"end": 23114,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23116,
											"end": 23122,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23079,
											"end": 23096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "771"
										},
										{
											"begin": 23079,
											"end": 23123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23079,
											"end": 23123,
											"name": "tag",
											"source": 0,
											"value": "770"
										},
										{
											"begin": 23079,
											"end": 23123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23133,
											"end": 23148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 14458,
											"end": 14482,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 14458,
											"end": 14482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14439,
											"end": 14455,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 14439,
											"end": 14482,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14511,
											"end": 14535,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 14511,
											"end": 14535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14492,
											"end": 14508,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14492,
											"end": 14535,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14559,
											"end": 14578,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14559,
											"end": 14578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14545,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14545,
											"end": 14578,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14607,
											"end": 14631,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 14607,
											"end": 14631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14588,
											"end": 14604,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 14588,
											"end": 14631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14662,
											"end": 14687,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 14662,
											"end": 14687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14642,
											"end": 14659,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14642,
											"end": 14687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14717,
											"end": 14742,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 14717,
											"end": 14742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14697,
											"end": 14714,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14697,
											"end": 14742,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14767,
											"end": 14787,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14767,
											"end": 14787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14752,
											"end": 14764,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14752,
											"end": 14787,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14817,
											"end": 14842,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 14817,
											"end": 14842,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14797,
											"end": 14814,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 14797,
											"end": 14842,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14396,
											"end": 14849,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2607,
											"name": "tag",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 2422,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2508,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "775"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "tag",
											"source": 0,
											"value": "775"
										},
										{
											"begin": 2527,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "685"
										},
										{
											"begin": 2581,
											"end": 2582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2578,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "697"
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20058,
											"end": 20511,
											"name": "tag",
											"source": 0,
											"value": "746"
										},
										{
											"begin": 20058,
											"end": 20511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20170,
											"end": 20185,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20170,
											"end": 20185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "779"
										},
										{
											"begin": 20138,
											"end": 20200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20159,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20155,
											"end": 20159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20170,
											"end": 20185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20199,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20138,
											"end": 20146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20138,
											"end": 20200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20138,
											"end": 20200,
											"name": "tag",
											"source": 0,
											"value": "779"
										},
										{
											"begin": 20138,
											"end": 20200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20461,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20449,
											"end": 20461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20461,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "F305D71900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20313,
											"end": 20317,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5888,
											"end": 5906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5881,
											"end": 5915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20449,
											"end": 20461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20449,
											"end": 20461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5931,
											"end": 5950,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5931,
											"end": 5950,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 5968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20477,
											"end": 20492,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20271,
											"name": "PUSH",
											"source": 0,
											"value": "F305D719"
										},
										{
											"begin": 20240,
											"end": 20271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20288,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5663,
											"end": 5682,
											"name": "PUSH",
											"source": 1,
											"value": "C4"
										},
										{
											"begin": 5663,
											"end": 5682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "782"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "tag",
											"source": 0,
											"value": "782"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "784"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "tag",
											"source": 0,
											"value": "784"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "763"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "786"
										},
										{
											"begin": 20240,
											"end": 20504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23161,
											"end": 25008,
											"name": "tag",
											"source": 0,
											"value": "771"
										},
										{
											"begin": 23161,
											"end": 25008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23257,
											"end": 23281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "789"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 23257,
											"end": 23281,
											"name": "tag",
											"source": 0,
											"value": "789"
										},
										{
											"begin": 23257,
											"end": 23281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23305,
											"end": 23318,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23305,
											"end": 23318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23295,
											"end": 23318,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23305,
											"end": 23318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23305,
											"end": 23318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23318,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23359,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 23295,
											"end": 23359,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23343,
											"end": 23358,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23343,
											"end": 23358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23322,
											"end": 23359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23322,
											"end": 23359,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23322,
											"end": 23359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23343,
											"end": 23358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23343,
											"end": 23358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23322,
											"end": 23359,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23322,
											"end": 23359,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23295,
											"end": 23359,
											"name": "tag",
											"source": 0,
											"value": "791"
										},
										{
											"begin": 23295,
											"end": 23359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23291,
											"end": 23648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23291,
											"end": 23648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "792"
										},
										{
											"begin": 23291,
											"end": 23648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23399,
											"end": 23437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "793"
										},
										{
											"begin": 23432,
											"end": 23436,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23399,
											"end": 23427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23410,
											"end": 23426,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 23410,
											"end": 23426,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23399,
											"end": 23405,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23399,
											"end": 23409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23399,
											"end": 23409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23399,
											"end": 23427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23399,
											"end": 23427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23399,
											"end": 23427,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23399,
											"end": 23427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23399,
											"end": 23427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23399,
											"end": 23437,
											"name": "tag",
											"source": 0,
											"value": "793"
										},
										{
											"begin": 23399,
											"end": 23437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23381,
											"end": 23396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23381,
											"end": 23396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23381,
											"end": 23396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23381,
											"end": 23437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23480,
											"end": 23496,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23480,
											"end": 23496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 23469,
											"end": 23507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23502,
											"end": 23506,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23502,
											"end": 23506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23469,
											"end": 23497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23469,
											"end": 23479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23469,
											"end": 23497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23469,
											"end": 23507,
											"name": "tag",
											"source": 0,
											"value": "795"
										},
										{
											"begin": 23469,
											"end": 23507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23451,
											"end": 23507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23451,
											"end": 23507,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23545,
											"end": 23556,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 23545,
											"end": 23556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "797"
										},
										{
											"begin": 23534,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23562,
											"end": 23566,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23562,
											"end": 23566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23534,
											"end": 23557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23540,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23534,
											"end": 23544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23534,
											"end": 23557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23534,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "797"
										},
										{
											"begin": 23534,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23521,
											"end": 23531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23521,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23610,
											"end": 23626,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 23610,
											"end": 23626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23599,
											"end": 23637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "799"
										},
										{
											"begin": 23599,
											"end": 23637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23636,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23632,
											"end": 23636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23599,
											"end": 23627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23599,
											"end": 23627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23599,
											"end": 23605,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23599,
											"end": 23605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23599,
											"end": 23609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23599,
											"end": 23627,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23599,
											"end": 23637,
											"name": "tag",
											"source": 0,
											"value": "799"
										},
										{
											"begin": 23599,
											"end": 23637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23581,
											"end": 23596,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23581,
											"end": 23596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23581,
											"end": 23596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23581,
											"end": 23637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23291,
											"end": 23648,
											"name": "tag",
											"source": 0,
											"value": "792"
										},
										{
											"begin": 23291,
											"end": 23648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23671,
											"end": 23684,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23671,
											"end": 23684,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23661,
											"end": 23684,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23671,
											"end": 23684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23671,
											"end": 23684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23684,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23684,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "801"
										},
										{
											"begin": 23661,
											"end": 23714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23688,
											"end": 23714,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23688,
											"end": 23714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23688,
											"end": 23714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23688,
											"end": 23714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23661,
											"end": 23714,
											"name": "tag",
											"source": 0,
											"value": "801"
										},
										{
											"begin": 23661,
											"end": 23714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 24008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 24008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "802"
										},
										{
											"begin": 23657,
											"end": 24008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "803"
										},
										{
											"begin": 23789,
											"end": 23793,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23755,
											"end": 23784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23766,
											"end": 23783,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23766,
											"end": 23783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23755,
											"end": 23765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23784,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23755,
											"end": 23784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23755,
											"end": 23784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23755,
											"end": 23794,
											"name": "tag",
											"source": 0,
											"value": "803"
										},
										{
											"begin": 23755,
											"end": 23794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23752,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23737,
											"end": 23752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23737,
											"end": 23794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23837,
											"end": 23854,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23837,
											"end": 23854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "805"
										},
										{
											"begin": 23826,
											"end": 23865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23860,
											"end": 23864,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23860,
											"end": 23864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23826,
											"end": 23836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23826,
											"end": 23855,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23826,
											"end": 23865,
											"name": "tag",
											"source": 0,
											"value": "805"
										},
										{
											"begin": 23826,
											"end": 23865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23808,
											"end": 23865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23808,
											"end": 23865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23903,
											"end": 23915,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23903,
											"end": 23915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "807"
										},
										{
											"begin": 23892,
											"end": 23926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23921,
											"end": 23925,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23921,
											"end": 23925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23892,
											"end": 23916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23898,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23892,
											"end": 23902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23892,
											"end": 23916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23892,
											"end": 23926,
											"name": "tag",
											"source": 0,
											"value": "807"
										},
										{
											"begin": 23892,
											"end": 23926,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23879,
											"end": 23889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23879,
											"end": 23926,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23969,
											"end": 23986,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23969,
											"end": 23986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23958,
											"end": 23997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "809"
										},
										{
											"begin": 23958,
											"end": 23997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23992,
											"end": 23996,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 23992,
											"end": 23996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23958,
											"end": 23987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 23958,
											"end": 23987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23958,
											"end": 23964,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23958,
											"end": 23964,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23958,
											"end": 23968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 23958,
											"end": 23987,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23958,
											"end": 23997,
											"name": "tag",
											"source": 0,
											"value": "809"
										},
										{
											"begin": 23958,
											"end": 23997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23940,
											"end": 23955,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23940,
											"end": 23955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23940,
											"end": 23955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23940,
											"end": 23997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23657,
											"end": 24008,
											"name": "tag",
											"source": 0,
											"value": "802"
										},
										{
											"begin": 23657,
											"end": 24008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24044,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24031,
											"end": 24044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24021,
											"end": 24044,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24031,
											"end": 24044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24044,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24044,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "811"
										},
										{
											"begin": 24021,
											"end": 24074,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24061,
											"end": 24074,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24061,
											"end": 24074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24048,
											"end": 24074,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24048,
											"end": 24074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24048,
											"end": 24074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24061,
											"end": 24074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24061,
											"end": 24074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24048,
											"end": 24074,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24048,
											"end": 24074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24021,
											"end": 24074,
											"name": "tag",
											"source": 0,
											"value": "811"
										},
										{
											"begin": 24021,
											"end": 24074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24017,
											"end": 24539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24017,
											"end": 24539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 24017,
											"end": 24539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24118,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "813"
										},
										{
											"begin": 24195,
											"end": 24198,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24118,
											"end": 24190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 24164,
											"end": 24189,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24164,
											"end": 24189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24119,
											"end": 24158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 24153,
											"end": 24157,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24119,
											"end": 24148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 24130,
											"end": 24147,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24130,
											"end": 24147,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24119,
											"end": 24125,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24119,
											"end": 24129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 24119,
											"end": 24129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24119,
											"end": 24148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24119,
											"end": 24148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24119,
											"end": 24148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24119,
											"end": 24148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24119,
											"end": 24148,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24118,
											"end": 24199,
											"name": "tag",
											"source": 0,
											"value": "813"
										},
										{
											"begin": 24118,
											"end": 24199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24100,
											"end": 24104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24100,
											"end": 24115,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24100,
											"end": 24115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24100,
											"end": 24199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24100,
											"end": 24199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24100,
											"end": 24199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24100,
											"end": 24199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24100,
											"end": 24199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24231,
											"end": 24312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "817"
										},
										{
											"begin": 24308,
											"end": 24311,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24231,
											"end": 24303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 24277,
											"end": 24302,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24277,
											"end": 24302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24232,
											"end": 24271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 24266,
											"end": 24270,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24232,
											"end": 24261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 24243,
											"end": 24260,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24243,
											"end": 24260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24232,
											"end": 24238,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24232,
											"end": 24242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 24232,
											"end": 24242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24232,
											"end": 24261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24232,
											"end": 24261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24232,
											"end": 24261,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24232,
											"end": 24261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24232,
											"end": 24261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24231,
											"end": 24312,
											"name": "tag",
											"source": 0,
											"value": "817"
										},
										{
											"begin": 24231,
											"end": 24312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24213,
											"end": 24312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24213,
											"end": 24312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24380,
											"end": 24405,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24380,
											"end": 24405,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24351,
											"end": 24363,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24351,
											"end": 24363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24339,
											"end": 24415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "821"
										},
										{
											"begin": 24339,
											"end": 24415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24411,
											"end": 24414,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24411,
											"end": 24414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24339,
											"end": 24406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 24339,
											"end": 24406,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24380,
											"end": 24405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24340,
											"end": 24374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 24340,
											"end": 24374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24369,
											"end": 24373,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24369,
											"end": 24373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24339,
											"end": 24406,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24339,
											"end": 24406,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24340,
											"end": 24346,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24340,
											"end": 24346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24340,
											"end": 24350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 24340,
											"end": 24364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24339,
											"end": 24415,
											"name": "tag",
											"source": 0,
											"value": "821"
										},
										{
											"begin": 24339,
											"end": 24415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24326,
											"end": 24336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24326,
											"end": 24415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24447,
											"end": 24528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "825"
										},
										{
											"begin": 24524,
											"end": 24527,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 24447,
											"end": 24519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 24493,
											"end": 24518,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24493,
											"end": 24518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 24482,
											"end": 24486,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 24448,
											"end": 24477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 24459,
											"end": 24476,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24459,
											"end": 24476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24454,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 24448,
											"end": 24458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24477,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24448,
											"end": 24477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24448,
											"end": 24477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24447,
											"end": 24528,
											"name": "tag",
											"source": 0,
											"value": "825"
										},
										{
											"begin": 24447,
											"end": 24528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24429,
											"end": 24444,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24429,
											"end": 24444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24429,
											"end": 24444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24429,
											"end": 24528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24017,
											"end": 24539,
											"name": "tag",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 24017,
											"end": 24539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "829"
										},
										{
											"begin": 24641,
											"end": 24645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24641,
											"end": 24656,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24641,
											"end": 24656,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24641,
											"end": 24656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 24625,
											"end": 24629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24625,
											"end": 24635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24625,
											"end": 24635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24625,
											"end": 24635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 24604,
											"end": 24608,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24604,
											"end": 24619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24604,
											"end": 24619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "729"
										},
										{
											"begin": 24583,
											"end": 24587,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24583,
											"end": 24598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24583,
											"end": 24598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24583,
											"end": 24598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24578,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 24572,
											"end": 24582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24572,
											"end": 24599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24572,
											"end": 24657,
											"name": "tag",
											"source": 0,
											"value": "829"
										},
										{
											"begin": 24572,
											"end": 24657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24557,
											"end": 24569,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24557,
											"end": 24569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24557,
											"end": 24569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24557,
											"end": 24657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24705,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24713,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "833"
										},
										{
											"begin": 24696,
											"end": 24725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24718,
											"end": 24724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24696,
											"end": 24717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 24696,
											"end": 24725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24696,
											"end": 24725,
											"name": "tag",
											"source": 0,
											"value": "833"
										},
										{
											"begin": 24696,
											"end": 24725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24685,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24725,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24725,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24725,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24795,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24783,
											"end": 24795,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24783,
											"end": 24795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "834"
										},
										{
											"begin": 24758,
											"end": 24796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24758,
											"end": 24782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 24758,
											"end": 24796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24758,
											"end": 24796,
											"name": "tag",
											"source": 0,
											"value": "834"
										},
										{
											"begin": 24758,
											"end": 24796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24744,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24745,
											"end": 24754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24735,
											"end": 24755,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24796,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24735,
											"end": 24796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "835"
										},
										{
											"begin": 24862,
											"end": 24935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "836"
										},
										{
											"begin": 24919,
											"end": 24923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24919,
											"end": 24934,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 24919,
											"end": 24934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24919,
											"end": 24934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 24903,
											"end": 24907,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24903,
											"end": 24913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24903,
											"end": 24913,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 24882,
											"end": 24886,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24882,
											"end": 24897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24882,
											"end": 24897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24866,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24862,
											"end": 24877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 24862,
											"end": 24881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24898,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24898,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24862,
											"end": 24898,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24862,
											"end": 24898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24862,
											"end": 24935,
											"name": "tag",
											"source": 0,
											"value": "836"
										},
										{
											"begin": 24862,
											"end": 24935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24851,
											"end": 24855,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24842,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24833,
											"end": 24861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 24833,
											"end": 24936,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24833,
											"end": 24936,
											"name": "tag",
											"source": 0,
											"value": "835"
										},
										{
											"begin": 24833,
											"end": 24936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24824,
											"end": 24828,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24815,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24830,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24806,
											"end": 24936,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24988,
											"end": 25000,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24988,
											"end": 25000,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24988,
											"end": 25000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24988,
											"end": 25000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7136,
											"end": 7161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7109,
											"end": 7127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25001,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23161,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23161,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23161,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23161,
											"end": 25008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23161,
											"end": 25008,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 202,
											"name": "tag",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 14,
											"end": 202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 93,
											"end": 106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 93,
											"end": 106,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 176,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 135,
											"end": 177,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 135,
											"end": 177,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 125,
											"end": 178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 125,
											"end": 178,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 115,
											"end": 117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 115,
											"end": 117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 192,
											"end": 193,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 190,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 194,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 115,
											"end": 117,
											"name": "tag",
											"source": 1,
											"value": "844"
										},
										{
											"begin": 115,
											"end": 117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 74,
											"end": 202,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 207,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 207,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 266,
											"end": 272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 298,
											"end": 305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 294,
											"end": 317,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 290,
											"end": 322,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 332,
											"end": 338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 325,
											"end": 347,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 287,
											"end": 289,
											"name": "tag",
											"source": 1,
											"value": "846"
										},
										{
											"begin": 287,
											"end": 289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 384,
											"end": 393,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 371,
											"end": 394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 403,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 428,
											"end": 433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 403,
											"end": 434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 469,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 539,
											"end": 545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 580,
											"end": 589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 571,
											"end": 578,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 567,
											"end": 590,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 563,
											"end": 595,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 620,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 560,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "850"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 644,
											"end": 660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 669,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 694,
											"end": 699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 669,
											"end": 700,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1005,
											"end": 1403,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1005,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1120,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1137,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "856"
										},
										{
											"begin": 1102,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 1243,
											"end": 1248,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "tag",
											"source": 1,
											"value": "857"
										},
										{
											"begin": 1218,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1329,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 1297,
											"end": 1329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "tag",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 1338,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1403,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1874,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1408,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1556,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1542,
											"end": 1551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1557,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1582,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "tag",
											"source": 1,
											"value": "860"
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 1663,
											"end": 1668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "tag",
											"source": 1,
											"value": "861"
										},
										{
											"begin": 1638,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "862"
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "tag",
											"source": 1,
											"value": "862"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1817,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1868,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1874,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1879,
											"end": 2204,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1879,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 1994,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2006,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2011,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "864"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2014,
											"end": 2036,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "864"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2073,
											"end": 2082,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2083,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 2117,
											"end": 2122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "tag",
											"source": 1,
											"value": "865"
										},
										{
											"begin": 2092,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2198,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 2204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2209,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 2209,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2315,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2332,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2342,
											"end": 2348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "tag",
											"source": 1,
											"value": "867"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2397,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 2428,
											"end": 2433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 2406,
											"end": 2434,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2469,
											"end": 2898,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2469,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2592,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2597,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2622,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "tag",
											"source": 1,
											"value": "871"
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2659,
											"end": 2668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2646,
											"end": 2669,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 2700,
											"end": 2705,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "tag",
											"source": 1,
											"value": "872"
										},
										{
											"begin": 2678,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2725,
											"end": 2730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2782,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2785,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2786,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 2817,
											"end": 2837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2837,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 2795,
											"end": 2797,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2903,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2903,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3028,
											"end": 3030,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3031,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "875"
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3056,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "tag",
											"source": 1,
											"value": "875"
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3103,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "876"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "tag",
											"source": 1,
											"value": "876"
										},
										{
											"begin": 3112,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3216,
											"end": 3218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "858"
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3298,
											"end": 3727,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 3298,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3454,
											"end": 3456,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3452,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3457,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3473,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3482,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "tag",
											"source": 1,
											"value": "880"
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "881"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 3503,
											"end": 3543,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3503,
											"end": 3543,
											"name": "tag",
											"source": 1,
											"value": "881"
										},
										{
											"begin": 3503,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3543,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 3607,
											"end": 3609,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3605,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "842"
										},
										{
											"begin": 3562,
											"end": 3611,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3562,
											"end": 3611,
											"name": "tag",
											"source": 1,
											"value": "882"
										},
										{
											"begin": 3562,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3611,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3643,
											"end": 3652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3633,
											"end": 3658,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "tag",
											"source": 1,
											"value": "883"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3721,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3706,
											"end": 3721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3412,
											"end": 3727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3732,
											"end": 3922,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3732,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3846,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3847,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 3812,
											"end": 3814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3872,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 3814,
											"name": "tag",
											"source": 1,
											"value": "885"
										},
										{
											"begin": 3812,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3893,
											"end": 3916,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3802,
											"end": 3922,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3927,
											"end": 4121,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 3927,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4052,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4047,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4048,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4053,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "887"
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "tag",
											"source": 1,
											"value": "887"
										},
										{
											"begin": 4018,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4008,
											"end": 4121,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4126,
											"end": 4442,
											"name": "tag",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 4126,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4230,
											"end": 4236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4271,
											"end": 4280,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4286,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4311,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "889"
										},
										{
											"begin": 4251,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4348,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4348,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4373,
											"end": 4391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4392,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4392,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4432,
											"end": 4434,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4241,
											"end": 4442,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4447,
											"end": 4842,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4447,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4549,
											"end": 4555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4613,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4596,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4614,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "891"
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4617,
											"end": 4639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "tag",
											"source": 1,
											"value": "891"
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 4683,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4660,
											"end": 4683,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4715,
											"end": 4733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4702,
											"end": 4734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4834,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4836,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4836,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4568,
											"end": 4842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4568,
											"end": 4842,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7172,
											"end": 7834,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 7172,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7315,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7342,
											"end": 7344,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7340,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7324,
											"end": 7345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7374,
											"end": 7380,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7381,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7423,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7442,
											"end": 7446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "tag",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7469,
											"end": 7475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7476,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7578,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7584,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7547,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7549,
											"end": 7551,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7526,
											"end": 7552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7519,
											"end": 7585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "900"
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "tag",
											"source": 1,
											"value": "902"
										},
										{
											"begin": 7455,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7613,
											"end": 7619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7607,
											"end": 7620,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7683,
											"end": 7687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7678,
											"end": 7680,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7669,
											"end": 7675,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7667,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7654,
											"end": 7676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7643,
											"end": 7688,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "tag",
											"source": 1,
											"value": "903"
										},
										{
											"begin": 7604,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7750,
											"end": 7752,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7738,
											"end": 7753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7755,
											"end": 7821,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 7734,
											"end": 7822,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7823,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7823,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7823,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7825,
											"end": 7827,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7715,
											"end": 7828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7828,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7293,
											"end": 7834,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16311,
											"end": 17340,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 16311,
											"end": 17340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16573,
											"end": 16577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16621,
											"end": 16624,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16610,
											"end": 16619,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16606,
											"end": 16625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16652,
											"end": 16658,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 16650,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16678,
											"end": 16680,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16716,
											"end": 16722,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16711,
											"end": 16713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16700,
											"end": 16709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16696,
											"end": 16714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16689,
											"end": 16723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16762,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16754,
											"end": 16756,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16743,
											"end": 16752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16783,
											"end": 16789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16818,
											"end": 16824,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16812,
											"end": 16825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16849,
											"end": 16855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 16847,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16834,
											"end": 16856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16887,
											"end": 16890,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 16876,
											"end": 16885,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16872,
											"end": 16891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 16891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 16891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16926,
											"end": 16928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 16924,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 16914,
											"end": 16929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16900,
											"end": 16929,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16900,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16947,
											"end": 16951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "tag",
											"source": 1,
											"value": "927"
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16974,
											"end": 16980,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16971,
											"end": 16972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16968,
											"end": 16981,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "929"
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17039,
											"end": 17052,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17039,
											"end": 17052,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17035,
											"end": 17097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17023,
											"end": 17098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17023,
											"end": 17098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17153,
											"end": 17168,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17153,
											"end": 17168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17153,
											"end": 17168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17153,
											"end": 17168,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17118,
											"end": 17130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16996,
											"end": 16997,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16989,
											"end": 16998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "927"
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "tag",
											"source": 1,
											"value": "929"
										},
										{
											"begin": 16960,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17234,
											"end": 17289,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 17234,
											"end": 17289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17234,
											"end": 17289,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 17234,
											"end": 17289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17229,
											"end": 17231,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17214,
											"end": 17232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17207,
											"end": 17290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17321,
											"end": 17324,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17306,
											"end": 17325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17299,
											"end": 17334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17195,
											"end": 17198,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 17340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16582,
											"end": 17340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17930,
											"end": 18058,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 17930,
											"end": 18058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17970,
											"end": 17973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18001,
											"end": 18002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17997,
											"end": 18003,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17994,
											"end": 17995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17991,
											"end": 18004,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 17990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 17990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "934"
										},
										{
											"begin": 17988,
											"end": 17990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "934"
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "tag",
											"source": 1,
											"value": "934"
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18043,
											"end": 18052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17978,
											"end": 18058,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18063,
											"end": 18183,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 18063,
											"end": 18183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18103,
											"end": 18104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18129,
											"end": 18130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18119,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "938"
										},
										{
											"begin": 18119,
											"end": 18121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18134,
											"end": 18152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "938"
										},
										{
											"begin": 18134,
											"end": 18152,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "939"
										},
										{
											"begin": 18134,
											"end": 18152,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18134,
											"end": 18152,
											"name": "tag",
											"source": 1,
											"value": "938"
										},
										{
											"begin": 18134,
											"end": 18152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18168,
											"end": 18177,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18168,
											"end": 18177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18109,
											"end": 18183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18188,
											"end": 18416,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 18188,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18228,
											"end": 18235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18354,
											"end": 18355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18286,
											"end": 18352,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18282,
											"end": 18356,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18279,
											"end": 18280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18357,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18271,
											"end": 18272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18264,
											"end": 18273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18274,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18253,
											"end": 18358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18250,
											"end": 18252,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18250,
											"end": 18252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "942"
										},
										{
											"begin": 18250,
											"end": 18252,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "942"
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "tag",
											"source": 1,
											"value": "942"
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18401,
											"end": 18410,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18401,
											"end": 18410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18240,
											"end": 18416,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18421,
											"end": 18683,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 18421,
											"end": 18683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18460,
											"end": 18467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18492,
											"end": 18502,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 18529,
											"end": 18531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18526,
											"end": 18527,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18522,
											"end": 18532,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18559,
											"end": 18561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18556,
											"end": 18557,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18552,
											"end": 18562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18615,
											"end": 18618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18611,
											"end": 18613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18607,
											"end": 18619,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18602,
											"end": 18605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18599,
											"end": 18620,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18592,
											"end": 18595,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18585,
											"end": 18596,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18578,
											"end": 18597,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18574,
											"end": 18621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18573,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "945"
										},
										{
											"begin": 18571,
											"end": 18573,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "945"
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "tag",
											"source": 1,
											"value": "945"
										},
										{
											"begin": 18624,
											"end": 18642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18664,
											"end": 18677,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18664,
											"end": 18677,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 18472,
											"end": 18683,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18472,
											"end": 18683,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18688,
											"end": 18813,
											"name": "tag",
											"source": 1,
											"value": "686"
										},
										{
											"begin": 18688,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18728,
											"end": 18732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18756,
											"end": 18757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18753,
											"end": 18754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18750,
											"end": 18758,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 18747,
											"end": 18749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18747,
											"end": 18749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "948"
										},
										{
											"begin": 18747,
											"end": 18749,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18761,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "948"
										},
										{
											"begin": 18761,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 18761,
											"end": 18779,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18761,
											"end": 18779,
											"name": "tag",
											"source": 1,
											"value": "948"
										},
										{
											"begin": 18761,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18798,
											"end": 18807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18798,
											"end": 18807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18737,
											"end": 18813,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18818,
											"end": 18930,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 18818,
											"end": 18930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18850,
											"end": 18851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18876,
											"end": 18877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18866,
											"end": 18868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "951"
										},
										{
											"begin": 18866,
											"end": 18868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "951"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "939"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "tag",
											"source": 1,
											"value": "951"
										},
										{
											"begin": 18881,
											"end": 18899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18915,
											"end": 18924,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 18915,
											"end": 18924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18856,
											"end": 18930,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18935,
											"end": 19128,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 18935,
											"end": 19128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18970,
											"end": 18973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19001,
											"end": 19067,
											"name": "PUSH",
											"source": 1,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18994,
											"end": 18999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18991,
											"end": 19068,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 18990,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 18990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "954"
										},
										{
											"begin": 18988,
											"end": 18990,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19071,
											"end": 19089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "954"
										},
										{
											"begin": 19071,
											"end": 19089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 19071,
											"end": 19089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19071,
											"end": 19089,
											"name": "tag",
											"source": 1,
											"value": "954"
										},
										{
											"begin": 19071,
											"end": 19089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19107,
											"end": 19122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19107,
											"end": 19122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18978,
											"end": 19128,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19133,
											"end": 19317,
											"name": "tag",
											"source": 1,
											"value": "935"
										},
										{
											"begin": 19133,
											"end": 19317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19185,
											"end": 19262,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19182,
											"end": 19183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19175,
											"end": 19263,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19282,
											"end": 19286,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 19279,
											"end": 19280,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19272,
											"end": 19287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19306,
											"end": 19310,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19303,
											"end": 19304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19296,
											"end": 19311,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19322,
											"end": 19506,
											"name": "tag",
											"source": 1,
											"value": "939"
										},
										{
											"begin": 19322,
											"end": 19506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19374,
											"end": 19451,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19371,
											"end": 19372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19364,
											"end": 19452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19471,
											"end": 19475,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 19468,
											"end": 19469,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19461,
											"end": 19476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19495,
											"end": 19499,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19492,
											"end": 19493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19485,
											"end": 19500,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19511,
											"end": 19665,
											"name": "tag",
											"source": 1,
											"value": "848"
										},
										{
											"begin": 19511,
											"end": 19665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19590,
											"end": 19595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19586,
											"end": 19640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19579,
											"end": 19584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19576,
											"end": 19641,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19566,
											"end": 19568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 19566,
											"end": 19568,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19655,
											"end": 19656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19652,
											"end": 19653,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19645,
											"end": 19657,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19670,
											"end": 19788,
											"name": "tag",
											"source": 1,
											"value": "869"
										},
										{
											"begin": 19670,
											"end": 19788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19756,
											"end": 19761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19749,
											"end": 19762,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19742,
											"end": 19763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19732,
											"end": 19764,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19722,
											"end": 19724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 19722,
											"end": 19724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19778,
											"end": 19779,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19775,
											"end": 19776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19768,
											"end": 19780,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19793,
											"end": 19914,
											"name": "tag",
											"source": 1,
											"value": "878"
										},
										{
											"begin": 19793,
											"end": 19914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19878,
											"end": 19888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19871,
											"end": 19876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19867,
											"end": 19889,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19860,
											"end": 19865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19857,
											"end": 19890,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 19847,
											"end": 19849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 19847,
											"end": 19849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19904,
											"end": 19905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19901,
											"end": 19902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19894,
											"end": 19906,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"ATHvariance()": "80670f3c",
							"_buyEcosystemFee()": "2843631d",
							"_buyLiquidityFee()": "dc44b6a0",
							"_buyMarketingFee()": "c5d24189",
							"_buyTeamFee()": "c469b6dd",
							"_maxWalletAmount()": "6c0a24eb",
							"_sellEcosystemFee()": "248dd232",
							"_sellLiquidityFee()": "88790a68",
							"_sellMarketingFee()": "c8607952",
							"_sellTeamFee()": "cab03471",
							"addBot(address)": "ffecf516",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"canBlackList()": "301ad558",
							"canChangeTax()": "39a53c4e",
							"canPause()": "323be1c5",
							"configureDiamondFloor(bool,uint16)": "fe0bb982",
							"configureStrongHands(bool,uint32)": "729cb3f2",
							"cooldown()": "787a08a6",
							"cooldownRemaining(address)": "9d82190f",
							"decimals()": "313ce567",
							"diamondFloor()": "c95457ff",
							"disableBlackListing()": "d55cb78a",
							"disablePauseAbility()": "6aabff3f",
							"disableTaxChange()": "99a7b9bc",
							"disableToken()": "3e0f966d",
							"enableToken()": "8e360253",
							"excludeFromFee(address)": "437823ec",
							"includeInFee(address)": "ea2f0b37",
							"isBot(address)": "3bbac579",
							"manualSendToken(address)": "29409395",
							"manualsend()": "6fc3eaec",
							"manualswap()": "c3c8cd80",
							"name()": "06fdde03",
							"numTokensToSwap()": "01a6c43b",
							"openTrading(uint256)": "d1633649",
							"owner()": "8da5cb5b",
							"pairPrice()": "9491f94d",
							"removeBot(address)": "5fecd926",
							"renounceOwnership()": "715018a6",
							"setBuyTaxes(uint256,uint256,uint256,uint256)": "e4bf1bed",
							"setMaxWalletAmount(uint256)": "27a14fc2",
							"setSellTaxes(uint256,uint256,uint256,uint256)": "f480fec2",
							"setTransferTransactionMultiplier(uint256)": "a850673d",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"tradingOpen()": "ffb54a99",
							"transfer(address,uint256)": "a9059cbb",
							"transferFeeIncreaseFactor()": "72b2aecc",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Pair()": "49bd5a5e",
							"updateEcosystemAddress(address)": "db0045ec",
							"updateLpRecipient(address)": "cdb3858f",
							"updateMarketingAddress(address)": "2369bf83",
							"updateNumTokensToSwap(uint256)": "e315a6da",
							"updateTeamAddress(address)": "14eb76ac"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyMarketingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyLiquidityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyTeamFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_buyEcosystemFee\",\"type\":\"uint256\"}],\"name\":\"BuyFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTxAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellMarketingFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellLiquidityFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellTeamFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_sellEcosystemFee\",\"type\":\"uint256\"}],\"name\":\"SellFeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ATHvariance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyEcosystemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_buyTeamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_maxWalletAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellEcosystemFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellLiquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellMarketingFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_sellTeamFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canBlackList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canChangeTax\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercentage\",\"type\":\"uint16\"}],\"name\":\"configureDiamondFloor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"name\":\"configureStrongHands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooldown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"cooldownRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"days_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hours_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minutes_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seconds_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"diamondFloor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"triggerPercentage\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"athPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellStopped\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"blockedAth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableBlackListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disablePauseAbility\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableTaxChange\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"manualSendToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualsend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manualswap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numTokensToSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"botBlocks\",\"type\":\"uint256\"}],\"name\":\"openTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystemFee\",\"type\":\"uint256\"}],\"name\":\"setBuyTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWalletAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxWalletAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketingFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidityFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"teamFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ecosystemFee\",\"type\":\"uint256\"}],\"name\":\"setSellTaxes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_multiplier\",\"type\":\"uint256\"}],\"name\":\"setTransferTransactionMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFeeIncreaseFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"ecosystemAddress\",\"type\":\"address\"}],\"name\":\"updateEcosystemAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"lpRecipient\",\"type\":\"address\"}],\"name\":\"updateLpRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"marketingAddress\",\"type\":\"address\"}],\"name\":\"updateMarketingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"updateNumTokensToSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"teamAddress\",\"type\":\"address\"}],\"name\":\"updateTeamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/gainzilla.sol\":\"gainZilla\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/gainzilla.sol\":{\"keccak256\":\"0x6dc2a28c3aa9b26a9a914f506c69d9b8404f627192d77743f96de93ec1a14dd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6fd2cc0b55bc6bb59dd724bd64d67d1457c61a25a49b1016d709a9eb7a3c4ed\",\"dweb:/ipfs/QmZQuyfmdWTUhejKtFz1ZaNh17qojFRfSwMLbeMANPzfgr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 228,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 230,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 749,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 755,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 759,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_isExcludedFromFee",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 768,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_firstBlock",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 770,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_botBlocks",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 777,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_maxWalletAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 784,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "numTokensToSwap",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 787,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyLiquidityFee",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 790,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyLiquidityFee",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 793,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyEcosystemFee",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 796,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyEcosystemFee",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 799,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyMarketingFee",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 802,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyMarketingFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 805,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_buyTeamFee",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 808,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousBuyTeamFee",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 811,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellLiquidityFee",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 814,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellLiquidityFee",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 817,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellEcosystemFee",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 820,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellEcosystemFee",
								"offset": 0,
								"slot": "20",
								"type": "t_uint256"
							},
							{
								"astId": 823,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellMarketingFee",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 826,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellMarketingFee",
								"offset": 0,
								"slot": "22",
								"type": "t_uint256"
							},
							{
								"astId": 829,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_sellTeamFee",
								"offset": 0,
								"slot": "23",
								"type": "t_uint256"
							},
							{
								"astId": 832,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_previousSellTeamFee",
								"offset": 0,
								"slot": "24",
								"type": "t_uint256"
							},
							{
								"astId": 835,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "transferFeeIncreaseFactor",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 858,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "cooldown",
								"offset": 0,
								"slot": "26",
								"type": "t_struct(StrongHandsConfig)855_storage"
							},
							{
								"astId": 872,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "diamondFloor",
								"offset": 0,
								"slot": "28",
								"type": "t_struct(DiamondFloor)869_storage"
							},
							{
								"astId": 876,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "bots",
								"offset": 0,
								"slot": "32",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 883,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_marketingAddress",
								"offset": 0,
								"slot": "33",
								"type": "t_address_payable"
							},
							{
								"astId": 890,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_teamAddress",
								"offset": 0,
								"slot": "34",
								"type": "t_address_payable"
							},
							{
								"astId": 897,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_ecosystemAddress",
								"offset": 0,
								"slot": "35",
								"type": "t_address_payable"
							},
							{
								"astId": 904,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_lpRecipient",
								"offset": 0,
								"slot": "36",
								"type": "t_address_payable"
							},
							{
								"astId": 907,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "37",
								"type": "t_contract(IUniswapV2Router02)707"
							},
							{
								"astId": 909,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "uniswapV2Pair",
								"offset": 0,
								"slot": "38",
								"type": "t_address"
							},
							{
								"astId": 911,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "_maxTxAmount",
								"offset": 0,
								"slot": "39",
								"type": "t_uint256"
							},
							{
								"astId": 914,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "tradingOpen",
								"offset": 0,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 917,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "inSwap",
								"offset": 1,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 920,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "canPause",
								"offset": 2,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 923,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "canBlackList",
								"offset": 3,
								"slot": "40",
								"type": "t_bool"
							},
							{
								"astId": 926,
								"contract": "contracts/gainzilla.sol:gainZilla",
								"label": "canChangeTax",
								"offset": 4,
								"slot": "40",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IUniswapV2Router02)707": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(DiamondFloor)869_storage": {
								"encoding": "inplace",
								"label": "struct gainZilla.DiamondFloor",
								"members": [
									{
										"astId": 860,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 862,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "triggerPercentage",
										"offset": 1,
										"slot": "0",
										"type": "t_uint16"
									},
									{
										"astId": 864,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "athPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 866,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "sellStopped",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 868,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "blockedAth",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(StrongHandsConfig)855_storage": {
								"encoding": "inplace",
								"label": "struct gainZilla.StrongHandsConfig",
								"members": [
									{
										"astId": 848,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "enabled",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 850,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "duration",
										"offset": 1,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 854,
										"contract": "contracts/gainzilla.sol:gainZilla",
										"label": "walletList",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/gainzilla.sol": {
				"ast": {
					"absolutePath": "contracts/gainzilla.sol",
					"exportedSymbols": {
						"Context": [
							11
						],
						"IERC20": [
							78
						],
						"IERC20Extented": [
							725
						],
						"IUniswapV2Factory": [
							592
						],
						"IUniswapV2Pair": [
							582
						],
						"IUniswapV2Router02": [
							707
						],
						"Ownable": [
							342
						],
						"SafeMath": [
							224
						],
						"gainZilla": [
							3099
						]
					},
					"id": 3100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "682:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "Context",
							"nameLocation": "725:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "801:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "818:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "818:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "811:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "748:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "792:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:9:0"
									},
									"scope": 11,
									"src": "739:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3100,
							"src": "707:130:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "IERC20",
							"nameLocation": "849:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "871:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "908:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "907:9:0"
									},
									"scope": 78,
									"src": "862:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 23,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "931:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "949:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "941:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:17:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "981:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:9:0"
									},
									"scope": 78,
									"src": "922:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1004:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1021:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1013:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1040:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:35:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1066:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1066:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1065:6:0"
									},
									"scope": 78,
									"src": "995:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1086:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1104:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1096:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1119:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1111:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1095:32:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:9:0"
									},
									"scope": 78,
									"src": "1077:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 50,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1174:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1190:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1199:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1181:33:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1233:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:6:0"
									},
									"scope": 78,
									"src": "1165:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1253:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1274:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1266:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1290:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1282:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1309:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:51:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "1335:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:6:0"
									},
									"scope": 78,
									"src": "1244:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 69,
									"name": "Transfer",
									"nameLocation": "1352:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1361:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1399:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1383:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1411:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1403:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1360:57:0"
									},
									"src": "1346:72:0"
								},
								{
									"anonymous": false,
									"id": 77,
									"name": "Approval",
									"nameLocation": "1429:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1438:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1477:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1461:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1494:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1486:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:63:0"
									},
									"src": "1423:78:0"
								}
							],
							"scope": 3100,
							"src": "839:664:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "SafeMath",
							"nameLocation": "1513:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1595:108:0",
										"statements": [
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1613:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "1605:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 87,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 89,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "1617:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 90,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "1621:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1617:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1605:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 94,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 95,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1645:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1640:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1648:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1632:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "1632:46:0"
											},
											{
												"expression": {
													"id": 100,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "1695:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 86,
												"id": 101,
												"nodeType": "Return",
												"src": "1688:8:0"
											}
										]
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "1537:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1549:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1541:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1560:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1552:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1540:22:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1586:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1585:9:0"
									},
									"scope": 224,
									"src": "1528:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "1776:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 113,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "1797:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 114,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "1800:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1803:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 112,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															119,
															146
														],
														"referencedDeclaration": 146,
														"src": "1793:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 111,
												"id": 117,
												"nodeType": "Return",
												"src": "1786:50:0"
											}
										]
									},
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1718:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1730:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1722:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1741:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1733:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1721:22:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1767:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:9:0"
									},
									"scope": 224,
									"src": "1709:134:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1944:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 131,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1962:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 132,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1967:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1962:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 134,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1970:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1954:29:0"
											},
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2001:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "1993:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 137,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1993:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2005:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2005:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1993:17:0"
											},
											{
												"expression": {
													"id": 143,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2027:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 129,
												"id": 144,
												"nodeType": "Return",
												"src": "2020:8:0"
											}
										]
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "1858:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1870:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1862:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1881:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1873:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "1898:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1884:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1861:50:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1935:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1934:9:0"
									},
									"scope": 224,
									"src": "1849:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 179,
										"nodeType": "Block",
										"src": "2108:172:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 155,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2122:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2127:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2122:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "2118:45:0",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "2130:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 154,
															"id": 159,
															"nodeType": "Return",
															"src": "2144:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2180:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 179,
														"src": "2172:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 164,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "2184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 165,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "2188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2172:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 169,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "2207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 170,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "2211:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2207:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "2216:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2207:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2199:56:0"
											},
											{
												"expression": {
													"id": 177,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "2272:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 154,
												"id": 178,
												"nodeType": "Return",
												"src": "2265:8:0"
											}
										]
									},
									"id": 180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "2050:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2054:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2073:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2065:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:22:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:9:0"
									},
									"scope": 224,
									"src": "2041:239:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "2353:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "2374:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 191,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "2377:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2380:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 189,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															196,
															223
														],
														"referencedDeclaration": 223,
														"src": "2370:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2370:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 188,
												"id": 194,
												"nodeType": "Return",
												"src": "2363:46:0"
											}
										]
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2295:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2307:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2299:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2318:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2310:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:22:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "2344:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:9:0"
									},
									"scope": 224,
									"src": "2286:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "2517:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "2535:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2535:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 211,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2542:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2527:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2527:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2527:28:0"
											},
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "2573:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "2565:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 214,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2565:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 219,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 216,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 198,
														"src": "2577:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2581:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2565:17:0"
											},
											{
												"expression": {
													"id": 220,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "2599:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 221,
												"nodeType": "Return",
												"src": "2592:8:0"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "2431:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2443:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2435:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2454:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2446:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "2471:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2457:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 201,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2457:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:50:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "2508:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:9:0"
									},
									"scope": 224,
									"src": "2422:185:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3100,
							"src": "1505:1104:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 225,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "2631:7:0"
									},
									"id": 226,
									"nodeType": "InheritanceSpecifier",
									"src": "2631:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								11
							],
							"name": "Ownable",
							"nameLocation": "2620:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "2661:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2645:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 227,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2645:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "_previousOwner",
									"nameLocation": "2689:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2673:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2673:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 236,
									"name": "OwnershipTransferred",
									"nameLocation": "2715:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2752:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2736:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2767:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2735:57:0"
									},
									"src": "2709:84:0"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "2813:135:0",
										"statements": [
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "2831:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "2823:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 239,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2823:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 241,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2843:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2843:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:32:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2865:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2874:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2865:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2865:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 249,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2919:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2919:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 253,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "2931:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "2898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "EmitStatement",
												"src": "2893:48:0"
											}
										]
									},
									"id": 257,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2810:2:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2813:0:0"
									},
									"scope": 342,
									"src": "2799:149:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "3001:30:0",
										"statements": [
											{
												"expression": {
													"id": 262,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "3018:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 261,
												"id": 263,
												"nodeType": "Return",
												"src": "3011:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2963:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2968:2:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2992:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2991:9:0"
									},
									"scope": 342,
									"src": "2954:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "3058:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "3076:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 269,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "3086:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3086:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3076:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3100:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 274,
												"nodeType": "ExpressionStatement",
												"src": "3068:67:0"
											},
											{
												"id": 275,
												"nodeType": "PlaceholderStatement",
												"src": "3145:1:0"
											}
										]
									},
									"id": 277,
									"name": "onlyOwner",
									"nameLocation": "3046:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3055:2:0"
									},
									"src": "3037:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3372:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 286,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "3390:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3410:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3402:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3402:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3402:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3390:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3414:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3382:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "3382:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "3484:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3465:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "3465:28:0"
											}
										]
									},
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "3159:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 282,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "3362:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3362:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3311:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3337:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3329:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:18:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3372:0:0"
									},
									"scope": 342,
									"src": "3302:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "3717:124:0",
										"statements": [
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3735:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 319,
														"src": "3727:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 306,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3727:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 309,
												"initialValue": {
													"id": 308,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "3746:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3727:25:0"
											},
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 310,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3762:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 311,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "3771:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3762:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "3762:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 315,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3815:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 316,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "3825:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 314,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3794:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3794:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "EmitStatement",
												"src": "3789:45:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3506:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3663:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3690:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3682:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3681:18:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3717:0:0"
									},
									"scope": 342,
									"src": "3654:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3907:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 326,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "3943:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3959:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3951:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 327,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3951:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3951:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 325,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3922:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3922:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "EmitStatement",
												"src": "3917:45:0"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 333,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3972:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 334,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3981:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3981:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3972:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "3972:19:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 322,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "3895:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3895:11:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3860:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3877:2:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3907:0:0"
									},
									"scope": 342,
									"src": "3851:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3100,
							"src": "2611:1389:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "IUniswapV2Pair",
							"nameLocation": "4012:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 350,
									"name": "Approval",
									"nameLocation": "4039:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4064:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4048:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4087:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4071:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4101:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "4096:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4047:60:0"
									},
									"src": "4033:75:0"
								},
								{
									"anonymous": false,
									"id": 358,
									"name": "Transfer",
									"nameLocation": "4119:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4144:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4128:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4166:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4150:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4175:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "4170:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4127:54:0"
									},
									"src": "4113:69:0"
								},
								{
									"functionSelector": "06fdde03",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "4197:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4201:2:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "4227:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4227:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:15:0"
									},
									"scope": 582,
									"src": "4188:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "4256:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4262:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "4288:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 365,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:15:0"
									},
									"scope": 582,
									"src": "4247:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4317:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4325:2:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "4351:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 370,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4351:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4350:7:0"
									},
									"scope": 582,
									"src": "4308:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4372:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4383:2:0"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "4409:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4408:6:0"
									},
									"scope": 582,
									"src": "4363:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4429:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4447:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4439:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:15:0"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "4477:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4477:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:6:0"
									},
									"scope": 582,
									"src": "4420:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4497:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4530:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4522:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4506:32:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "4562:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4562:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4561:6:0"
									},
									"scope": 582,
									"src": "4488:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 403,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4583:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4599:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4591:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4613:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4608:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4590:29:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "4638:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 400,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4638:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:6:0"
									},
									"scope": 582,
									"src": "4574:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4679:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4679:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4666:24:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4709:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4709:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4708:6:0"
									},
									"scope": 582,
									"src": "4649:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4729:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4742:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4764:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4756:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4768:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4768:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:38:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "4798:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 420,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:6:0"
									},
									"scope": 582,
									"src": "4720:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 428,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "4819:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4835:2:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "4861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 425,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:9:0"
									},
									"scope": 582,
									"src": "4810:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "4884:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4899:2:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4925:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 430,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:9:0"
									},
									"scope": 582,
									"src": "4875:59:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "4948:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4963:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4955:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:15:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "4993:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:6:0"
									},
									"scope": 582,
									"src": "4939:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "5014:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5029:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5021:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5044:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5053:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5053:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "5070:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5065:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5065:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5086:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 449,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5097:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5089:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5108:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "5100:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 453,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5020:90:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5119:0:0"
									},
									"scope": 582,
									"src": "5005:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 465,
									"name": "Mint",
									"nameLocation": "5132:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5153:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5137:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5161:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5161:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5180:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "5175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:52:0"
									},
									"src": "5126:63:0"
								},
								{
									"anonymous": false,
									"id": 475,
									"name": "Burn",
									"nameLocation": "5200:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5221:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5205:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5234:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5229:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5248:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5243:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "5257:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5257:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5204:72:0"
									},
									"src": "5194:83:0"
								},
								{
									"anonymous": false,
									"id": 489,
									"name": "Swap",
									"nameLocation": "5288:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5318:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5302:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "5339:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5334:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "5363:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5358:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5358:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "5387:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "5412:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5407:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5448:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5432:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:164:0"
									},
									"src": "5282:175:0"
								},
								{
									"anonymous": false,
									"id": 495,
									"name": "Sync",
									"nameLocation": "5468:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "5481:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5473:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 490,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "5499:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "5491:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 492,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:36:0"
									},
									"src": "5462:47:0"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "5524:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5541:2:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "5567:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5567:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5566:6:0"
									},
									"scope": 582,
									"src": "5515:58:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "5587:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5594:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "5620:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5619:9:0"
									},
									"scope": 582,
									"src": "5578:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "5643:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5649:2:0"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5675:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:0"
									},
									"scope": 582,
									"src": "5634:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "5698:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5704:2:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "5730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:0"
									},
									"scope": 582,
									"src": "5689:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "5753:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5764:2:0"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "5798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 517,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "5816:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 519,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "5808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "5833:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "5826:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 521,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "5826:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:63:0"
									},
									"scope": 582,
									"src": "5744:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "5867:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5887:2:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5912:6:0"
									},
									"scope": 582,
									"src": "5858:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "5933:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5953:2:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "5979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:6:0"
									},
									"scope": 582,
									"src": "5924:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nameLocation": "5999:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6004:2:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "6030:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6030:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6029:6:0"
									},
									"scope": 582,
									"src": "5990:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "6051:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6064:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6056:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6055:12:0"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "6086:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6086:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6085:16:0"
									},
									"scope": 582,
									"src": "6042:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "6116:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6129:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6121:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6121:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6120:12:0"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6151:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6170:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6165:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6150:28:0"
									},
									"scope": 582,
									"src": "6107:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "6193:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "6203:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6198:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "6220:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6215:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6240:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6232:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6259:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "6244:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6197:67:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6273:0:0"
									},
									"scope": 582,
									"src": "6184:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nameLocation": "6288:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6301:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "6293:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6292:12:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6313:0:0"
									},
									"scope": 582,
									"src": "6279:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "6328:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6332:2:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6343:0:0"
									},
									"scope": 582,
									"src": "6319:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "6359:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6370:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "6379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:18:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6396:0:0"
									},
									"scope": 582,
									"src": "6350:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3100,
							"src": "4002:2397:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 592,
							"linearizedBaseContracts": [
								592
							],
							"name": "IUniswapV2Factory",
							"nameLocation": "6411:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c9c65396",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nameLocation": "6444:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "6463:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6455:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "6479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6454:32:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "pair",
												"nameLocation": "6513:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6505:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6504:14:0"
									},
									"scope": 592,
									"src": "6435:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3100,
							"src": "6401:120:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 707,
							"linearizedBaseContracts": [
								707
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "6533:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "791ac947",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "6567:50:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6635:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6627:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "6661:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6653:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6702:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6683:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 597,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6683:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 598,
													"nodeType": "ArrayTypeName",
													"src": "6683:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6724:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6716:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6744:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6736:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6617:141:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6767:0:0"
									},
									"scope": 707,
									"src": "6558:210:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "6782:53:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "6850:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6845:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6845:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "6873:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6868:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6868:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6914:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6895:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6895:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "6895:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6936:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6928:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "6953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "6948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6948:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6835:132:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6976:0:0"
									},
									"scope": 707,
									"src": "6773:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "6991:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6998:2:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "7024:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7023:9:0"
									},
									"scope": 707,
									"src": "6982:51:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "7047:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7051:2:0"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "7077:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7076:9:0"
									},
									"scope": 707,
									"src": "7038:48:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "7100:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7133:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7125:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "7156:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7148:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "7192:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7184:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "7224:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7216:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7254:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7246:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "7274:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7266:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7266:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7115:173:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "7323:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7315:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "7344:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7336:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "7363:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "7355:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7314:59:0"
									},
									"scope": 707,
									"src": "7091:283:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "7388:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "7399:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7394:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "7413:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "7428:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7423:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7393:44:0"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "7466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "7461:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7460:14:0"
									},
									"scope": 707,
									"src": "7379:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "7489:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7507:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "7522:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7517:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "7538:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7533:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7533:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:48:0"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7578:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "7573:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7572:16:0"
									},
									"scope": 707,
									"src": "7480:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "7603:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7620:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7615:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "7636:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "7652:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7647:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7647:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7614:49:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7692:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7687:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7686:15:0"
									},
									"scope": 707,
									"src": "7594:108:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "7716:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "7735:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7730:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7730:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7764:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7745:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 687,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7745:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 688,
													"nodeType": "ArrayTypeName",
													"src": "7745:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7729:40:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "7793:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 691,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7793:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 692,
													"nodeType": "ArrayTypeName",
													"src": "7793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7792:23:0"
									},
									"scope": 707,
									"src": "7707:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "7830:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "7848:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7843:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7843:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "7878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7859:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 698,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "7859:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 699,
													"nodeType": "ArrayTypeName",
													"src": "7859:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7842:41:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "7921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "7907:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 702,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7907:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 703,
													"nodeType": "ArrayTypeName",
													"src": "7907:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7906:23:0"
									},
									"scope": 707,
									"src": "7821:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3100,
							"src": "6523:1409:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 708,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "7970:6:0"
									},
									"id": 709,
									"nodeType": "InheritanceSpecifier",
									"src": "7970:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 725,
							"linearizedBaseContracts": [
								725,
								78
							],
							"name": "IERC20Extented",
							"nameLocation": "7952:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7992:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8000:2:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "8034:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 711,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8034:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8033:7:0"
									},
									"scope": 725,
									"src": "7983:58:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 719,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "8055:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8059:2:0"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "8093:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 716,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8092:15:0"
									},
									"scope": 725,
									"src": "8046:62:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "8122:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8128:2:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "8162:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 721,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8161:15:0"
									},
									"scope": 725,
									"src": "8113:64:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3100,
							"src": "7934:245:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 726,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "8203:7:0"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "8203:7:0"
								},
								{
									"baseName": {
										"id": 728,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 78,
										"src": "8212:6:0"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "8212:6:0"
								},
								{
									"baseName": {
										"id": 730,
										"name": "IERC20Extented",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 725,
										"src": "8220:14:0"
									},
									"id": 731,
									"nodeType": "InheritanceSpecifier",
									"src": "8220:14:0"
								},
								{
									"baseName": {
										"id": 732,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "8236:7:0"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "8236:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3099,
							"linearizedBaseContracts": [
								3099,
								342,
								725,
								78,
								11
							],
							"name": "gainZilla",
							"nameLocation": "8190:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 736,
									"libraryName": {
										"id": 734,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "8256:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "8250:27:0",
									"typeName": {
										"id": 735,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8269:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 739,
									"mutability": "constant",
									"name": "_name",
									"nameLocation": "8306:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8282:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 737,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8282:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4761696e5a696c6c61",
										"id": 738,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8314:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_76c7d08d60375d458ae30b00b7f48f4f268c447e43e697dcd4947d8191392be5",
											"typeString": "literal_string \"GainZilla\""
										},
										"value": "GainZilla"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 742,
									"mutability": "constant",
									"name": "_symbol",
									"nameLocation": "8355:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8331:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 740,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "8331:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "52415752",
										"id": 741,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8365:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_d4df68555cd103820f9fc70be0b444e02a2f2cf61437cec93bcc3e959706195a",
											"typeString": "literal_string \"RAWR\""
										},
										"value": "RAWR"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 745,
									"mutability": "constant",
									"name": "_decimals",
									"nameLocation": "8400:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8377:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 743,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "8377:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "39",
										"id": 744,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8412:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_9_by_1",
											"typeString": "int_const 9"
										},
										"value": "9"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 749,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "8455:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8419:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 748,
										"keyType": {
											"id": 746,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8427:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8419:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 747,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8438:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 755,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "8527:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8471:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 754,
										"keyType": {
											"id": 750,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8479:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8471:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 753,
											"keyType": {
												"id": 751,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "8498:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "8490:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 752,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "8509:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 759,
									"mutability": "mutable",
									"name": "_isExcludedFromFee",
									"nameLocation": "8577:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8544:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 758,
										"keyType": {
											"id": 756,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "8552:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "8544:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 757,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "8563:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 766,
									"mutability": "constant",
									"name": "_tTotal",
									"nameLocation": "8626:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8601:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 760,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8601:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 765,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030303030",
											"id": 761,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8636:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"value": "1000000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 764,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 762,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8649:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 763,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8653:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8649:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8636:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 768,
									"mutability": "mutable",
									"name": "_firstBlock",
									"nameLocation": "8696:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8680:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 767,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8680:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 770,
									"mutability": "mutable",
									"name": "_botBlocks",
									"nameLocation": "8729:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8713:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 769,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8713:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "6c0a24eb",
									"id": 777,
									"mutability": "mutable",
									"name": "_maxWalletAmount",
									"nameLocation": "8760:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8745:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 771,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8745:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000001000000000_by_1",
											"typeString": "int_const 10000001000000000"
										},
										"id": 776,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130303030303031",
											"id": 772,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8779:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000001_by_1",
												"typeString": "int_const 10000001"
											},
											"value": "10000001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 775,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 773,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8790:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 774,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8794:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8790:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8779:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000001000000000_by_1",
											"typeString": "int_const 10000001000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01a6c43b",
									"id": 784,
									"mutability": "mutable",
									"name": "numTokensToSwap",
									"nameLocation": "8816:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8801:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 778,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8801:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										},
										"id": 783,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 779,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8834:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											},
											"id": 782,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 780,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8844:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "39",
												"id": 781,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "8848:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_9_by_1",
													"typeString": "int_const 9"
												},
												"value": "9"
											},
											"src": "8844:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000_by_1",
												"typeString": "int_const 1000000000"
											}
										},
										"src": "8834:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000_by_1",
											"typeString": "int_const 1000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc44b6a0",
									"id": 787,
									"mutability": "mutable",
									"name": "_buyLiquidityFee",
									"nameLocation": "8926:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8911:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8911:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 786,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "8945:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 790,
									"mutability": "mutable",
									"name": "_previousBuyLiquidityFee",
									"nameLocation": "8987:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "8971:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 788,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "8971:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 789,
										"name": "_buyLiquidityFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 787,
										"src": "9014:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2843631d",
									"id": 793,
									"mutability": "mutable",
									"name": "_buyEcosystemFee",
									"nameLocation": "9051:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9036:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 791,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9036:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 792,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9070:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 796,
									"mutability": "mutable",
									"name": "_previousBuyEcosystemFee",
									"nameLocation": "9112:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9096:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 794,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9096:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 795,
										"name": "_buyEcosystemFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 793,
										"src": "9139:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c5d24189",
									"id": 799,
									"mutability": "mutable",
									"name": "_buyMarketingFee",
									"nameLocation": "9176:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9161:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 797,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9161:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 798,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9195:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 802,
									"mutability": "mutable",
									"name": "_previousBuyMarketingFee",
									"nameLocation": "9237:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9221:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 800,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9221:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 801,
										"name": "_buyMarketingFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "9264:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c469b6dd",
									"id": 805,
									"mutability": "mutable",
									"name": "_buyTeamFee",
									"nameLocation": "9301:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9286:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 803,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9286:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9315:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 808,
									"mutability": "mutable",
									"name": "_previousBuyTeamFee",
									"nameLocation": "9357:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9341:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 806,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9341:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 807,
										"name": "_buyTeamFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 805,
										"src": "9379:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "88790a68",
									"id": 811,
									"mutability": "mutable",
									"name": "_sellLiquidityFee",
									"nameLocation": "9429:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9414:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 809,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9414:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 810,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9449:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 814,
									"mutability": "mutable",
									"name": "_previousSellLiquidityFee",
									"nameLocation": "9491:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9475:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 812,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9475:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 813,
										"name": "_sellLiquidityFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 811,
										"src": "9519:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "248dd232",
									"id": 817,
									"mutability": "mutable",
									"name": "_sellEcosystemFee",
									"nameLocation": "9557:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9542:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 815,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9542:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 816,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9577:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_previousSellEcosystemFee",
									"nameLocation": "9619:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9603:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 818,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9603:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 819,
										"name": "_sellEcosystemFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 817,
										"src": "9647:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c8607952",
									"id": 823,
									"mutability": "mutable",
									"name": "_sellMarketingFee",
									"nameLocation": "9685:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9670:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 821,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9670:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 822,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9705:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 826,
									"mutability": "mutable",
									"name": "_previousSellMarketingFee",
									"nameLocation": "9747:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9731:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9731:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 825,
										"name": "_sellMarketingFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 823,
										"src": "9775:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "cab03471",
									"id": 829,
									"mutability": "mutable",
									"name": "_sellTeamFee",
									"nameLocation": "9813:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9798:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 827,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9798:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 828,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9828:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "_previousSellTeamFee",
									"nameLocation": "9870:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9854:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 830,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9854:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 831,
										"name": "_sellTeamFee",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 829,
										"src": "9893:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "72b2aecc",
									"id": 835,
									"mutability": "mutable",
									"name": "transferFeeIncreaseFactor",
									"nameLocation": "9926:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "9911:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "9911:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 834,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "9954:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.FeeBreakdown",
									"id": 846,
									"members": [
										{
											"constant": false,
											"id": 837,
											"mutability": "mutable",
											"name": "tLiquidity",
											"nameLocation": "10018:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10010:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 836,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10010:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 839,
											"mutability": "mutable",
											"name": "tMarketing",
											"nameLocation": "10046:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10038:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 838,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10038:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 841,
											"mutability": "mutable",
											"name": "tTeam",
											"nameLocation": "10074:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10066:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 840,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10066:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 843,
											"mutability": "mutable",
											"name": "tEcosystem",
											"nameLocation": "10097:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10089:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 842,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10089:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 845,
											"mutability": "mutable",
											"name": "tAmount",
											"nameLocation": "10125:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 846,
											"src": "10117:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 844,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10117:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeBreakdown",
									"nameLocation": "9987:12:0",
									"nodeType": "StructDefinition",
									"scope": 3099,
									"src": "9980:159:0",
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.StrongHandsConfig",
									"id": 855,
									"members": [
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "10185:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10180:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 847,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10180:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "duration",
											"nameLocation": "10209:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10202:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 849,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "10202:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 854,
											"mutability": "mutable",
											"name": "walletList",
											"nameLocation": "10255:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 855,
											"src": "10227:38:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 853,
												"keyType": {
													"id": 851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "10227:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueType": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StrongHandsConfig",
									"nameLocation": "10152:17:0",
									"nodeType": "StructDefinition",
									"scope": 3099,
									"src": "10145:127:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "787a08a6",
									"id": 858,
									"mutability": "mutable",
									"name": "cooldown",
									"nameLocation": "10302:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10277:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
										"typeString": "struct gainZilla.StrongHandsConfig"
									},
									"typeName": {
										"id": 857,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 856,
											"name": "StrongHandsConfig",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 855,
											"src": "10277:17:0"
										},
										"referencedDeclaration": 855,
										"src": "10277:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage_ptr",
											"typeString": "struct gainZilla.StrongHandsConfig"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "gainZilla.DiamondFloor",
									"id": 869,
									"members": [
										{
											"constant": false,
											"id": 860,
											"mutability": "mutable",
											"name": "enabled",
											"nameLocation": "10352:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10347:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 859,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10347:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "triggerPercentage",
											"nameLocation": "10376:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10369:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 861,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "10369:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "athPrice",
											"nameLocation": "10411:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10403:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 863,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10403:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "sellStopped",
											"nameLocation": "10434:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10429:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 865,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "10429:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "blockedAth",
											"nameLocation": "10463:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 869,
											"src": "10455:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 867,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "10455:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondFloor",
									"nameLocation": "10324:12:0",
									"nodeType": "StructDefinition",
									"scope": 3099,
									"src": "10317:163:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c95457ff",
									"id": 872,
									"mutability": "mutable",
									"name": "diamondFloor",
									"nameLocation": "10505:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10485:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
										"typeString": "struct gainZilla.DiamondFloor"
									},
									"typeName": {
										"id": 871,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 870,
											"name": "DiamondFloor",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 869,
											"src": "10485:12:0"
										},
										"referencedDeclaration": 869,
										"src": "10485:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_DiamondFloor_$869_storage_ptr",
											"typeString": "struct gainZilla.DiamondFloor"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 876,
									"mutability": "mutable",
									"name": "bots",
									"nameLocation": "10557:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10524:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 875,
										"keyType": {
											"id": 873,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "10532:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "10524:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 874,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "10543:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 883,
									"mutability": "mutable",
									"name": "_marketingAddress",
									"nameLocation": "10591:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10567:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 877,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10567:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 880,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10619:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 881,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10619:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 879,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10611:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 878,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10611:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 882,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10611:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 890,
									"mutability": "mutable",
									"name": "_teamAddress",
									"nameLocation": "10657:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10633:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 884,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10633:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 887,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10680:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 888,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10680:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 886,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10672:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 885,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10672:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 889,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10672:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 897,
									"mutability": "mutable",
									"name": "_ecosystemAddress",
									"nameLocation": "10718:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10694:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 891,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10694:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 894,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10746:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 895,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10746:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 893,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10738:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 892,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10738:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 896,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10738:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 904,
									"mutability": "mutable",
									"name": "_lpRecipient",
									"nameLocation": "10784:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10760:55:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 898,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10760:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [],
												"expression": {
													"argumentTypes": [],
													"id": 901,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10807:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
														"typeString": "function () view returns (address)"
													}
												},
												"id": 902,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "10807:7:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 900,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "10799:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 899,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10799:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 903,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "10799:16:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 907,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "10848:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10821:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 905,
											"name": "IUniswapV2Router02",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 707,
											"src": "10821:18:0"
										},
										"referencedDeclaration": 707,
										"src": "10821:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "49bd5a5e",
									"id": 909,
									"mutability": "mutable",
									"name": "uniswapV2Pair",
									"nameLocation": "10884:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10869:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "10869:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 911,
									"mutability": "mutable",
									"name": "_maxTxAmount",
									"nameLocation": "10919:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10903:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 910,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "10903:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ffb54a99",
									"id": 914,
									"mutability": "mutable",
									"name": "tradingOpen",
									"nameLocation": "10950:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10938:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 912,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10938:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10964:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 917,
									"mutability": "mutable",
									"name": "inSwap",
									"nameLocation": "10988:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "10975:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 915,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "10975:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "10997:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "323be1c5",
									"id": 920,
									"mutability": "mutable",
									"name": "canPause",
									"nameLocation": "11020:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "11008:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 918,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11008:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 919,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11031:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "301ad558",
									"id": 923,
									"mutability": "mutable",
									"name": "canBlackList",
									"nameLocation": "11053:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "11041:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 921,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11041:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 922,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11068:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39a53c4e",
									"id": 926,
									"mutability": "mutable",
									"name": "canChangeTax",
									"nameLocation": "11090:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3099,
									"src": "11078:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 924,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11078:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "74727565",
										"id": 925,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11105:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "true"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 930,
									"name": "MaxTxAmountUpdated",
									"nameLocation": "11122:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": false,
												"mutability": "mutable",
												"name": "_maxTxAmount",
												"nameLocation": "11149:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "11141:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11140:22:0"
									},
									"src": "11116:47:0"
								},
								{
									"anonymous": false,
									"id": 940,
									"name": "BuyFeesUpdated",
									"nameLocation": "11174:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyMarketingFee",
												"nameLocation": "11197:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11189:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyLiquidityFee",
												"nameLocation": "11223:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11215:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyTeamFee",
												"nameLocation": "11249:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11241:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "_buyEcosystemFee",
												"nameLocation": "11270:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "11262:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11188:99:0"
									},
									"src": "11168:120:0"
								},
								{
									"anonymous": false,
									"id": 950,
									"name": "SellFeesUpdated",
									"nameLocation": "11299:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellMarketingFee",
												"nameLocation": "11323:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11315:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellLiquidityFee",
												"nameLocation": "11350:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11342:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellTeamFee",
												"nameLocation": "11377:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11369:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"indexed": false,
												"mutability": "mutable",
												"name": "_sellEcosystemFee",
												"nameLocation": "11399:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "11391:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11314:103:0"
									},
									"src": "11293:125:0"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "11445:65:0",
										"statements": [
											{
												"expression": {
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "11455:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11464:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "11455:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "11455:13:0"
											},
											{
												"id": 956,
												"nodeType": "PlaceholderStatement",
												"src": "11478:1:0"
											},
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "inSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "11489:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11498:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11489:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "11489:14:0"
											}
										]
									},
									"id": 962,
									"name": "lockTheSwap",
									"nameLocation": "11433:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11445:0:0"
									},
									"src": "11424:86:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "11529:718:0",
										"statements": [
											{
												"assignments": [
													967
												],
												"declarations": [
													{
														"constant": false,
														"id": 967,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "11558:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "11539:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														},
														"typeName": {
															"id": 966,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 965,
																"name": "IUniswapV2Router02",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 707,
																"src": "11539:18:0"
															},
															"referencedDeclaration": 707,
															"src": "11539:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 971,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307831304544343343373138373134656236336435614135374237384235343730344532353630323445",
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11596:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x10ED43C718714eb63d5aA57B78B54704E256024E"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "IUniswapV2Router02",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "11577:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$707_$",
															"typeString": "type(contract IUniswapV2Router02)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11577:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11539:100:0"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 972,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "11649:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 973,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "11667:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "11649:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "11649:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 979,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11710:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11702:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 977,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11702:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11702:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 983,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "11725:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11717:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11717:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "11743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 976,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "11693:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11693:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "11693:58:0"
											},
											{
												"expression": {
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "uniswapV2Pair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "11761:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 997,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "11842:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$3099",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$3099",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 995,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11834:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11834:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 999,
																		"name": "_uniswapV2Router",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "11849:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																			"typeString": "contract IUniswapV2Router02"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "WETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 630,
																	"src": "11849:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																		"typeString": "function () pure external returns (address)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11849:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 990,
																				"name": "_uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "11795:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			},
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "factory",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 625,
																			"src": "11795:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																				"typeString": "function () pure external returns (address)"
																			}
																		},
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11795:26:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 989,
																	"name": "IUniswapV2Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "11777:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$592_$",
																		"typeString": "type(contract IUniswapV2Factory)"
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11777:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Factory_$592",
																	"typeString": "contract IUniswapV2Factory"
																}
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "createPair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 591,
															"src": "11777:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
																"typeString": "function (address,address) external returns (address)"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11777:96:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11761:112:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "11761:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1011,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "11921:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11913:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11913:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11913:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11943:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1014,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11943:7:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1013,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "11938:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11938:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "11938:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1006,
																	"name": "uniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "11890:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1005,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "11883:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11883:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 50,
														"src": "11883:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11883:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "11883:73:0"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1020,
														"name": "_maxTxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "11967:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1021,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "11982:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11967:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "11967:22:0"
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1024,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "12055:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1027,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1025,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "12065:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12065:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12055:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1028,
														"name": "_tTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "12081:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12055:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "12055:33:0"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1031,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "12098:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1034,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1032,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "12117:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12117:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12098:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12128:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12098:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "12098:34:0"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1038,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "12142:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1043,
														"indexExpression": {
															"arguments": [
																{
																	"id": 1041,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12169:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12161:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12161:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12161:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12142:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12178:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12142:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "12142:40:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12214:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12206:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12206:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12206:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1052,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "12218:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12218:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "_tTotal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "12232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "12197:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12197:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "EmitStatement",
												"src": "12192:48:0"
											}
										]
									},
									"id": 1058,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11526:2:0"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11529:0:0"
									},
									"scope": 3099,
									"src": "11515:732:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										719
									],
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "12316:29:0",
										"statements": [
											{
												"expression": {
													"id": 1064,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 739,
													"src": "12333:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1063,
												"id": 1065,
												"nodeType": "Return",
												"src": "12326:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12262:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1060,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12269:8:0"
									},
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12266:2:0"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "12301:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1061,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:15:0"
									},
									"scope": 3099,
									"src": "12253:92:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										724
									],
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "12416:31:0",
										"statements": [
											{
												"expression": {
													"id": 1073,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 742,
													"src": "12433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1072,
												"id": 1074,
												"nodeType": "Return",
												"src": "12426:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12360:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1069,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12369:8:0"
									},
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12366:2:0"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "12401:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1070,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12401:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12400:15:0"
									},
									"scope": 3099,
									"src": "12351:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										714
									],
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "12512:33:0",
										"statements": [
											{
												"expression": {
													"id": 1082,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 745,
													"src": "12529:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1081,
												"id": 1083,
												"nodeType": "Return",
												"src": "12522:16:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "12462:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1078,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12473:8:0"
									},
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12470:2:0"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "12505:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1079,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "12505:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12504:7:0"
									},
									"scope": 3099,
									"src": "12453:92:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										16
									],
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "12615:31:0",
										"statements": [
											{
												"expression": {
													"id": 1091,
													"name": "_tTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 766,
													"src": "12632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1092,
												"nodeType": "Return",
												"src": "12625:14:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "12560:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1087,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12588:8:0"
									},
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12571:2:0"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "12606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12605:9:0"
									},
									"scope": 3099,
									"src": "12551:95:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										23
									],
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "12727:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1102,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "12744:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1104,
													"indexExpression": {
														"id": 1103,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "12754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12744:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1101,
												"id": 1105,
												"nodeType": "Return",
												"src": "12737:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12661:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1098,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12700:8:0"
									},
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12679:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "12671:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12670:17:0"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "12718:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12717:9:0"
									},
									"scope": 3099,
									"src": "12652:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "12834:37:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1114,
														"name": "bots",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "12851:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1116,
													"indexExpression": {
														"id": 1115,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "12856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12851:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1117,
												"nodeType": "Return",
												"src": "12844:20:0"
											}
										]
									},
									"functionSelector": "3bbac579",
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isBot",
									"nameLocation": "12784:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12798:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "12790:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12789:17:0"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "12828:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1111,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12828:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12827:6:0"
									},
									"scope": 3099,
									"src": "12775:96:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										32
									],
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "12967:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1130,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "12987:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12987:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "13001:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1133,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "13012:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "12977:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12977:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "12977:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1128,
												"id": 1137,
												"nodeType": "Return",
												"src": "13029:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "12890:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12943:8:0"
									},
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "12907:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "12899:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12926:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "12918:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12898:35:0"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "12961:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12961:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12960:6:0"
									},
									"scope": 3099,
									"src": "12881:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										41
									],
									"body": {
										"id": 1155,
										"nodeType": "Block",
										"src": "13145:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1149,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "13162:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1151,
														"indexExpression": {
															"id": 1150,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "13174:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13162:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1153,
													"indexExpression": {
														"id": 1152,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "13181:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13162:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1154,
												"nodeType": "Return",
												"src": "13155:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "13062:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13118:8:0"
									},
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13095:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13087:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13087:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13071:32:0"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "13136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13135:9:0"
									},
									"scope": 3099,
									"src": "13053:143:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										50
									],
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "13285:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1167,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13304:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13304:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "13318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "13327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "13295:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13295:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13295:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13351:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1165,
												"id": 1174,
												"nodeType": "Return",
												"src": "13344:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "13211:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13261:8:0"
									},
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13227:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13218:33:0"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "13279:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13278:6:0"
									},
									"scope": 3099,
									"src": "13202:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										61
									],
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "13474:202:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "13494:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "13502:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "13513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1188,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "13484:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13484:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "13484:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "13539:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1196,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "13546:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13546:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1205,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "13597:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13604:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1198,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 755,
																			"src": "13559:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1200,
																		"indexExpression": {
																			"id": 1199,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "13571:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13559:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1203,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1201,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "13579:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13579:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13559:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "13559:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13559:88:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1194,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "13530:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13530:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "13530:118:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13665:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1187,
												"id": 1211,
												"nodeType": "Return",
												"src": "13658:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "13377:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1184,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "13450:8:0"
									},
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "13398:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13414:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13406:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13433:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13425:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13389:51:0"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "13468:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13467:6:0"
									},
									"scope": 3099,
									"src": "13368:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "13714:672:0",
										"statements": [
											{
												"expression": {
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "13724:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1217,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "13751:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13724:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "13724:43:0"
											},
											{
												"expression": {
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "13777:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1221,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "13804:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13777:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "13777:43:0"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "13830:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "13852:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13830:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "13830:33:0"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "13873:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1229,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "13900:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13873:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "13873:43:0"
											},
											{
												"expression": {
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "13935:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13954:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13935:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "13935:20:0"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "13965:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13965:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "13965:20:0"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1240,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "13995:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14009:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13995:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "13995:15:0"
											},
											{
												"expression": {
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1244,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "14020:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14039:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14020:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "14020:20:0"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1248,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "14051:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1249,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14079:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14051:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "14051:45:0"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1252,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "14106:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1253,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14134:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14106:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "14106:45:0"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "14161:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1257,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14184:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14161:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "14161:35:0"
											},
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1260,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "14206:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1261,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14234:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14206:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "14206:45:0"
											},
											{
												"expression": {
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1264,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14270:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14290:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14270:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "14270:21:0"
											},
											{
												"expression": {
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1268,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14301:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14321:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14301:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1271,
												"nodeType": "ExpressionStatement",
												"src": "14301:21:0"
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1272,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14332:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14332:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "14332:16:0"
											},
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1276,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14358:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14358:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "14358:21:0"
											}
										]
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeAllFee",
									"nameLocation": "13691:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13703:2:0"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13714:0:0"
									},
									"scope": 3099,
									"src": "13682:704:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "14429:420:0",
										"statements": [
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1284,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "14439:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1285,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "14458:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14439:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "14439:43:0"
											},
											{
												"expression": {
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1288,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "14492:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1289,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "14511:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14492:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "14492:43:0"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "14545:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1293,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "14559:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14545:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "14545:33:0"
											},
											{
												"expression": {
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1296,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "14588:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1297,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "14607:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14588:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "14588:43:0"
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1300,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "14642:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1301,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "14662:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14642:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "14642:45:0"
											},
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "14697:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1305,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "14717:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14697:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "14697:45:0"
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1308,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "14752:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1309,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "14767:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14752:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "14752:35:0"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1312,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "14797:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1313,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "14817:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14797:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "14797:45:0"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restoreAllFee",
									"nameLocation": "14405:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14418:2:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14429:0:0"
									},
									"scope": 3099,
									"src": "14396:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "14929:256:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1327,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "14947:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14964:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14956:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1328,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14956:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14956:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14947:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14968:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14939:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "14939:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1337,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "15025:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15044:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15036:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1338,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15036:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15036:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15025:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15048:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15017:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "15017:68:0"
											},
											{
												"expression": {
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1346,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "15095:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1349,
															"indexExpression": {
																"id": 1347,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "15107:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15095:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1350,
														"indexExpression": {
															"id": 1348,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "15114:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15095:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1351,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "15125:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15095:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "15095:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1355,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "15155:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1356,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "15162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "15171:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1354,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "15146:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15146:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "EmitStatement",
												"src": "15141:37:0"
											}
										]
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14864:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14881:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "14873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "14888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14913:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "14905:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14872:48:0"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14929:0:0"
									},
									"scope": 3099,
									"src": "14855:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "15264:3138:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1371,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "15282:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15298:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15290:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1372,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15290:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15290:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15282:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15302:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15274:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15274:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1379,
												"nodeType": "ExpressionStatement",
												"src": "15274:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1381,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "15360:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15374:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15366:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1382,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15366:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15366:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15360:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15378:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 1380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15352:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "15352:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1391,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1367,
																"src": "15434:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15443:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15434:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15446:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															},
															"value": "Transfer amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785",
																"typeString": "literal_string \"Transfer amount must be greater than zero\""
															}
														],
														"id": 1390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15426:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15426:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "15426:64:0"
											},
											{
												"assignments": [
													1398
												],
												"declarations": [
													{
														"constant": false,
														"id": 1398,
														"mutability": "mutable",
														"name": "takeFee",
														"nameLocation": "15506:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "15501:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1397,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15501:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"initialValue": {
													"hexValue": "74727565",
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15501:19:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1401,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "15535:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1402,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "15543:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15543:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15535:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1405,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "15554:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1406,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 265,
																		"src": "15560:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15560:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "15554:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15535:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1410,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "15571:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1413,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "15587:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$3099",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$3099",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15579:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1411,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15579:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15579:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15571:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "15535:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1417,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "15596:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1420,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "15610:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15602:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1418,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15602:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15602:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "15596:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15535:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "15531:2699:0",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "15617:2613:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1425,
																		"name": "tradingOpen",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "15639:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726164696e67206973206e6f7420616374697665",
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15652:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b",
																			"typeString": "literal_string \"Trading is not active\""
																		},
																		"value": "Trading is not active"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1e00c61f0a7b721724fe214bc791e509089379e5d75afe66b9a59ad6bee5002b",
																			"typeString": "literal_string \"Trading is not active\""
																		}
																	],
																	"id": 1424,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "15631:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15631:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1428,
															"nodeType": "ExpressionStatement",
															"src": "15631:45:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1429,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "15694:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1430,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "15702:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "15694:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1432,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "15719:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1435,
																				"name": "uniswapV2Router",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "15733:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																					"typeString": "contract IUniswapV2Router02"
																				}
																			],
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "15725:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1433,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "15725:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15725:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "15719:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15694:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1473,
															"nodeType": "IfStatement",
															"src": "15690:420:0",
															"trueBody": {
																"id": 1472,
																"nodeType": "Block",
																"src": "15751:359:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1439,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "15780:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "15780:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1443,
																						"name": "_botBlocks",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 770,
																						"src": "15815:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1441,
																						"name": "_firstBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 768,
																						"src": "15799:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "15799:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15799:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15780:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1453,
																		"nodeType": "IfStatement",
																		"src": "15776:108:0",
																		"trueBody": {
																			"id": 1452,
																			"nodeType": "Block",
																			"src": "15828:56:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 1450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1446,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "15850:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1448,
																							"indexExpression": {
																								"id": 1447,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1365,
																								"src": "15855:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "15850:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1449,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15861:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "15850:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1451,
																					"nodeType": "ExpressionStatement",
																					"src": "15850:15:0"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"id": 1457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "15906:23:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1454,
																					"name": "_isExcludedFromFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "15907:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1456,
																				"indexExpression": {
																					"id": 1455,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "15926:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "15907:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1471,
																		"nodeType": "IfStatement",
																		"src": "15902:194:0",
																		"trueBody": {
																			"id": 1470,
																			"nodeType": "Block",
																			"src": "15931:165:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1466,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 1463,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1367,
																											"src": "15979:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"id": 1460,
																													"name": "to",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1365,
																													"src": "15971:2:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 1459,
																												"name": "balanceOf",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1107,
																												"src": "15961:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																													"typeString": "function (address) view returns (uint256)"
																												}
																											},
																											"id": 1461,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "15961:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1462,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "add",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 103,
																										"src": "15961:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1464,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "15961:25:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<=",
																								"rightExpression": {
																									"id": 1465,
																									"name": "_maxWalletAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 777,
																									"src": "15990:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15961:45:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "2e77616c6c65742062616c616e6365206166746572207472616e73666572206d757374206265206c657373207468616e206d61782077616c6c657420616d6f756e74",
																								"id": 1467,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16008:68:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								},
																								"value": ".wallet balance after transfer must be less than max wallet amount"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								}
																							],
																							"id": 1458,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "15953:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15953:124:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1469,
																					"nodeType": "ExpressionStatement",
																					"src": "15953:124:0"
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "16140:7:0",
																		"subExpression": {
																			"id": 1474,
																			"name": "inSwap",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "16141:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1476,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "16151:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1477,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "16159:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16151:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "16140:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1480,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "16176:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1481,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "16182:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "16176:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16140:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1632,
															"nodeType": "IfStatement",
															"src": "16136:1766:0",
															"trueBody": {
																"id": 1631,
																"nodeType": "Block",
																"src": "16197:1705:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"id": 1493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1488,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "16231:11:0",
																						"subExpression": {
																							"baseExpression": {
																								"id": 1485,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "16232:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1487,
																							"indexExpression": {
																								"id": 1486,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1363,
																								"src": "16237:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16232:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&&",
																					"rightExpression": {
																						"id": 1492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "16246:9:0",
																						"subExpression": {
																							"baseExpression": {
																								"id": 1489,
																								"name": "bots",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 876,
																								"src": "16247:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																									"typeString": "mapping(address => bool)"
																								}
																							},
																							"id": 1491,
																							"indexExpression": {
																								"id": 1490,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1365,
																								"src": "16252:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16247:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"src": "16231:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 1484,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "16223:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																					"typeString": "function (bool) pure"
																				}
																			},
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16223:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1495,
																		"nodeType": "ExpressionStatement",
																		"src": "16223:33:0"
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1496,
																				"name": "cooldown",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "16324:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																					"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																				}
																			},
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "enabled",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 848,
																			"src": "16324:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1522,
																		"nodeType": "IfStatement",
																		"src": "16320:233:0",
																		"trueBody": {
																			"id": 1521,
																			"nodeType": "Block",
																			"src": "16342:211:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1505,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1499,
																										"name": "block",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967292,
																										"src": "16372:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_block",
																											"typeString": "block"
																										}
																									},
																									"id": 1500,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "timestamp",
																									"nodeType": "MemberAccess",
																									"src": "16372:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": ">=",
																								"rightExpression": {
																									"baseExpression": {
																										"expression": {
																											"id": 1501,
																											"name": "cooldown",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 858,
																											"src": "16391:8:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																												"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																											}
																										},
																										"id": 1502,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "walletList",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 854,
																										"src": "16391:19:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 1504,
																									"indexExpression": {
																										"id": 1503,
																										"name": "from",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1363,
																										"src": "16411:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "16391:25:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "16372:44:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "5374726f6e672048616e64732050726f746f636f6c20616374697665",
																								"id": 1506,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16418:30:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00",
																									"typeString": "literal_string \"Strong Hands Protocol active\""
																								},
																								"value": "Strong Hands Protocol active"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_268446f78394810523a9d9ab5dfb456a808e6d969331d3363f26d133e00f8a00",
																									"typeString": "literal_string \"Strong Hands Protocol active\""
																								}
																							],
																							"id": 1498,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "16364:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16364:85:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1508,
																					"nodeType": "ExpressionStatement",
																					"src": "16364:85:0"
																				},
																				{
																					"expression": {
																						"id": 1519,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"expression": {
																									"id": 1509,
																									"name": "cooldown",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "16471:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																										"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																									}
																								},
																								"id": 1512,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "walletList",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 854,
																								"src": "16471:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 1513,
																							"indexExpression": {
																								"id": 1511,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1363,
																								"src": "16491:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "16471:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1518,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 1514,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "16499:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 1515,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "16499:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"expression": {
																									"id": 1516,
																									"name": "cooldown",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "16517:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																										"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																									}
																								},
																								"id": 1517,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "duration",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 850,
																								"src": "16517:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint32",
																									"typeString": "uint32"
																								}
																							},
																							"src": "16499:35:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16471:63:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1520,
																					"nodeType": "ExpressionStatement",
																					"src": "16471:63:0"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1523,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "16614:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "enabled",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 860,
																			"src": "16614:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1536,
																		"nodeType": "IfStatement",
																		"src": "16610:180:0",
																		"trueBody": {
																			"id": 1535,
																			"nodeType": "Block",
																			"src": "16636:154:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1528,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "!",
																								"prefix": true,
																								"src": "16666:25:0",
																								"subExpression": {
																									"expression": {
																										"id": 1526,
																										"name": "diamondFloor",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 872,
																										"src": "16667:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																											"typeString": "struct gainZilla.DiamondFloor storage ref"
																										}
																									},
																									"id": 1527,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sellStopped",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 866,
																									"src": "16667:24:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "53656c6c732073746f70706564206279204469616d6f6e6420466c6f6f72",
																								"id": 1529,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "16693:32:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																									"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																								},
																								"value": "Sells stopped by Diamond Floor"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_30dd4f997a6ca09c24570e16af51c4dd5e70cd227c7036b9ebf2853f38eba550",
																									"typeString": "literal_string \"Sells stopped by Diamond Floor\""
																								}
																							],
																							"id": 1525,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "16658:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1530,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16658:68:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1531,
																					"nodeType": "ExpressionStatement",
																					"src": "16658:68:0"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 1532,
																							"name": "_checkPriceConditions",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1835,
																							"src": "16748:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																								"typeString": "function ()"
																							}
																						},
																						"id": 1533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16748:23:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1534,
																					"nodeType": "ExpressionStatement",
																					"src": "16748:23:0"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1538
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1538,
																				"mutability": "mutable",
																				"name": "contractTokenBalance",
																				"nameLocation": "16832:20:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1631,
																				"src": "16824:28:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1537,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "16824:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1545,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1542,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "16873:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_gainZilla_$3099",
																								"typeString": "contract gainZilla"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_gainZilla_$3099",
																								"typeString": "contract gainZilla"
																							}
																						],
																						"id": 1541,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "16865:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1540,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "16865:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1543,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16865:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1539,
																				"name": "balanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "16855:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view returns (uint256)"
																				}
																			},
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16855:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "16824:55:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1546,
																				"name": "contractTokenBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1538,
																				"src": "16902:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 1547,
																				"name": "numTokensToSwap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "16926:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16902:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1630,
																		"nodeType": "IfStatement",
																		"src": "16898:969:0",
																		"trueBody": {
																			"id": 1629,
																			"nodeType": "Block",
																			"src": "16943:924:0",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1551,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1549,
																							"name": "contractTokenBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1538,
																							"src": "16969:20:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1550,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "16992:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "16969:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1607,
																					"nodeType": "IfStatement",
																					"src": "16965:679:0",
																					"trueBody": {
																						"id": 1606,
																						"nodeType": "Block",
																						"src": "16995:649:0",
																						"statements": [
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1563,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"id": 1560,
																												"name": "_sellLiquidityFee",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 811,
																												"src": "17088:17:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"id": 1557,
																														"name": "_sellEcosystemFee",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 817,
																														"src": "17065:17:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"id": 1554,
																																"name": "_sellTeamFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 829,
																																"src": "17047:12:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"id": 1552,
																																"name": "_sellMarketingFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 823,
																																"src": "17025:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1553,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "add",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 103,
																															"src": "17025:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1555,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17025:35:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1556,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "add",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 103,
																													"src": "17025:39:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1558,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17025:58:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1559,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "add",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 103,
																											"src": "17025:62:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1561,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "17025:81:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 1562,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "17109:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "17025:85:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1605,
																								"nodeType": "IfStatement",
																								"src": "17021:601:0",
																								"trueBody": {
																									"id": 1604,
																									"nodeType": "Block",
																									"src": "17112:510:0",
																									"statements": [
																										{
																											"assignments": [
																												1565
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 1565,
																													"mutability": "mutable",
																													"name": "autoLPamount",
																													"nameLocation": "17150:12:0",
																													"nodeType": "VariableDeclaration",
																													"scope": 1604,
																													"src": "17142:20:0",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 1564,
																														"name": "uint256",
																														"nodeType": "ElementaryTypeName",
																														"src": "17142:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"visibility": "internal"
																												}
																											],
																											"id": 1582,
																											"initialValue": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"id": 1579,
																																"name": "_sellLiquidityFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 811,
																																"src": "17276:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"arguments": [
																																	{
																																		"id": 1576,
																																		"name": "_sellEcosystemFee",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 817,
																																		"src": "17253:17:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1573,
																																				"name": "_sellTeamFee",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 829,
																																				"src": "17235:12:0",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"id": 1571,
																																				"name": "_sellMarketingFee",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 823,
																																				"src": "17213:17:0",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1572,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "add",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 103,
																																			"src": "17213:21:0",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1574,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "17213:35:0",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1575,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "add",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 103,
																																	"src": "17213:39:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1577,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "17213:58:0",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1578,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "add",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 103,
																															"src": "17213:62:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1580,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17213:81:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"id": 1568,
																																"name": "contractTokenBalance",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1538,
																																"src": "17187:20:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"id": 1566,
																																"name": "_sellLiquidityFee",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 811,
																																"src": "17165:17:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1567,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 180,
																															"src": "17165:21:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1569,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "17165:43:0",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1570,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 196,
																													"src": "17165:47:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1581,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17165:130:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "17142:153:0"
																										},
																										{
																											"assignments": [
																												1584
																											],
																											"declarations": [
																												{
																													"constant": false,
																													"id": 1584,
																													"mutability": "mutable",
																													"name": "minusLP",
																													"nameLocation": "17333:7:0",
																													"nodeType": "VariableDeclaration",
																													"scope": 1604,
																													"src": "17325:15:0",
																													"stateVariable": false,
																													"storageLocation": "default",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													},
																													"typeName": {
																														"id": 1583,
																														"name": "uint256",
																														"nodeType": "ElementaryTypeName",
																														"src": "17325:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"visibility": "internal"
																												}
																											],
																											"id": 1586,
																											"initialValue": {
																												"hexValue": "30",
																												"id": 1585,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "17343:1:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_0_by_1",
																													"typeString": "int_const 0"
																												},
																												"value": "0"
																											},
																											"nodeType": "VariableDeclarationStatement",
																											"src": "17325:19:0"
																										},
																										{
																											"condition": {
																												"commonType": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												"id": 1589,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"leftExpression": {
																													"id": 1587,
																													"name": "contractTokenBalance",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1538,
																													"src": "17378:20:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"nodeType": "BinaryOperation",
																												"operator": ">=",
																												"rightExpression": {
																													"id": 1588,
																													"name": "autoLPamount",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1565,
																													"src": "17402:12:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"src": "17378:36:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											},
																											"id": 1598,
																											"nodeType": "IfStatement",
																											"src": "17374:155:0",
																											"trueBody": {
																												"id": 1597,
																												"nodeType": "Block",
																												"src": "17416:113:0",
																												"statements": [
																													{
																														"expression": {
																															"id": 1595,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"leftHandSide": {
																																"id": 1590,
																																"name": "minusLP",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1584,
																																"src": "17450:7:0",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"nodeType": "Assignment",
																															"operator": "=",
																															"rightHandSide": {
																																"arguments": [
																																	{
																																		"id": 1593,
																																		"name": "autoLPamount",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1565,
																																		"src": "17485:12:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"id": 1591,
																																		"name": "contractTokenBalance",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1538,
																																		"src": "17460:20:0",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1592,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 119,
																																	"src": "17460:24:0",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1594,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "17460:38:0",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"src": "17450:48:0",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"id": 1596,
																														"nodeType": "ExpressionStatement",
																														"src": "17450:48:0"
																													}
																												]
																											}
																										},
																										{
																											"expression": {
																												"arguments": [
																													{
																														"id": 1600,
																														"name": "autoLPamount",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1565,
																														"src": "17573:12:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													{
																														"id": 1601,
																														"name": "minusLP",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1584,
																														"src": "17587:7:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														},
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"id": 1599,
																													"name": "swapAndLiquify",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2005,
																													"src": "17558:14:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																														"typeString": "function (uint256,uint256)"
																													}
																												},
																												"id": 1602,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17558:37:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_tuple$__$",
																													"typeString": "tuple()"
																												}
																											},
																											"id": 1603,
																											"nodeType": "ExpressionStatement",
																											"src": "17558:37:0"
																										}
																									]
																								}
																							}
																						]
																					}
																				},
																				{
																					"assignments": [
																						1609
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1609,
																							"mutability": "mutable",
																							"name": "contractETHBalance",
																							"nameLocation": "17673:18:0",
																							"nodeType": "VariableDeclaration",
																							"scope": 1629,
																							"src": "17665:26:0",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1608,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "17665:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1615,
																					"initialValue": {
																						"expression": {
																							"arguments": [
																								{
																									"id": 1612,
																									"name": "this",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967268,
																									"src": "17702:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_gainZilla_$3099",
																										"typeString": "contract gainZilla"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_contract$_gainZilla_$3099",
																										"typeString": "contract gainZilla"
																									}
																								],
																								"id": 1611,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "17694:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_address_$",
																									"typeString": "type(address)"
																								},
																								"typeName": {
																									"id": 1610,
																									"name": "address",
																									"nodeType": "ElementaryTypeName",
																									"src": "17694:7:0",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1613,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "17694:13:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"id": 1614,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "balance",
																						"nodeType": "MemberAccess",
																						"src": "17694:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "17665:50:0"
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1618,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1616,
																							"name": "contractETHBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1609,
																							"src": "17741:18:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1617,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "17762:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "17741:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1628,
																					"nodeType": "IfStatement",
																					"src": "17737:112:0",
																					"trueBody": {
																						"id": 1627,
																						"nodeType": "Block",
																						"src": "17765:84:0",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"expression": {
																												"arguments": [
																													{
																														"id": 1622,
																														"name": "this",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 4294967268,
																														"src": "17812:4:0",
																														"typeDescriptions": {
																															"typeIdentifier": "t_contract$_gainZilla_$3099",
																															"typeString": "contract gainZilla"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_contract$_gainZilla_$3099",
																															"typeString": "contract gainZilla"
																														}
																													],
																													"id": 1621,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"lValueRequested": false,
																													"nodeType": "ElementaryTypeNameExpression",
																													"src": "17804:7:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_type$_t_address_$",
																														"typeString": "type(address)"
																													},
																													"typeName": {
																														"id": 1620,
																														"name": "address",
																														"nodeType": "ElementaryTypeName",
																														"src": "17804:7:0",
																														"typeDescriptions": {}
																													}
																												},
																												"id": 1623,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "typeConversion",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "17804:13:0",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"id": 1624,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "balance",
																											"nodeType": "MemberAccess",
																											"src": "17804:21:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"id": 1619,
																										"name": "sendETHToFee",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2089,
																										"src": "17791:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																											"typeString": "function (uint256)"
																										}
																									},
																									"id": 1625,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "17791:35:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 1626,
																								"nodeType": "ExpressionStatement",
																								"src": "17791:35:0"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1633,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "17919:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1634,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "17927:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17919:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1636,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "17944:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"id": 1637,
																		"name": "uniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "17950:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "17944:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "17919:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1659,
															"nodeType": "IfStatement",
															"src": "17916:304:0",
															"trueBody": {
																"id": 1658,
																"nodeType": "Block",
																"src": "17965:255:0",
																"statements": [
																	{
																		"condition": {
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "18016:23:0",
																			"subExpression": {
																				"baseExpression": {
																					"id": 1640,
																					"name": "_isExcludedFromFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "18017:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																						"typeString": "mapping(address => bool)"
																					}
																				},
																				"id": 1642,
																				"indexExpression": {
																					"id": 1641,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "18036:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "18017:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1657,
																		"nodeType": "IfStatement",
																		"src": "18012:194:0",
																		"trueBody": {
																			"id": 1656,
																			"nodeType": "Block",
																			"src": "18041:165:0",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1652,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 1649,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1367,
																											"src": "18089:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"arguments": [
																												{
																													"id": 1646,
																													"name": "to",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1365,
																													"src": "18081:2:0",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												],
																												"id": 1645,
																												"name": "balanceOf",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1107,
																												"src": "18071:9:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																													"typeString": "function (address) view returns (uint256)"
																												}
																											},
																											"id": 1647,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "18071:13:0",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1648,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "add",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 103,
																										"src": "18071:17:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1650,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "18071:25:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<=",
																								"rightExpression": {
																									"id": 1651,
																									"name": "_maxWalletAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 777,
																									"src": "18100:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "18071:45:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								}
																							},
																							{
																								"hexValue": "2e77616c6c65742062616c616e6365206166746572207472616e73666572206d757374206265206c657373207468616e206d61782077616c6c657420616d6f756e74",
																								"id": 1653,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "18118:68:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								},
																								"value": ".wallet balance after transfer must be less than max wallet amount"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bool",
																									"typeString": "bool"
																								},
																								{
																									"typeIdentifier": "t_stringliteral_dc954e86b14a46e9e189db5db351f3a75abf6928f229ba2f30a156b0ea581295",
																									"typeString": "literal_string \".wallet balance after transfer must be less than max wallet amount\""
																								}
																							],
																							"id": 1644,
																							"name": "require",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967278,
																								4294967278
																							],
																							"referencedDeclaration": 4294967278,
																							"src": "18063:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (bool,string memory) pure"
																							}
																						},
																						"id": 1654,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "18063:124:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1655,
																					"nodeType": "ExpressionStatement",
																					"src": "18063:124:0"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1662,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "18244:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1664,
														"indexExpression": {
															"id": 1663,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "18263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18244:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 1665,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "18272:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1667,
														"indexExpression": {
															"id": 1666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "18291:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18272:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18244:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1674,
												"nodeType": "IfStatement",
												"src": "18240:96:0",
												"trueBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "18296:40:0",
													"statements": [
														{
															"expression": {
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1669,
																	"name": "takeFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "18310:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18320:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "18310:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1672,
															"nodeType": "ExpressionStatement",
															"src": "18310:15:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "18369:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "18375:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1678,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "18379:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1679,
															"name": "takeFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1398,
															"src": "18387:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1675,
														"name": "_tokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2257,
														"src": "18354:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18354:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "18354:41:0"
											}
										]
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "15204:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15222:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "15214:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15236:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "15228:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15248:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "15240:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15213:42:0"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15264:0:0"
									},
									"scope": 3099,
									"src": "15195:3207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "18478:334:0",
										"statements": [
											{
												"assignments": [
													1694
												],
												"declarations": [
													{
														"constant": false,
														"id": 1694,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "18505:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1744,
														"src": "18488:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1692,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18488:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1693,
															"nodeType": "ArrayTypeName",
															"src": "18488:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1700,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18526:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "18512:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1695,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18516:7:0",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1696,
															"nodeType": "ArrayTypeName",
															"src": "18516:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18512:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18488:40:0"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1701,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "18538:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1703,
														"indexExpression": {
															"hexValue": "30",
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18543:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1706,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "18556:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$3099",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$3099",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18548:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1704,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18548:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18548:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18538:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "18538:23:0"
											},
											{
												"expression": {
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1710,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "18571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1712,
														"indexExpression": {
															"hexValue": "31",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18576:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18571:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1713,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "18581:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 630,
															"src": "18581:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18581:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18571:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1717,
												"nodeType": "ExpressionStatement",
												"src": "18571:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1721,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18630:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18622:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1719,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18622:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18622:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1725,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "18645:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18637:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1723,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18637:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18637:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1727,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "18663:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1718,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "18613:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18613:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "18613:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1733,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "18752:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18765:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1735,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1694,
															"src": "18768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 1738,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18782:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1736,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18774:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18774:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1740,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "18789:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "18789:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1730,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "18685:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "18685:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18685:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "18685:120:0"
											}
										]
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1688,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1687,
												"name": "lockTheSwap",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 962,
												"src": "18466:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18466:11:0"
										}
									],
									"name": "swapTokensForEth",
									"nameLocation": "18420:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "18445:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "18437:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18436:21:0"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18478:0:0"
									},
									"scope": 3099,
									"src": "18411:401:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "18859:767:0",
										"statements": [
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "18877:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1834,
														"src": "18869:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18869:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1750,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "18892:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18892:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18869:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1753,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "18917:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18933:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18917:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1757,
												"nodeType": "IfStatement",
												"src": "18913:30:0",
												"trueBody": {
													"functionReturnParameters": 1747,
													"id": 1756,
													"nodeType": "Return",
													"src": "18936:7:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1758,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "18957:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 1759,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "18972:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "18972:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18957:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1776,
												"nodeType": "IfStatement",
												"src": "18953:169:0",
												"trueBody": {
													"id": 1775,
													"nodeType": "Block",
													"src": "18995:127:0",
													"statements": [
														{
															"expression": {
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1762,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19009:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19009:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1765,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "19033:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19009:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1767,
															"nodeType": "ExpressionStatement",
															"src": "19009:36:0"
														},
														{
															"expression": {
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1768,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19059:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19059:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19086:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "19059:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "19059:32:0"
														},
														{
															"functionReturnParameters": 1747,
															"id": 1774,
															"nodeType": "Return",
															"src": "19105:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1778
												],
												"declarations": [
													{
														"constant": false,
														"id": 1778,
														"mutability": "mutable",
														"name": "thresholdPrice",
														"nameLocation": "19140:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1834,
														"src": "19132:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19132:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31303030",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19255:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1785,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19206:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "triggerPercentage",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 862,
																	"src": "19206:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 1782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19196:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1779,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "19157:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 1780,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "athPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 864,
																			"src": "19157:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 180,
																		"src": "19157:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19157:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "19157:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19157:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "19157:97:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19157:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19132:128:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1792,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "19275:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1793,
														"name": "thresholdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "19290:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19275:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1809,
												"nodeType": "IfStatement",
												"src": "19271:152:0",
												"trueBody": {
													"id": 1808,
													"nodeType": "Block",
													"src": "19306:117:0",
													"statements": [
														{
															"expression": {
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1795,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19320:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19320:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "19320:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1800,
															"nodeType": "ExpressionStatement",
															"src": "19320:31:0"
														},
														{
															"expression": {
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1801,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19365:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 868,
																	"src": "19365:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1804,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19391:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19391:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19365:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1807,
															"nodeType": "ExpressionStatement",
															"src": "19365:47:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1810,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "19437:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 1811,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sellStopped",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 866,
														"src": "19437:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1812,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "19465:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "32",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19509:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 1813,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19481:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "blockedAth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 868,
																	"src": "19481:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "19481:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19481:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "19465:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19437:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1833,
												"nodeType": "IfStatement",
												"src": "19433:187:0",
												"trueBody": {
													"id": 1832,
													"nodeType": "Block",
													"src": "19513:107:0",
													"statements": [
														{
															"expression": {
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1820,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19527:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "sellStopped",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 866,
																	"src": "19527:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19554:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "19527:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1825,
															"nodeType": "ExpressionStatement",
															"src": "19527:32:0"
														},
														{
															"expression": {
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1826,
																		"name": "diamondFloor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 872,
																		"src": "19573:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																			"typeString": "struct gainZilla.DiamondFloor storage ref"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "athPrice",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 864,
																	"src": "19573:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1829,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "19597:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19573:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1831,
															"nodeType": "ExpressionStatement",
															"src": "19573:36:0"
														}
													]
												}
											}
										]
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkPriceConditions",
									"nameLocation": "18827:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18848:2:0"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18859:0:0"
									},
									"scope": 3099,
									"src": "18818:808:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "19683:365:0",
										"statements": [
											{
												"assignments": [
													1841,
													1843,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1841,
														"mutability": "mutable",
														"name": "reserve0",
														"nameLocation": "19702:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "19694:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1840,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "19694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1843,
														"mutability": "mutable",
														"name": "reserve1",
														"nameLocation": "19720:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "19712:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 1842,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "19712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1849,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1845,
																	"name": "uniswapV2Pair",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "19748:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1844,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "19733:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$582_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19733:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$582",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "19733:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19733:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19693:83:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1850,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1841,
															"src": "19790:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19802:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19790:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1853,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "19807:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19819:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19807:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19790:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "19786:44:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1839,
													"id": 1858,
													"nodeType": "Return",
													"src": "19822:8:0"
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1861,
																			"name": "uniswapV2Pair",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "19871:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1860,
																		"name": "IUniswapV2Pair",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "19856:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$582_$",
																			"typeString": "type(contract IUniswapV2Pair)"
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19856:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Pair_$582",
																		"typeString": "contract IUniswapV2Pair"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 510,
																"src": "19856:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19856:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1867,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "19906:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1865,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19898:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19898:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "19856:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1893,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1843,
																		"src": "20031:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20023:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1891,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20023:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20023:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20013:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1885,
																				"name": "reserve0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1841,
																				"src": "19999:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19991:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1883,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "19991:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19991:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "19991:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19991:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "19991:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19991:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "19856:185:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1880,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1841,
																		"src": "19966:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint112",
																			"typeString": "uint112"
																		}
																	],
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19958:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1878,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "19958:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19958:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"hexValue": "31653138",
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19948:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1872,
																				"name": "reserve1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1843,
																				"src": "19934:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			],
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19926:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1870,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "19926:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19926:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 180,
																	"src": "19926:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19926:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "19926:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19926:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1839,
												"id": 1897,
												"nodeType": "Return",
												"src": "19849:192:0"
											}
										]
									},
									"functionSelector": "9491f94d",
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pairPrice",
									"nameLocation": "19641:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19650:2:0"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "19674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19673:9:0"
									},
									"scope": 3099,
									"src": "19632:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "20128:383:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1909,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20155:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1907,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20147:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1913,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "20170:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 1912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20162:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1911,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20162:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20162:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1915,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "20188:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1906,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "20138:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20138:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "20138:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1925,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "20313:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "20305:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1923,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "20305:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20305:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1927,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "20334:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20361:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20405:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1930,
															"name": "_lpRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "20449:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 1931,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "20477:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "20477:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1918,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "20240:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 651,
															"src": "20240:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1921,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1903,
																"src": "20279:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "20240:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20240:264:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "20240:264:0"
											}
										]
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "20067:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "20088:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "20080:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "20109:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "20101:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20079:40:0"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20128:0:0"
									},
									"scope": 3099,
									"src": "20058:453:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "20611:415:0",
										"statements": [
											{
												"assignments": [
													1946
												],
												"declarations": [
													{
														"constant": false,
														"id": 1946,
														"mutability": "mutable",
														"name": "half",
														"nameLocation": "20629:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "20621:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1945,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1951,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20649:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"expression": {
															"id": 1947,
															"name": "lpAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "20636:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "20636:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20636:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20621:30:0"
											},
											{
												"assignments": [
													1953
												],
												"declarations": [
													{
														"constant": false,
														"id": 1953,
														"mutability": "mutable",
														"name": "otherHalf",
														"nameLocation": "20669:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "20661:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1958,
												"initialValue": {
													"arguments": [
														{
															"id": 1956,
															"name": "half",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "20694:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1954,
															"name": "lpAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "20681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "20681:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20681:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20661:38:0"
											},
											{
												"assignments": [
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1960,
														"mutability": "mutable",
														"name": "initialBalance",
														"nameLocation": "20717:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "20709:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20709:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1966,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1963,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "20742:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$3099",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$3099",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 1962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1961,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20734:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20734:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "20734:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20709:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1970,
																	"name": "half",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "20807:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1968,
																	"name": "contractTokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "20782:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "20782:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20782:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1967,
														"name": "swapTokensForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "20765:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20765:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "20765:48:0"
											},
											{
												"assignments": [
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "newBalance",
														"nameLocation": "20831:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2004,
														"src": "20823:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": {
													"arguments": [
														{
															"id": 1982,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "20870:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1978,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "20852:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_gainZilla_$3099",
																			"typeString": "contract gainZilla"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_gainZilla_$3099",
																			"typeString": "contract gainZilla"
																		}
																	],
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20844:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1976,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "20844:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20844:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "20844:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "20844:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20844:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20823:62:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1985,
														"name": "otherHalf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "20899:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20911:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20899:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "IfStatement",
												"src": "20895:125:0",
												"trueBody": {
													"id": 2002,
													"nodeType": "Block",
													"src": "20914:106:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1989,
																		"name": "otherHalf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "20941:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1997,
																						"name": "half",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1946,
																						"src": "21002:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1995,
																						"name": "contractTokenBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1940,
																						"src": "20977:20:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1996,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "20977:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20977:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1992,
																						"name": "half",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1946,
																						"src": "20967:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1990,
																						"name": "newBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1975,
																						"src": "20952:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1991,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 180,
																					"src": "20952:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20952:20:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 196,
																			"src": "20952:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20952:56:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1988,
																	"name": "addLiquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1936,
																	"src": "20928:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20928:81:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2001,
															"nodeType": "ExpressionStatement",
															"src": "20928:81:0"
														}
													]
												}
											}
										]
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1943,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1942,
												"name": "lockTheSwap",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 962,
												"src": "20599:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20599:11:0"
										}
									],
									"name": "swapAndLiquify",
									"nameLocation": "20528:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "lpAmount",
												"nameLocation": "20551:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "20543:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "contractTokenBalance",
												"nameLocation": "20569:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "20561:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20542:48:0"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20611:0:0"
									},
									"scope": 3099,
									"src": "20519:507:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "21078:696:0",
										"statements": [
											{
												"assignments": [
													2011
												],
												"declarations": [
													{
														"constant": false,
														"id": 2011,
														"mutability": "mutable",
														"name": "totalFees",
														"nameLocation": "21096:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2088,
														"src": "21088:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2019,
												"initialValue": {
													"arguments": [
														{
															"id": 2017,
															"name": "_sellTeamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "21153:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2014,
																	"name": "_sellEcosystemFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "21130:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2012,
																	"name": "_sellMarketingFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "21108:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "21108:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21108:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "21108:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21108:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21088:78:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2020,
														"name": "totalFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "21180:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21193:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21180:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2087,
												"nodeType": "IfStatement",
												"src": "21176:592:0",
												"trueBody": {
													"id": 2086,
													"nodeType": "Block",
													"src": "21196:572:0",
													"statements": [
														{
															"assignments": [
																2024
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2024,
																	"mutability": "mutable",
																	"name": "marketingPortion",
																	"nameLocation": "21218:16:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2086,
																	"src": "21210:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2023,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21210:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2032,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2030,
																		"name": "totalFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "21271:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2027,
																				"name": "_sellMarketingFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "21248:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2025,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "21237:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "21237:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21237:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "21237:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21237:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21210:71:0"
														},
														{
															"assignments": [
																2034
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2034,
																	"mutability": "mutable",
																	"name": "teamPortion",
																	"nameLocation": "21303:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2086,
																	"src": "21295:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2033,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21295:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2042,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2040,
																		"name": "totalFees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "21346:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2037,
																				"name": "_sellTeamFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "21328:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2035,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "21317:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "21317:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21317:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "21317:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21317:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21295:61:0"
														},
														{
															"assignments": [
																2044
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2044,
																	"mutability": "mutable",
																	"name": "ecoPortion",
																	"nameLocation": "21378:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2086,
																	"src": "21370:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2043,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21370:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2052,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2050,
																		"name": "teamPortion",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2034,
																		"src": "21424:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2047,
																				"name": "marketingPortion",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2024,
																				"src": "21402:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2045,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2007,
																				"src": "21391:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "21391:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21391:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 119,
																	"src": "21391:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21391:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "21370:66:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2053,
																	"name": "marketingPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "21454:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21473:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21454:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2063,
															"nodeType": "IfStatement",
															"src": "21450:103:0",
															"trueBody": {
																"id": 2062,
																"nodeType": "Block",
																"src": "21476:77:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2059,
																					"name": "marketingPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2024,
																					"src": "21521:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2056,
																					"name": "_marketingAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 883,
																					"src": "21494:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21494:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21494:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2061,
																		"nodeType": "ExpressionStatement",
																		"src": "21494:44:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2064,
																	"name": "teamPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2034,
																	"src": "21570:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21570:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2074,
															"nodeType": "IfStatement",
															"src": "21566:88:0",
															"trueBody": {
																"id": 2073,
																"nodeType": "Block",
																"src": "21587:67:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2070,
																					"name": "teamPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2034,
																					"src": "21627:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2067,
																					"name": "_teamAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 890,
																					"src": "21605:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21605:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21605:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2072,
																		"nodeType": "ExpressionStatement",
																		"src": "21605:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2075,
																	"name": "ecoPortion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "21671:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "21671:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2085,
															"nodeType": "IfStatement",
															"src": "21667:91:0",
															"trueBody": {
																"id": 2084,
																"nodeType": "Block",
																"src": "21687:71:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2081,
																					"name": "ecoPortion",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2044,
																					"src": "21732:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2078,
																					"name": "_ecosystemAddress",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "21705:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 2080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "21705:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 2082,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21705:38:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2083,
																		"nodeType": "ExpressionStatement",
																		"src": "21705:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendETHToFee",
									"nameLocation": "21041:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2007,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21062:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "21054:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21053:16:0"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21078:0:0"
									},
									"scope": 3099,
									"src": "21032:742:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "21841:106:0",
										"statements": [
											{
												"expression": {
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2096,
														"name": "_firstBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "21851:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2097,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "21865:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "21865:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21851:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "21851:29:0"
											},
											{
												"expression": {
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2101,
														"name": "_botBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "21890:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2102,
														"name": "botBlocks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "21903:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21890:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2104,
												"nodeType": "ExpressionStatement",
												"src": "21890:22:0"
											},
											{
												"expression": {
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2105,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "21922:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21936:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "21922:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "21922:18:0"
											}
										]
									},
									"functionSelector": "d1633649",
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2093,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "21829:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21829:11:0"
										}
									],
									"name": "openTrading",
									"nameLocation": "21789:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "botBlocks",
												"nameLocation": "21809:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "21801:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21800:19:0"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21841:0:0"
									},
									"scope": 3099,
									"src": "21780:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "21997:35:0",
										"statements": [
											{
												"expression": {
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2115,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "22007:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22021:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "22007:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "22007:18:0"
											}
										]
									},
									"functionSelector": "8e360253",
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2112,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "21985:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21985:11:0"
										}
									],
									"name": "enableToken",
									"nameLocation": "21962:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21973:2:0"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21997:0:0"
									},
									"scope": 3099,
									"src": "21953:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2134,
										"nodeType": "Block",
										"src": "22083:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2126,
															"name": "canPause",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "22101:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320636f6e74726163742063616e6e6f7420626520706175736564",
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22111:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6",
																"typeString": "literal_string \"this contract cannot be paused\""
															},
															"value": "this contract cannot be paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_046a8fc234c98369d46f45f5bed63e994dab3910bdaebfe1ca0cd49f568245a6",
																"typeString": "literal_string \"this contract cannot be paused\""
															}
														],
														"id": 2125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22093:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22093:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "22093:51:0"
											},
											{
												"expression": {
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2130,
														"name": "tradingOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "22154:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22168:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22154:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2133,
												"nodeType": "ExpressionStatement",
												"src": "22154:19:0"
											}
										]
									},
									"functionSelector": "3e0f966d",
									"id": 2135,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2123,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2122,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22071:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22071:11:0"
										}
									],
									"name": "disableToken",
									"nameLocation": "22047:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22059:2:0"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22083:0:0"
									},
									"scope": 3099,
									"src": "22038:142:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "22238:33:0",
										"statements": [
											{
												"expression": {
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2140,
														"name": "canPause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "22248:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22259:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "22248:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "22248:16:0"
											}
										]
									},
									"functionSelector": "6aabff3f",
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2138,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2137,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22217:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22217:11:0"
										}
									],
									"name": "disablePauseAbility",
									"nameLocation": "22195:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22214:2:0"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22238:0:0"
									},
									"scope": 3099,
									"src": "22186:85:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "22320:159:0",
										"statements": [
											{
												"assignments": [
													2151
												],
												"declarations": [
													{
														"constant": false,
														"id": 2151,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "22338:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 2168,
														"src": "22330:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2150,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2158,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2155,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22374:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22366:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22366:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22366:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2152,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "22356:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22356:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22330:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2159,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2151,
														"src": "22394:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22412:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22394:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2167,
												"nodeType": "IfStatement",
												"src": "22390:83:0",
												"trueBody": {
													"id": 2166,
													"nodeType": "Block",
													"src": "22415:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2163,
																		"name": "contractBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "22446:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2162,
																	"name": "swapTokensForEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "22429:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22429:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2165,
															"nodeType": "ExpressionStatement",
															"src": "22429:33:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c3c8cd80",
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2147,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22308:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22308:11:0"
										}
									],
									"name": "manualswap",
									"nameLocation": "22286:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22296:2:0"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22320:0:0"
									},
									"scope": 3099,
									"src": "22277:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "22528:183:0",
										"statements": [
											{
												"assignments": [
													2175
												],
												"declarations": [
													{
														"constant": false,
														"id": 2175,
														"mutability": "mutable",
														"name": "contractETHBalance",
														"nameLocation": "22546:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 2199,
														"src": "22538:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22538:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2181,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 2178,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "22575:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_gainZilla_$3099",
																	"typeString": "contract gainZilla"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_gainZilla_$3099",
																	"typeString": "contract gainZilla"
																}
															],
															"id": 2177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2176,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22567:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22567:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "22567:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22538:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2182,
														"name": "contractETHBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2175,
														"src": "22602:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22623:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22602:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2198,
												"nodeType": "IfStatement",
												"src": "22598:107:0",
												"trueBody": {
													"id": 2197,
													"nodeType": "Block",
													"src": "22626:79:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2194,
																		"name": "contractETHBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2175,
																		"src": "22675:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2189,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 265,
																							"src": "22656:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																								"typeString": "function () view returns (address)"
																							}
																						},
																						"id": 2190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "22656:7:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "22648:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 2187,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "22648:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22648:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22640:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2185,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22640:8:0",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22640:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "22640:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22640:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2196,
															"nodeType": "ExpressionStatement",
															"src": "22640:54:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6fc3eaec",
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2172,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2171,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22516:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22516:11:0"
										}
									],
									"name": "manualsend",
									"nameLocation": "22494:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22504:2:0"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22528:0:0"
									},
									"scope": 3099,
									"src": "22485:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "22778:121:0",
										"statements": [
											{
												"assignments": [
													2208
												],
												"declarations": [
													{
														"constant": false,
														"id": 2208,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "22796:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2228,
														"src": "22788:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22788:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2215,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22837:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2213,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22829:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22829:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2210,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "22812:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2209,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "22805:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22805:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 2212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 23,
														"src": "22805:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22805:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22788:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2223,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "22876:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22876:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2225,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2208,
															"src": "22885:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2220,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2202,
																	"src": "22860:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2219,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "22853:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$78_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22853:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$78",
																"typeString": "contract IERC20"
															}
														},
														"id": 2222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 32,
														"src": "22853:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22853:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "22853:39:0"
											}
										]
									},
									"functionSelector": "29409395",
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2204,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "22766:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "22766:11:0"
										}
									],
									"name": "manualSendToken",
									"nameLocation": "22726:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "22742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22741:15:0"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22778:0:0"
									},
									"scope": 3099,
									"src": "22717:182:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "23002:153:0",
										"statements": [
											{
												"condition": {
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "23016:8:0",
													"subExpression": {
														"id": 2240,
														"name": "takeFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "23017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2246,
												"nodeType": "IfStatement",
												"src": "23012:58:0",
												"trueBody": {
													"id": 2245,
													"nodeType": "Block",
													"src": "23026:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2242,
																	"name": "removeAllFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "23045:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23045:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2244,
															"nodeType": "ExpressionStatement",
															"src": "23045:14:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2248,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "23097:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2249,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "23105:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2250,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2235,
															"src": "23116:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2247,
														"name": "_transferStandard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "23079:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23079:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "23079:44:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2253,
														"name": "restoreAllFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "23133:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23133:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2255,
												"nodeType": "ExpressionStatement",
												"src": "23133:15:0"
											}
										]
									},
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokenTransfer",
									"nameLocation": "22914:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "22937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "22929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "22953:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "22945:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "22972:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "22964:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "takeFee",
												"nameLocation": "22985:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2257,
												"src": "22980:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22980:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22928:65:0"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23002:0:0"
									},
									"scope": 3099,
									"src": "22905:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2554,
										"nodeType": "Block",
										"src": "23247:1761:0",
										"statements": [
											{
												"assignments": [
													2268
												],
												"declarations": [
													{
														"constant": false,
														"id": 2268,
														"mutability": "mutable",
														"name": "fees",
														"nameLocation": "23277:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2554,
														"src": "23257:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
															"typeString": "struct gainZilla.FeeBreakdown"
														},
														"typeName": {
															"id": 2267,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2266,
																"name": "FeeBreakdown",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 846,
																"src": "23257:12:0"
															},
															"referencedDeclaration": 846,
															"src": "23257:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeBreakdown_$846_storage_ptr",
																"typeString": "struct gainZilla.FeeBreakdown"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2269,
												"nodeType": "VariableDeclarationStatement",
												"src": "23257:24:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2270,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "23295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2271,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "23305:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23295:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2273,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "23322:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"id": 2276,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "23343:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$707",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23335:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23335:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23335:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23322:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23295:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2329,
												"nodeType": "IfStatement",
												"src": "23291:357:0",
												"trueBody": {
													"id": 2328,
													"nodeType": "Block",
													"src": "23361:287:0",
													"statements": [
														{
															"expression": {
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2280,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23381:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2282,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "23381:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23432:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2285,
																					"name": "_buyMarketingFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "23410:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2283,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23399:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23399:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23399:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23399:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23399:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23381:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2291,
															"nodeType": "ExpressionStatement",
															"src": "23381:56:0"
														},
														{
															"expression": {
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2292,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23451:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "23451:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23502:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2297,
																					"name": "_buyLiquidityFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 787,
																					"src": "23480:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2295,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23469:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23469:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23469:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23469:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23469:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23451:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2303,
															"nodeType": "ExpressionStatement",
															"src": "23451:56:0"
														},
														{
															"expression": {
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2304,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23521:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "23521:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23562:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2309,
																					"name": "_buyTeamFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 805,
																					"src": "23545:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2307,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23534:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23534:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23534:23:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23534:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23534:33:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23521:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2315,
															"nodeType": "ExpressionStatement",
															"src": "23521:46:0"
														},
														{
															"expression": {
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2316,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23581:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "23581:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23632:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2321,
																					"name": "_buyEcosystemFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "23610:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2319,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23599:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23599:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23599:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23599:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23599:38:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23581:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2327,
															"nodeType": "ExpressionStatement",
															"src": "23581:56:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2330,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "23661:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2331,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "23671:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23661:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2333,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "23688:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2334,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "23701:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "23688:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "23661:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2386,
												"nodeType": "IfStatement",
												"src": "23657:351:0",
												"trueBody": {
													"id": 2385,
													"nodeType": "Block",
													"src": "23716:292:0",
													"statements": [
														{
															"expression": {
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2337,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23737:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "23737:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23789:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2342,
																					"name": "_sellMarketingFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 823,
																					"src": "23766:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2340,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23755:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23755:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23755:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23755:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23755:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23737:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2348,
															"nodeType": "ExpressionStatement",
															"src": "23737:57:0"
														},
														{
															"expression": {
																"id": 2359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2349,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23808:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2351,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "23808:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23860:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2354,
																					"name": "_sellLiquidityFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 811,
																					"src": "23837:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2352,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23826:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23826:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23826:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23826:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23826:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23808:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2360,
															"nodeType": "ExpressionStatement",
															"src": "23808:57:0"
														},
														{
															"expression": {
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2361,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23879:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "23879:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23921:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2366,
																					"name": "_sellTeamFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "23903:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2364,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23892:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23892:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23892:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23892:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23892:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23879:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2372,
															"nodeType": "ExpressionStatement",
															"src": "23879:47:0"
														},
														{
															"expression": {
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2373,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "23940:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "23940:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31303030",
																			"id": 2381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23992:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2378,
																					"name": "_sellEcosystemFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "23969:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2376,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2263,
																					"src": "23958:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2377,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "23958:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23958:29:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "23958:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "23958:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23940:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2384,
															"nodeType": "ExpressionStatement",
															"src": "23940:57:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2387,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "24021:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2388,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "24031:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "24021:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2390,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "24048:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2391,
															"name": "uniswapV2Pair",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "24061:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "24048:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24021:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2471,
												"nodeType": "IfStatement",
												"src": "24017:522:0",
												"trueBody": {
													"id": 2470,
													"nodeType": "Block",
													"src": "24076:463:0",
													"statements": [
														{
															"expression": {
																"id": 2411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2394,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "24100:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2396,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tMarketing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 839,
																	"src": "24100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24195:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2406,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24164:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2402,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24153:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2399,
																											"name": "_sellMarketingFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 823,
																											"src": "24130:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2397,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2263,
																											"src": "24119:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2398,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24119:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2400,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24119:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2401,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24119:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2403,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24119:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2404,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24118:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24118:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24118:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24118:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24118:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24100:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2412,
															"nodeType": "ExpressionStatement",
															"src": "24100:99:0"
														},
														{
															"expression": {
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2413,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "24213:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tLiquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 837,
																	"src": "24213:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24308:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2425,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24277:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2421,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24266:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2418,
																											"name": "_sellLiquidityFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 811,
																											"src": "24243:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2416,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2263,
																											"src": "24232:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2417,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24232:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2419,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24232:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2420,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24232:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2422,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24232:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2423,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24231:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2424,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24231:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24231:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24231:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24231:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24213:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2431,
															"nodeType": "ExpressionStatement",
															"src": "24213:99:0"
														},
														{
															"expression": {
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2432,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "24326:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tTeam",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 841,
																	"src": "24326:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24411:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2444,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24380:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2440,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24369:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2437,
																											"name": "_sellTeamFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 829,
																											"src": "24351:12:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2435,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2263,
																											"src": "24340:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2436,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24340:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2438,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24340:24:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2439,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24340:28:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2441,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24340:34:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2442,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24339:36:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24339:40:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24339:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24339:71:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24339:76:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24326:89:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2450,
															"nodeType": "ExpressionStatement",
															"src": "24326:89:0"
														},
														{
															"expression": {
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2451,
																		"name": "fees",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2268,
																		"src": "24429:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																			"typeString": "struct gainZilla.FeeBreakdown memory"
																		}
																	},
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "tEcosystem",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 843,
																	"src": "24429:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24524:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2463,
																					"name": "transferFeeIncreaseFactor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 835,
																					"src": "24493:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"components": [
																						{
																							"arguments": [
																								{
																									"hexValue": "31303030",
																									"id": 2459,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24482:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									},
																									"value": "1000"
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_rational_1000_by_1",
																										"typeString": "int_const 1000"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 2456,
																											"name": "_sellEcosystemFee",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 817,
																											"src": "24459:17:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 2454,
																											"name": "amount",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2263,
																											"src": "24448:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 2455,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 180,
																										"src": "24448:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 2457,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "24448:29:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2458,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "div",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 196,
																								"src": "24448:33:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2460,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24448:39:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2461,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "24447:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "24447:45:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24447:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "24447:76:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24447:81:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24429:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2469,
															"nodeType": "ExpressionStatement",
															"src": "24429:99:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2472,
															"name": "fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2268,
															"src": "24557:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																"typeString": "struct gainZilla.FeeBreakdown memory"
															}
														},
														"id": 2474,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 845,
														"src": "24557:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2489,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "24641:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																		"typeString": "struct gainZilla.FeeBreakdown memory"
																	}
																},
																"id": 2490,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tEcosystem",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 843,
																"src": "24641:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2485,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2268,
																			"src": "24625:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																				"typeString": "struct gainZilla.FeeBreakdown memory"
																			}
																		},
																		"id": 2486,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tTeam",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 841,
																		"src": "24625:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2481,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2268,
																					"src": "24604:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																						"typeString": "struct gainZilla.FeeBreakdown memory"
																					}
																				},
																				"id": 2482,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tLiquidity",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 837,
																				"src": "24604:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2477,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2268,
																							"src": "24583:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2478,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tMarketing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 839,
																						"src": "24583:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2475,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2263,
																						"src": "24572:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2476,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 119,
																					"src": "24572:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2479,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24572:27:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 119,
																			"src": "24572:31:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24572:48:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 119,
																	"src": "24572:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24572:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "24572:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24572:85:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24557:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "24557:100:0"
											},
											{
												"expression": {
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2494,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24676:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2496,
														"indexExpression": {
															"id": 2495,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "24686:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24676:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2501,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2263,
																"src": "24718:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2497,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24696:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2499,
																"indexExpression": {
																	"id": 2498,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2259,
																	"src": "24706:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24696:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "24696:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24696:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24676:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "24676:49:0"
											},
											{
												"expression": {
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2505,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24735:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2507,
														"indexExpression": {
															"id": 2506,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "24745:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24735:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2512,
																	"name": "fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "24783:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																		"typeString": "struct gainZilla.FeeBreakdown memory"
																	}
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 845,
																"src": "24783:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2508,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24758:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2510,
																"indexExpression": {
																	"id": 2509,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2261,
																	"src": "24768:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24758:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 103,
															"src": "24758:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24758:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24735:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2516,
												"nodeType": "ExpressionStatement",
												"src": "24735:61:0"
											},
											{
												"expression": {
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2517,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "24806:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2522,
														"indexExpression": {
															"arguments": [
																{
																	"id": 2520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "24824:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_gainZilla_$3099",
																		"typeString": "contract gainZilla"
																	}
																],
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24816:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24816:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24816:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24806:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 2541,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2268,
																			"src": "24919:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																				"typeString": "struct gainZilla.FeeBreakdown memory"
																			}
																		},
																		"id": 2542,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tEcosystem",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 843,
																		"src": "24919:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2537,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2268,
																					"src": "24903:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																						"typeString": "struct gainZilla.FeeBreakdown memory"
																					}
																				},
																				"id": 2538,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "tTeam",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 841,
																				"src": "24903:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2533,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2268,
																							"src": "24882:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2534,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tLiquidity",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 837,
																						"src": "24882:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 2530,
																							"name": "fees",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2268,
																							"src": "24862:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																								"typeString": "struct gainZilla.FeeBreakdown memory"
																							}
																						},
																						"id": 2531,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tMarketing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 839,
																						"src": "24862:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2532,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 103,
																					"src": "24862:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24862:36:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 103,
																			"src": "24862:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24862:52:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 103,
																	"src": "24862:56:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24862:73:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 2523,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 749,
																	"src": "24833:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2528,
																"indexExpression": {
																	"arguments": [
																		{
																			"id": 2526,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "24851:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_gainZilla_$3099",
																				"typeString": "contract gainZilla"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_gainZilla_$3099",
																				"typeString": "contract gainZilla"
																			}
																		],
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "24843:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2524,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "24843:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24843:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24833:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 103,
															"src": "24833:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24833:103:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24806:130:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2546,
												"nodeType": "ExpressionStatement",
												"src": "24806:130:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2548,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "24969:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2549,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "24977:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2550,
																"name": "fees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "24988:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeBreakdown_$846_memory_ptr",
																	"typeString": "struct gainZilla.FeeBreakdown memory"
																}
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 845,
															"src": "24988:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2547,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "24960:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24960:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2553,
												"nodeType": "EmitStatement",
												"src": "24955:46:0"
											}
										]
									},
									"id": 2555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferStandard",
									"nameLocation": "23170:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "23196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "23188:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "23212:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "23204:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2555,
												"src": "23223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23187:51:0"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23247:0:0"
									},
									"scope": 3099,
									"src": "23161:1847:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "25045:2:0",
										"statements": []
									},
									"id": 2559,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25025:2:0"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25045:0:0"
									},
									"scope": 3099,
									"src": "25018:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2572,
										"nodeType": "Block",
										"src": "25113:51:0",
										"statements": [
											{
												"expression": {
													"id": 2570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2566,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "25123:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2568,
														"indexExpression": {
															"id": 2567,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2561,
															"src": "25142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25123:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25153:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25123:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2571,
												"nodeType": "ExpressionStatement",
												"src": "25123:34:0"
											}
										]
									},
									"functionSelector": "437823ec",
									"id": 2573,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2563,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25101:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25101:11:0"
										}
									],
									"name": "excludeFromFee",
									"nameLocation": "25062:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2573,
												"src": "25077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25076:17:0"
									},
									"returnParameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25113:0:0"
									},
									"scope": 3099,
									"src": "25053:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "25230:52:0",
										"statements": [
											{
												"expression": {
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2580,
															"name": "_isExcludedFromFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "25240:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2582,
														"indexExpression": {
															"id": 2581,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "25259:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25240:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25270:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25240:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2585,
												"nodeType": "ExpressionStatement",
												"src": "25240:35:0"
											}
										]
									},
									"functionSelector": "ea2f0b37",
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2578,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2577,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25218:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25218:11:0"
										}
									],
									"name": "includeInFee",
									"nameLocation": "25179:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25200:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "25192:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25191:17:0"
									},
									"returnParameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25230:0:0"
									},
									"scope": 3099,
									"src": "25170:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2600,
										"nodeType": "Block",
										"src": "25349:38:0",
										"statements": [
											{
												"expression": {
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2594,
															"name": "bots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25359:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2596,
														"indexExpression": {
															"id": 2595,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2589,
															"src": "25364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25359:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25375:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25359:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2599,
												"nodeType": "ExpressionStatement",
												"src": "25359:21:0"
											}
										]
									},
									"functionSelector": "5fecd926",
									"id": 2601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2592,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2591,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25337:11:0"
										}
									],
									"name": "removeBot",
									"nameLocation": "25301:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2601,
												"src": "25311:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25310:17:0"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25349:0:0"
									},
									"scope": 3099,
									"src": "25292:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "25447:112:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2609,
															"name": "canBlackList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "25465:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7468697320636f6e74726163742063616e6e6f7420626c61636b6c69737420616464726573736573",
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25479:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad",
																"typeString": "literal_string \"this contract cannot blacklist addresses\""
															},
															"value": "this contract cannot blacklist addresses"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bad442360b6845337bd4003d69c5089367f1b69f213d5a6e716006a978ac85ad",
																"typeString": "literal_string \"this contract cannot blacklist addresses\""
															}
														],
														"id": 2608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25457:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25457:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2612,
												"nodeType": "ExpressionStatement",
												"src": "25457:65:0"
											},
											{
												"expression": {
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2613,
															"name": "bots",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "25532:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2615,
														"indexExpression": {
															"id": 2614,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "25537:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25532:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25548:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "25532:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2618,
												"nodeType": "ExpressionStatement",
												"src": "25532:20:0"
											}
										]
									},
									"functionSelector": "ffecf516",
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2606,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2605,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25435:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25435:11:0"
										}
									],
									"name": "addBot",
									"nameLocation": "25402:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "25417:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "25409:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25408:17:0"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25447:0:0"
									},
									"scope": 3099,
									"src": "25393:166:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "25617:37:0",
										"statements": [
											{
												"expression": {
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2625,
														"name": "canBlackList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "25627:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25642:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "25627:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2628,
												"nodeType": "ExpressionStatement",
												"src": "25627:20:0"
											}
										]
									},
									"functionSelector": "d55cb78a",
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2623,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2622,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25596:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25596:11:0"
										}
									],
									"name": "disableBlackListing",
									"nameLocation": "25574:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25593:2:0"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25617:0:0"
									},
									"scope": 3099,
									"src": "25565:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2641,
										"nodeType": "Block",
										"src": "25748:56:0",
										"statements": [
											{
												"expression": {
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2637,
														"name": "transferFeeIncreaseFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "25758:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2638,
														"name": "_multiplier",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2632,
														"src": "25786:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25758:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "25758:39:0"
											}
										]
									},
									"functionSelector": "a850673d",
									"id": 2642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2635,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2634,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25736:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25736:11:0"
										}
									],
									"name": "setTransferTransactionMultiplier",
									"nameLocation": "25673:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "_multiplier",
												"nameLocation": "25714:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2642,
												"src": "25706:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25705:21:0"
									},
									"returnParameters": {
										"id": 2636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25748:0:0"
									},
									"scope": 3099,
									"src": "25664:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2670,
										"nodeType": "Block",
										"src": "25884:249:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2650,
																"name": "maxWalletAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "25902:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "31303030",
																		"id": 2653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25933:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		}
																	],
																	"expression": {
																		"id": 2651,
																		"name": "_tTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "25921:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "25921:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25921:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25902:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e20302e3125206f6620737570706c79",
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25940:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0",
																"typeString": "literal_string \"Amount must be greater than 0.1% of supply\""
															},
															"value": "Amount must be greater than 0.1% of supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4db68624a2e770077620719acb05295e7dcfc072b9733d6b92c297674c94f0",
																"typeString": "literal_string \"Amount must be greater than 0.1% of supply\""
															}
														],
														"id": 2649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25894:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25894:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2658,
												"nodeType": "ExpressionStatement",
												"src": "25894:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2660,
																"name": "maxWalletAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "26003:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2661,
																"name": "_tTotal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "26022:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26003:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265206c657373207468616e206f7220657175616c20746f20746f74616c537570706c79",
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26031:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004",
																"typeString": "literal_string \"Amount must be less than or equal to totalSupply\""
															},
															"value": "Amount must be less than or equal to totalSupply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b44a94ebbca3d153cb9c59a36d3c7e6533b0baf54384f35b08da2c0561f7e004",
																"typeString": "literal_string \"Amount must be less than or equal to totalSupply\""
															}
														],
														"id": 2659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25995:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "25995:87:0"
											},
											{
												"expression": {
													"id": 2668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2666,
														"name": "_maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "26092:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2667,
														"name": "maxWalletAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2644,
														"src": "26111:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26092:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2669,
												"nodeType": "ExpressionStatement",
												"src": "26092:34:0"
											}
										]
									},
									"functionSelector": "27a14fc2",
									"id": 2671,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2647,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2646,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "25872:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25872:11:0"
										}
									],
									"name": "setMaxWalletAmount",
									"nameLocation": "25819:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "maxWalletAmount",
												"nameLocation": "25846:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2671,
												"src": "25838:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25837:25:0"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25884:0:0"
									},
									"scope": 3099,
									"src": "25810:323:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2748,
										"nodeType": "Block",
										"src": "26264:698:0",
										"statements": [
											{
												"assignments": [
													2685
												],
												"declarations": [
													{
														"constant": false,
														"id": 2685,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "26282:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2748,
														"src": "26274:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2696,
												"initialValue": {
													"arguments": [
														{
															"id": 2694,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "26341:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2691,
																	"name": "teamFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2677,
																	"src": "26328:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2688,
																			"name": "liquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2675,
																			"src": "26310:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2686,
																			"name": "marketingFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2673,
																			"src": "26293:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "26293:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26293:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "26293:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26293:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "26293:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26293:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26274:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2698,
																"name": "totalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2685,
																"src": "26372:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323530",
																"id": 2699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26384:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250_by_1",
																	"typeString": "int_const 250"
																},
																"value": "250"
															},
															"src": "26372:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53756d206f66206275792066656573206d757374206265206c657373207468616e206f7220657175616c20746f20323525",
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26389:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce",
																"typeString": "literal_string \"Sum of buy fees must be less than or equal to 25%\""
															},
															"value": "Sum of buy fees must be less than or equal to 25%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1755f62c229a290ad9b7faac2959e1b3eb8f692fba0f163aae0b9540e4f5fdce",
																"typeString": "literal_string \"Sum of buy fees must be less than or equal to 25%\""
															}
														],
														"id": 2697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26364:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2703,
												"nodeType": "ExpressionStatement",
												"src": "26364:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2705,
															"name": "canChangeTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "26459:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732066756e6374696f6e20697320646961626c6564",
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26473:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															},
															"value": "This function is diabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															}
														],
														"id": 2704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26451:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26451:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2708,
												"nodeType": "ExpressionStatement",
												"src": "26451:49:0"
											},
											{
												"expression": {
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2709,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "26511:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2710,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2673,
														"src": "26530:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26511:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2712,
												"nodeType": "ExpressionStatement",
												"src": "26511:31:0"
											},
											{
												"expression": {
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2713,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "26552:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2714,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2675,
														"src": "26571:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26552:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2716,
												"nodeType": "ExpressionStatement",
												"src": "26552:31:0"
											},
											{
												"expression": {
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2717,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "26593:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2718,
														"name": "teamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2677,
														"src": "26607:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26593:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "26593:21:0"
											},
											{
												"expression": {
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2721,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "26624:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2722,
														"name": "ecosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "26643:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26624:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "26624:31:0"
											},
											{
												"expression": {
													"id": 2727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2725,
														"name": "_previousBuyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "26674:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2726,
														"name": "_buyMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "26701:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26674:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2728,
												"nodeType": "ExpressionStatement",
												"src": "26674:43:0"
											},
											{
												"expression": {
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2729,
														"name": "_previousBuyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "26727:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2730,
														"name": "_buyLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "26754:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26727:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2732,
												"nodeType": "ExpressionStatement",
												"src": "26727:43:0"
											},
											{
												"expression": {
													"id": 2735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2733,
														"name": "_previousBuyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "26780:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2734,
														"name": "_buyTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "26802:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26780:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2736,
												"nodeType": "ExpressionStatement",
												"src": "26780:33:0"
											},
											{
												"expression": {
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2737,
														"name": "_previousBuyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "26823:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2738,
														"name": "_buyEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "26850:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26823:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2740,
												"nodeType": "ExpressionStatement",
												"src": "26823:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2742,
															"name": "marketingFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2673,
															"src": "26905:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2743,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2675,
															"src": "26919:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2744,
															"name": "teamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2677,
															"src": "26933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2745,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "26942:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2741,
														"name": "BuyFeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 940,
														"src": "26890:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26890:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2747,
												"nodeType": "EmitStatement",
												"src": "26885:70:0"
											}
										]
									},
									"functionSelector": "e4bf1bed",
									"id": 2749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2681,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "26252:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "26252:11:0"
										}
									],
									"name": "setBuyTaxes",
									"nameLocation": "26148:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "26168:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "26160:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "26190:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "26182:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "teamFee",
												"nameLocation": "26212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "26204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26204:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "ecosystemFee",
												"nameLocation": "26229:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2749,
												"src": "26221:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26159:83:0"
									},
									"returnParameters": {
										"id": 2683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26264:0:0"
									},
									"scope": 3099,
									"src": "26139:823:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "27094:712:0",
										"statements": [
											{
												"assignments": [
													2763
												],
												"declarations": [
													{
														"constant": false,
														"id": 2763,
														"mutability": "mutable",
														"name": "totalFee",
														"nameLocation": "27112:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2826,
														"src": "27104:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2762,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2774,
												"initialValue": {
													"arguments": [
														{
															"id": 2772,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "27171:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2769,
																	"name": "teamFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2755,
																	"src": "27158:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2766,
																			"name": "liquidityFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2753,
																			"src": "27140:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2764,
																			"name": "marketingFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2751,
																			"src": "27123:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 103,
																		"src": "27123:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27123:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2768,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 103,
																"src": "27123:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27123:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 103,
														"src": "27123:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27123:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27104:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2776,
																"name": "totalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2763,
																"src": "27202:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "323530",
																"id": 2777,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27214:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_250_by_1",
																	"typeString": "int_const 250"
																},
																"value": "250"
															},
															"src": "27202:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53756d206f662073656c6c2066656573206d757374206265206c657373207468616e206f7220657175616c20746f20323525",
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27219:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094",
																"typeString": "literal_string \"Sum of sell fees must be less than or equal to 25%\""
															},
															"value": "Sum of sell fees must be less than or equal to 25%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ead83ef76ea1c4f9fc5432258ce7c66fa12ae4c25d99983db46b0d37058094",
																"typeString": "literal_string \"Sum of sell fees must be less than or equal to 25%\""
															}
														],
														"id": 2775,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27194:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27194:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2781,
												"nodeType": "ExpressionStatement",
												"src": "27194:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2783,
															"name": "canChangeTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "27290:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732066756e6374696f6e20697320646961626c6564",
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27304:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															},
															"value": "This function is diabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c16e27d8b3dc7ef60b76b5fcfd20d370ba809516527639905c66e9f077293ec0",
																"typeString": "literal_string \"This function is diabled\""
															}
														],
														"id": 2782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27282:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27282:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2786,
												"nodeType": "ExpressionStatement",
												"src": "27282:49:0"
											},
											{
												"expression": {
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2787,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "27342:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2788,
														"name": "marketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2751,
														"src": "27362:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27342:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "27342:32:0"
											},
											{
												"expression": {
													"id": 2793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2791,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "27384:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2792,
														"name": "liquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2753,
														"src": "27404:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27384:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2794,
												"nodeType": "ExpressionStatement",
												"src": "27384:32:0"
											},
											{
												"expression": {
													"id": 2797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2795,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "27426:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2796,
														"name": "teamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2755,
														"src": "27441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27426:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2798,
												"nodeType": "ExpressionStatement",
												"src": "27426:22:0"
											},
											{
												"expression": {
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2799,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "27458:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2800,
														"name": "ecosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "27478:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27458:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2802,
												"nodeType": "ExpressionStatement",
												"src": "27458:32:0"
											},
											{
												"expression": {
													"id": 2805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2803,
														"name": "_previousSellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "27509:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2804,
														"name": "_sellMarketingFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "27537:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27509:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2806,
												"nodeType": "ExpressionStatement",
												"src": "27509:45:0"
											},
											{
												"expression": {
													"id": 2809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2807,
														"name": "_previousSellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "27564:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2808,
														"name": "_sellLiquidityFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "27592:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27564:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2810,
												"nodeType": "ExpressionStatement",
												"src": "27564:45:0"
											},
											{
												"expression": {
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2811,
														"name": "_previousSellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "27619:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2812,
														"name": "_sellTeamFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "27642:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27619:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2814,
												"nodeType": "ExpressionStatement",
												"src": "27619:35:0"
											},
											{
												"expression": {
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2815,
														"name": "_previousSellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "27664:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2816,
														"name": "_sellEcosystemFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "27692:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27664:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2818,
												"nodeType": "ExpressionStatement",
												"src": "27664:45:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2820,
															"name": "marketingFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2751,
															"src": "27749:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2821,
															"name": "liquidityFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2753,
															"src": "27763:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2822,
															"name": "teamFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "27777:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2823,
															"name": "ecosystemFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "27786:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2819,
														"name": "SellFeesUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "27733:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27733:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2825,
												"nodeType": "EmitStatement",
												"src": "27728:71:0"
											}
										]
									},
									"functionSelector": "f480fec2",
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2759,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "27082:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27082:11:0"
										}
									],
									"name": "setSellTaxes",
									"nameLocation": "26977:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2751,
												"mutability": "mutable",
												"name": "marketingFee",
												"nameLocation": "26998:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "26990:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2753,
												"mutability": "mutable",
												"name": "liquidityFee",
												"nameLocation": "27020:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "27012:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "teamFee",
												"nameLocation": "27042:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "27034:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "ecosystemFee",
												"nameLocation": "27059:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "27051:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26989:83:0"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27094:0:0"
									},
									"scope": 3099,
									"src": "26968:838:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2836,
										"nodeType": "Block",
										"src": "27861:37:0",
										"statements": [
											{
												"expression": {
													"id": 2834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2832,
														"name": "canChangeTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "27871:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27886:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "27871:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2835,
												"nodeType": "ExpressionStatement",
												"src": "27871:20:0"
											}
										]
									},
									"functionSelector": "99a7b9bc",
									"id": 2837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2830,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2829,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "27840:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27840:11:0"
										}
									],
									"name": "disableTaxChange",
									"nameLocation": "27821:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27837:2:0"
									},
									"returnParameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27861:0:0"
									},
									"scope": 3099,
									"src": "27812:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2848,
										"nodeType": "Block",
										"src": "27991:53:0",
										"statements": [
											{
												"expression": {
													"id": 2846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2844,
														"name": "_ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "28001:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2845,
														"name": "ecosystemAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2839,
														"src": "28021:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28001:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2847,
												"nodeType": "ExpressionStatement",
												"src": "28001:36:0"
											}
										]
									},
									"functionSelector": "db0045ec",
									"id": 2849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2841,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "27979:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "27979:11:0"
										}
									],
									"name": "updateEcosystemAddress",
									"nameLocation": "27913:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2839,
												"mutability": "mutable",
												"name": "ecosystemAddress",
												"nameLocation": "27952:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2849,
												"src": "27936:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27936:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27935:34:0"
									},
									"returnParameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27991:0:0"
									},
									"scope": 3099,
									"src": "27904:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2860,
										"nodeType": "Block",
										"src": "28141:53:0",
										"statements": [
											{
												"expression": {
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2856,
														"name": "_marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "28151:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2857,
														"name": "marketingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2851,
														"src": "28171:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28151:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2859,
												"nodeType": "ExpressionStatement",
												"src": "28151:36:0"
											}
										]
									},
									"functionSelector": "2369bf83",
									"id": 2861,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2854,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2853,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28129:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28129:11:0"
										}
									],
									"name": "updateMarketingAddress",
									"nameLocation": "28063:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "marketingAddress",
												"nameLocation": "28102:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "28086:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28086:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28085:34:0"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28141:0:0"
									},
									"scope": 3099,
									"src": "28054:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2872,
										"nodeType": "Block",
										"src": "28281:43:0",
										"statements": [
											{
												"expression": {
													"id": 2870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2868,
														"name": "_teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "28291:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2869,
														"name": "teamAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2863,
														"src": "28306:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28291:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2871,
												"nodeType": "ExpressionStatement",
												"src": "28291:26:0"
											}
										]
									},
									"functionSelector": "14eb76ac",
									"id": 2873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2866,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2865,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28269:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28269:11:0"
										}
									],
									"name": "updateTeamAddress",
									"nameLocation": "28213:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "teamAddress",
												"nameLocation": "28247:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2873,
												"src": "28231:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28231:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28230:29:0"
									},
									"returnParameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28281:0:0"
									},
									"scope": 3099,
									"src": "28204:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2884,
										"nodeType": "Block",
										"src": "28408:43:0",
										"statements": [
											{
												"expression": {
													"id": 2882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2880,
														"name": "_lpRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "28418:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2881,
														"name": "lpRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2875,
														"src": "28433:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "28418:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 2883,
												"nodeType": "ExpressionStatement",
												"src": "28418:26:0"
											}
										]
									},
									"functionSelector": "cdb3858f",
									"id": 2885,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2878,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2877,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28396:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28396:11:0"
										}
									],
									"name": "updateLpRecipient",
									"nameLocation": "28340:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "lpRecipient",
												"nameLocation": "28374:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2885,
												"src": "28358:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28358:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28357:29:0"
									},
									"returnParameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28408:0:0"
									},
									"scope": 3099,
									"src": "28331:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "28528:44:0",
										"statements": [
											{
												"expression": {
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2892,
														"name": "numTokensToSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "28538:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2893,
														"name": "numTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2887,
														"src": "28556:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28538:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2895,
												"nodeType": "ExpressionStatement",
												"src": "28538:27:0"
											}
										]
									},
									"functionSelector": "e315a6da",
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2890,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2889,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28516:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28516:11:0"
										}
									],
									"name": "updateNumTokensToSwap",
									"nameLocation": "28466:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "numTokens",
												"nameLocation": "28496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "28488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28487:19:0"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28528:0:0"
									},
									"scope": 3099,
									"src": "28457:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2920,
										"nodeType": "Block",
										"src": "28658:93:0",
										"statements": [
											{
												"expression": {
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2906,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "28668:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																"typeString": "struct gainZilla.StrongHandsConfig storage ref"
															}
														},
														"id": 2908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "28668:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2909,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "28687:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28668:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "28668:26:0"
											},
											{
												"expression": {
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2912,
															"name": "cooldown",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "28704:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																"typeString": "struct gainZilla.StrongHandsConfig storage ref"
															}
														},
														"id": 2914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "duration",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 850,
														"src": "28704:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"id": 2917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2915,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "28724:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31",
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28735:9:0",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "1"
														},
														"src": "28724:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "28704:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2919,
												"nodeType": "ExpressionStatement",
												"src": "28704:40:0"
											}
										]
									},
									"functionSelector": "729cb3f2",
									"id": 2921,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2904,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2903,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "28648:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28648:9:0"
										}
									],
									"name": "configureStrongHands",
									"nameLocation": "28587:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "28613:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "28608:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2898,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28608:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "28629:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "28622:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2900,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "28622:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28607:31:0"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28658:0:0"
									},
									"scope": 3099,
									"src": "28578:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "28930:365:0",
										"statements": [
											{
												"assignments": [
													2935
												],
												"declarations": [
													{
														"constant": false,
														"id": 2935,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "28948:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2989,
														"src": "28940:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2934,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2953,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"expression": {
																	"id": 2936,
																	"name": "cooldown",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "28960:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																		"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																	}
																},
																"id": 2937,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "walletList",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 854,
																"src": "28960:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2939,
															"indexExpression": {
																"id": 2938,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "28980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28960:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 2940,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "28991:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "28991:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "28960:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "30",
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29074:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "28960:115:0",
													"trueExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2948,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "29055:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "29055:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2943,
																		"name": "cooldown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "29022:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StrongHandsConfig_$855_storage",
																			"typeString": "struct gainZilla.StrongHandsConfig storage ref"
																		}
																	},
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "walletList",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 854,
																	"src": "29022:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2946,
																"indexExpression": {
																	"id": 2945,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2923,
																	"src": "29042:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29022:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "29022:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29022:49:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28940:135:0"
											},
											{
												"expression": {
													"id": 2959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2954,
														"name": "days_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2926,
														"src": "29094:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3836343030",
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29116:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "86400"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															],
															"expression": {
																"id": 2955,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2935,
																"src": "29102:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29102:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29102:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29094:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2960,
												"nodeType": "ExpressionStatement",
												"src": "29094:28:0"
											},
											{
												"expression": {
													"id": 2963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2961,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "29132:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "3836343030",
														"id": 2962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29145:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "29132:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2964,
												"nodeType": "ExpressionStatement",
												"src": "29132:18:0"
											},
											{
												"expression": {
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2965,
														"name": "hours_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2928,
														"src": "29160:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "33363030",
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29183:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																}
															],
															"expression": {
																"id": 2966,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2935,
																"src": "29169:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29169:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29169:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29160:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2971,
												"nodeType": "ExpressionStatement",
												"src": "29160:28:0"
											},
											{
												"expression": {
													"id": 2974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2972,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "29198:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "%=",
													"rightHandSide": {
														"hexValue": "33363030",
														"id": 2973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29211:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3600_by_1",
															"typeString": "int_const 3600"
														},
														"value": "3600"
													},
													"src": "29198:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2975,
												"nodeType": "ExpressionStatement",
												"src": "29198:17:0"
											},
											{
												"expression": {
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2976,
														"name": "minutes_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2930,
														"src": "29225:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3630",
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29250:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																}
															],
															"expression": {
																"id": 2977,
																"name": "remaining",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2935,
																"src": "29236:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "29236:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29236:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29225:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2982,
												"nodeType": "ExpressionStatement",
												"src": "29225:28:0"
											},
											{
												"expression": {
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2983,
														"name": "seconds_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "29263:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2984,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2935,
															"src": "29274:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "3630",
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29286:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_60_by_1",
																"typeString": "int_const 60"
															},
															"value": "60"
														},
														"src": "29274:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29263:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "29263:25:0"
											}
										]
									},
									"functionSelector": "9d82190f",
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cooldownRemaining",
									"nameLocation": "28766:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28792:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "28784:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28783:17:0"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "days_",
												"nameLocation": "28839:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "28831:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "hours_",
												"nameLocation": "28863:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "28855:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "minutes_",
												"nameLocation": "28888:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "28880:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "seconds_",
												"nameLocation": "28915:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "28907:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28907:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28821:108:0"
									},
									"scope": 3099,
									"src": "28757:538:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3042,
										"nodeType": "Block",
										"src": "29391:464:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															"id": 3002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3000,
																"name": "triggerPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2994,
																"src": "29409:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29429:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "29409:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "547269676765722070657263656e74616765206d757374206265203c203130303020283130302529",
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29435:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2b395aa8b334883aaf144e056e173c4c011f3bbc0306d65251aa06fa2fbde663",
																"typeString": "literal_string \"Trigger percentage must be < 1000 (100%)\""
															},
															"value": "Trigger percentage must be < 1000 (100%)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2b395aa8b334883aaf144e056e173c4c011f3bbc0306d65251aa06fa2fbde663",
																"typeString": "literal_string \"Trigger percentage must be < 1000 (100%)\""
															}
														],
														"id": 2999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29401:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3005,
												"nodeType": "ExpressionStatement",
												"src": "29401:77:0"
											},
											{
												"expression": {
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3006,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "29488:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 3008,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "enabled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 860,
														"src": "29488:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3009,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2992,
														"src": "29511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29488:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3011,
												"nodeType": "ExpressionStatement",
												"src": "29488:30:0"
											},
											{
												"expression": {
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3012,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "29528:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 3014,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "triggerPercentage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 862,
														"src": "29528:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3015,
														"name": "triggerPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2994,
														"src": "29561:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "29528:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 3017,
												"nodeType": "ExpressionStatement",
												"src": "29528:50:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3018,
														"name": "enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2992,
														"src": "29647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3019,
																"name": "diamondFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "29658:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																	"typeString": "struct gainZilla.DiamondFloor storage ref"
																}
															},
															"id": 3020,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "athPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "29658:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29683:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "29658:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29647:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3041,
												"nodeType": "IfStatement",
												"src": "29643:206:0",
												"trueBody": {
													"id": 3040,
													"nodeType": "Block",
													"src": "29686:163:0",
													"statements": [
														{
															"assignments": [
																3025
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3025,
																	"mutability": "mutable",
																	"name": "currentPrice",
																	"nameLocation": "29708:12:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3040,
																	"src": "29700:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3024,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29700:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3028,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3026,
																	"name": "pairPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1899,
																	"src": "29723:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 3027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29723:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29700:34:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3029,
																	"name": "currentPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3025,
																	"src": "29752:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29767:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "29752:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3039,
															"nodeType": "IfStatement",
															"src": "29748:91:0",
															"trueBody": {
																"id": 3038,
																"nodeType": "Block",
																"src": "29770:69:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 3032,
																					"name": "diamondFloor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "29788:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																						"typeString": "struct gainZilla.DiamondFloor storage ref"
																					}
																				},
																				"id": 3034,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "athPrice",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 864,
																				"src": "29788:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3035,
																				"name": "currentPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3025,
																				"src": "29812:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29788:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3037,
																		"nodeType": "ExpressionStatement",
																		"src": "29788:36:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "fe0bb982",
									"id": 3043,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2997,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2996,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 277,
												"src": "29381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29381:9:0"
										}
									],
									"name": "configureDiamondFloor",
									"nameLocation": "29310:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "enabled",
												"nameLocation": "29337:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "29332:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2991,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29332:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2994,
												"mutability": "mutable",
												"name": "triggerPercentage",
												"nameLocation": "29353:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3043,
												"src": "29346:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2993,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "29346:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29331:40:0"
									},
									"returnParameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29391:0:0"
									},
									"scope": 3099,
									"src": "29301:554:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "29913:636:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3048,
															"name": "diamondFloor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "29923:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																"typeString": "struct gainZilla.DiamondFloor storage ref"
															}
														},
														"id": 3049,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "athPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "29923:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29923:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3054,
												"nodeType": "IfStatement",
												"src": "29919:40:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 3052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29958:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 3047,
													"id": 3053,
													"nodeType": "Return",
													"src": "29951:8:0"
												}
											},
											{
												"assignments": [
													3056
												],
												"declarations": [
													{
														"constant": false,
														"id": 3056,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "29973:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3097,
														"src": "29965:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3059,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3057,
														"name": "pairPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "29988:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 3058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29988:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29965:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3060,
															"name": "currentPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3056,
															"src": "30017:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 3061,
																"name": "diamondFloor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "30032:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																	"typeString": "struct gainZilla.DiamondFloor storage ref"
																}
															},
															"id": 3062,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "athPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 864,
															"src": "30032:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "30017:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "30350:192:0",
														"subExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 3090,
																				"name": "diamondFloor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "30510:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																					"typeString": "struct gainZilla.DiamondFloor storage ref"
																				}
																			},
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "athPrice",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 864,
																			"src": "30510:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "3130306531",
																					"id": 3087,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30428:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "100e1"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 3084,
																							"name": "currentPrice",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3056,
																							"src": "30397:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 3081,
																								"name": "diamondFloor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 872,
																								"src": "30371:12:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																									"typeString": "struct gainZilla.DiamondFloor storage ref"
																								}
																							},
																							"id": 3082,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "athPrice",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 864,
																							"src": "30371:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 3083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 119,
																						"src": "30371:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 3085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30371:39:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 180,
																				"src": "30371:56:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 3088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30371:63:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 196,
																		"src": "30371:138:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30371:161:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30351:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 3079,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30351:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30351:191:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "30017:525:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3075,
																			"name": "diamondFloor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 872,
																			"src": "30265:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																				"typeString": "struct gainZilla.DiamondFloor storage ref"
																			}
																		},
																		"id": 3076,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "athPrice",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 864,
																		"src": "30265:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "3130306531",
																				"id": 3072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30183:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				},
																				"value": "100e1"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000_by_1",
																					"typeString": "int_const 1000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 3068,
																							"name": "diamondFloor",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 872,
																							"src": "30143:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondFloor_$869_storage",
																								"typeString": "struct gainZilla.DiamondFloor storage ref"
																							}
																						},
																						"id": 3069,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "athPrice",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 864,
																						"src": "30143:21:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 3066,
																						"name": "currentPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3056,
																						"src": "30126:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3067,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 119,
																					"src": "30126:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30126:39:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 180,
																			"src": "30126:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30126:63:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 196,
																	"src": "30126:138:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30126:161:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30106:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 3064,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "30106:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30106:191:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3047,
												"id": 3096,
												"nodeType": "Return",
												"src": "30010:532:0"
											}
										]
									},
									"functionSelector": "80670f3c",
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ATHvariance",
									"nameLocation": "29870:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29881:2:0"
									},
									"returnParameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3098,
												"src": "29905:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3045,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29905:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29904:8:0"
									},
									"scope": 3099,
									"src": "29861:688:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3100,
							"src": "8181:22370:0",
							"usedErrors": []
						}
					],
					"src": "682:29869:0"
				},
				"id": 0
			}
		}
	}
}